<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yongtao&#39;s Blog</title>
  
  <subtitle>坚守 无畏 宽容 进取</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-10-30T05:38:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangyt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker Swarm节点维护标签</title>
    <link href="http://yoursite.com/2018/10/30/Docker%20Swarm%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/10/30/Docker Swarm节点维护标签/</id>
    <published>2018-10-30T07:50:00.000Z</published>
    <updated>2018-10-30T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Swarm节点维护标签"><a href="#Swarm节点维护标签" class="headerlink" title="Swarm节点维护标签"></a>Swarm节点维护标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@docker_001 ~]<span class="comment"># docker node ls</span></div><div class="line">ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION</div><div class="line">lw72u2jd7xi1xagw94cmd86kk *   docker_001          Ready               Active              Leader              18.06.1-ce</div><div class="line">2igmbyfampcduad32ustl00y8     docker_003          Ready               Active                                  18.06.1-ce</div><div class="line">wudald9nltt9mq9jo9aau3tvf     docker_005          Ready               Active                                  18.06.1-ce</div><div class="line"></div><div class="line"><span class="comment"># 增加一个type=dop的标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node update --label-add type=dop lw72u2jd7xi1xagw94cmd86kk</span></div><div class="line">lw72u2jd7xi1xagw94cmd86kk</div><div class="line"></div><div class="line">&lt;!--more--&gt;</div><div class="line"></div><div class="line"><span class="comment"># 查看标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node inspect lw72u2jd7xi1xagw94cmd86kk --pretty</span></div><div class="line">ID:lw72u2jd7xi1xagw94cmd86kk</div><div class="line">Labels:</div><div class="line"> - <span class="built_in">type</span>=dop</div><div class="line">Hostname:              docker_001</div><div class="line">Joined at:             2018-10-24 13:52:32.919572847 +0000 utc</div><div class="line">...</div><div class="line"></div><div class="line"><span class="comment"># 移除标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node update --label-rm type lw72u2jd7xi1xagw94cmd86kk</span></div><div class="line">lw72u2jd7xi1xagw94cmd86kk</div><div class="line">[root@docker_001 ~]<span class="comment"># docker node inspect lw72u2jd7xi1xagw94cmd86kk --pretty</span></div><div class="line">ID:lw72u2jd7xi1xagw94cmd86kk</div><div class="line">Hostname:              docker_001</div><div class="line">Joined at:             2018-10-24 13:52:32.919572847 +0000 utc</div></pre></td></tr></table></figure><p><a href="https://docs.docker.com/engine/swarm/manage-nodes/#add-or-remove-label-metadata" target="_blank" rel="external">Add-or-remove-label-metadata</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Swarm节点维护标签&quot;&gt;&lt;a href=&quot;#Swarm节点维护标签&quot; class=&quot;headerlink&quot; title=&quot;Swarm节点维护标签&quot;&gt;&lt;/a&gt;Swarm节点维护标签&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Deploy a stack to a swarm</title>
    <link href="http://yoursite.com/2018/10/30/Deploy%20a%20stack%20to%20a%20swarm/"/>
    <id>http://yoursite.com/2018/10/30/Deploy a stack to a swarm/</id>
    <published>2018-10-30T05:38:00.000Z</published>
    <updated>2018-10-30T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.docker.com/engine/swarm/stack-deploy/" target="_blank" rel="external">Deploy a stack to a swarm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/swarm/stack-deploy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deploy a stack to a swarm&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Powershell会话中设置环境变量</title>
    <link href="http://yoursite.com/2018/10/30/Powershell%E4%BC%9A%E8%AF%9D%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2018/10/30/Powershell会话中设置环境变量/</id>
    <published>2018-10-30T02:30:00.000Z</published>
    <updated>2018-10-30T02:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Powershell会话中设置环境变量"><a href="#Powershell会话中设置环境变量" class="headerlink" title="Powershell会话中设置环境变量"></a>Powershell会话中设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">PS C:\personal\idea\cloud-cook&gt; ls env:DOCKER_HOST</div><div class="line"></div><div class="line">Name                           Value</div><div class="line">----                           -----</div><div class="line">DOCKER_HOST                    tcp://192.168.1.114:2375</div><div class="line"></div><div class="line"></div><div class="line">PS C:\personal\idea\cloud-cook&gt; <span class="variable">$env</span>:DOCKER_HOST=<span class="string">"tcp://192.168.21.129:2375"</span>   <span class="comment"># 在当前会话中创建DOCKER_HOST环境变量</span></div><div class="line">PS C:\personal\idea\cloud-cook&gt; ls env:DOCKER_HOST</div><div class="line"></div><div class="line">Name                           Value</div><div class="line">----                           -----</div><div class="line">DOCKER_HOST                    tcp://192.168.21.129:2375</div></pre></td></tr></table></figure><p>More info: <a href="https://www.pstips.net/powershell-environment-variables.html" target="_blank" rel="external">Powershell环境变量</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Powershell会话中设置环境变量&quot;&gt;&lt;a href=&quot;#Powershell会话中设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;Powershell会话中设置环境变量&quot;&gt;&lt;/a&gt;Powershell会话中设置环境变量&lt;/h3&gt;&lt;figu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker Swarm 一、 概述</title>
    <link href="http://yoursite.com/2018/10/26/Docker%20Swarm%20%E4%B8%80%E3%80%81%20%E6%A6%82%E8%BF%B0/"/>
    <id>http://yoursite.com/2018/10/26/Docker Swarm 一、 概述/</id>
    <published>2018-10-26T11:36:00.000Z</published>
    <updated>2018-10-26T11:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>自docker engine 1.12引入swarm模式后，可由一个或多个docker引擎组成一个集群，称之为swarm，一个swarm由一个或多个节点组成。</p><h3 id="关键概念"><a href="#关键概念" class="headerlink" title="关键概念"></a>关键概念</h3><h4 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h4><p>swarm节点分为两种类型：<code>manager</code>和<code>worker</code>，</p><p>Manager节点维护集群状态，调度服务，提供swarm模式下的API服务等，多个Manager节点只有一个leader执行编排任务；</p><p>Worker节点接收并执行从Manager节点分派的任务，默认情况下Manager节点同时也是Worker节点；</p><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>服务是对在管理节点和工作节点执行任务的定义，创建服务时可以指定具体使用的镜像和容器中执行的命令等。</p><p>服务有两种模式:<code>replicated</code> 和 <code>global</code></p><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p><a href="https://docs.docker.com/engine/swarm/" target="_blank" rel="external">Swarm mode overview</a><br><a href="https://docs.docker.com/engine/swarm/key-concepts/" target="_blank" rel="external">Swarm mode key concepts</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自docker engine 1.12引入swarm模式后，可由一个或多个docker引擎组成一个集群，称之为swarm，一个swarm由一个或多个节点组成。&lt;/p&gt;
&lt;h3 id=&quot;关键概念&quot;&gt;&lt;a href=&quot;#关键概念&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Docker install</title>
    <link href="http://yoursite.com/2018/10/25/Docker%20install/"/>
    <id>http://yoursite.com/2018/10/25/Docker install/</id>
    <published>2018-10-25T05:29:00.000Z</published>
    <updated>2018-10-25T05:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Uninstall-old-versions"><a href="#Uninstall-old-versions" class="headerlink" title="Uninstall old versions"></a>Uninstall old versions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum remove docker \</span></div><div class="line">  docker-client \</div><div class="line">  docker-client-latest \</div><div class="line">  docker-common \</div><div class="line">  docker-latest \</div><div class="line">  docker-latest-logrotate \</div><div class="line">  docker-logrotate \</div><div class="line">  docker-selinux \</div><div class="line">  docker-engine-selinux \</div><div class="line">  docker-engine</div></pre></td></tr></table></figure><a id="more"></a><h3 id="Install-Docker-CE"><a href="#Install-Docker-CE" class="headerlink" title="Install Docker CE"></a>Install Docker CE</h3><h4 id="Install-required-packages"><a href="#Install-required-packages" class="headerlink" title="Install required packages"></a>Install required packages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum install -y yum-utils \</span></div><div class="line">  device-mapper-persistent-data \</div><div class="line">  lvm2</div></pre></td></tr></table></figure><h4 id="Use-the-following-command-to-set-up-the-stable-repository"><a href="#Use-the-following-command-to-set-up-the-stable-repository" class="headerlink" title="Use the following command to set up the stable repository"></a>Use the following command to set up the stable repository</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 注意设置阿里云repo</span></div><div class="line">[root@docker_007 ~]<span class="comment"># yum-config-manager \</span></div><div class="line">    --add-repo \</div><div class="line">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</div><div class="line">[root@docker_007 ~]<span class="comment"># yum makecache fast</span></div></pre></td></tr></table></figure><h4 id="Install-Docker-CE-1"><a href="#Install-Docker-CE-1" class="headerlink" title="Install Docker CE"></a>Install Docker CE</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum install docker-ce</span></div><div class="line">[root@docker_007 ~]<span class="comment"># docker -v</span></div><div class="line">Docker version 18.06.1-ce, build e68fc7a</div></pre></td></tr></table></figure><h4 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h4><p>使用阿里云Docker镜像加速器，进入阿里云控制台查看配置。<a href="https://cr.console.aliyun.com/cn-hangzhou/mirrors" target="_blank" rel="external">https://cr.console.aliyun.com/cn-hangzhou/mirrors</a></p><h4 id="Start-docker"><a href="#Start-docker" class="headerlink" title="Start docker"></a>Start docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 启动docker服务，并保持开机自启动</span></div><div class="line">[root@docker_007 ~]<span class="comment"># systemctl start docker</span></div><div class="line">[root@docker_007 ~]<span class="comment"># systemctl enable docker</span></div></pre></td></tr></table></figure><h4 id="其他组件"><a href="#其他组件" class="headerlink" title="其他组件"></a>其他组件</h4><p>docker compose<br><a href="https://docs.docker.com/compose/install/" target="_blank" rel="external">https://docs.docker.com/compose/install/</a></p><p>docker machine<br><a href="https://docs.docker.com/machine/install-machine/" target="_blank" rel="external">https://docs.docker.com/machine/install-machine/</a></p><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="external">Get Docker CE for CentOS</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Uninstall-old-versions&quot;&gt;&lt;a href=&quot;#Uninstall-old-versions&quot; class=&quot;headerlink&quot; title=&quot;Uninstall old versions&quot;&gt;&lt;/a&gt;Uninstall old versions&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@docker_007 ~]&lt;span class=&quot;comment&quot;&gt;# yum remove docker \&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-client \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-client-latest \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-common \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-latest \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-latest-logrotate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-logrotate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-selinux \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-engine-selinux \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-engine&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Gitflow工作流[转载]</title>
    <link href="http://yoursite.com/2018/10/08/Gitflow%E5%B7%A5%E4%BD%9C%E6%B5%81%5B%E8%BD%AC%E8%BD%BD%5D/"/>
    <id>http://yoursite.com/2018/10/08/Gitflow工作流[转载]/</id>
    <published>2018-10-08T10:04:00.000Z</published>
    <updated>2018-10-08T10:04:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载：<a href="https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-gitflow.md" target="_blank" rel="external">Gitflow工作流</a>，李鼎</p><a id="more"></a><ul><li><a href="#工作方式">工作方式</a><ul><li><a href="#历史分支">历史分支</a></li><li><a href="#功能分支">功能分支</a></li><li><a href="#发布分支">发布分支</a></li><li><a href="#维护分支">维护分支</a></li></ul></li><li><a href="#示例">示例</a><ul><li><a href="#创建开发分支">创建开发分支</a></li><li><a href="#小红和小明开始开发新功能">小红和小明开始开发新功能</a></li><li><a href="#小红完成功能开发">小红完成功能开发</a></li><li><a href="#小红开始准备发布">小红开始准备发布</a></li><li><a href="#小红完成发布">小红完成发布</a></li><li><a href="#最终用户发现`Bug`">最终用户发现<code>Bug</code></a></li></ul></li><li><a href="#下一站">下一站</a></li></ul><p>这节介绍的<a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external"><code>Gitflow</code>工作流</a>借鉴自在<a href="http://nvie.com/" target="_blank" rel="external">nvie</a>的<em>Vincent Driessen</em>。</p><p><code>Gitflow</code>工作流定义了一个围绕项目发布的严格分支模型。虽然比<a href="workflow-feature-branch.md">功能分支工作流</a>复杂几分，但提供了用于一个健壮的用于管理大型项目的框架。</p><p><code>Gitflow</code>工作流没有用超出功能分支工作流的概念和命令，而是为不同的分支分配一个很明确的角色，并定义分支之间如何和什么时候进行交互。<br>除了使用功能分支，在做准备、维护和记录发布也使用各自的分支。<br>当然你可以用上功能分支工作流所有的好处：<code>Pull Requests</code>、隔离实验性开发和更高效的协作。</p><h2 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式 "></a>工作方式 </h2><p><code>Gitflow</code>工作流仍然用中央仓库作为所有开发者的交互中心。和其它的工作流一样，开发者在本地工作并<code>push</code>分支到要中央仓库中。</p><h3 id="历史分支"><a href="#历史分支" class="headerlink" title="历史分支"></a>历史分支</h3><p>相对使用仅有的一个<code>master</code>分支，<code>Gitflow</code>工作流使用2个分支来记录项目的历史。<code>master</code>分支存储了正式发布的历史，而<code>develop</code>分支作为功能的集成分支。<br>这样也方便<code>master</code>分支上的所有提交分配一个版本号。</p><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-1historical.png" alt=""></p><p>剩下要说明的问题围绕着这2个分支的区别展开。</p><h3 id="功能分支"><a href="#功能分支" class="headerlink" title="功能分支"></a>功能分支</h3><p>每个新功能位于一个自己的分支，这样可以<a href="https://www.atlassian.com/git/tutorials/syncing#git-push" target="_blank" rel="external"><code>push</code>到中央仓库以备份和协作</a>。<br>但功能分支不是从<code>master</code>分支上拉出新分支，而是使用<code>develop</code>分支作为父分支。当新功能完成时，<a href="https://www.atlassian.com/git/tutorials/git-merge" target="_blank" rel="external">合并回<code>develop</code>分支</a>。<br>新功能提交应该从不直接与<code>master</code>分支交互。</p><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-2feature.png" alt=""></p><p>注意，从各种含义和目的上来看，功能分支加上<code>develop</code>分支就是功能分支工作流的用法。但<code>Gitflow</code>工作流没有止步于此。</p><h3 id="发布分支"><a href="#发布分支" class="headerlink" title="发布分支"></a>发布分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-3release.png" alt=""></p><p>一旦<code>develop</code>分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从<code>develop</code>分支上<code>fork</code>一个发布分支。<br>新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上——<br>这个分支只应该做<code>Bug</code>修复、文档生成和其它面向发布任务。<br>一旦对外发布的工作都完成了，发布分支合并到<code>master</code>分支并分配一个版本号打好<code>Tag</code>。<br>另外，这些从新建发布分支以来的做的修改要合并回<code>develop</code>分支。</p><p>使用一个用于发布准备的专门分支，使得一个团队可以在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。<br>这也打造定义良好的开发阶段（比如，可以很轻松地说，『这周我们要做准备发布版本4.0』，并且在仓库的目录结构中可以实际看到）。</p><p>常用的分支约定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">用于新建发布分支的分支: develop</div><div class="line">用于合并的分支: master</div><div class="line">分支命名: release-* 或 release/*</div></pre></td></tr></table></figure><h3 id="维护分支"><a href="#维护分支" class="headerlink" title="维护分支"></a>维护分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-4maintenance.png" alt=""></p><p>维护分支或说是热修复（<code>hotfix</code>）分支用于生成快速给产品发布版本（<code>production releases</code>）打补丁，这是唯一可以直接从<code>master</code>分支<code>fork</code>出来的分支。<br>修复完成，修改应该马上合并回<code>master</code>分支和<code>develop</code>分支（当前的发布分支），<code>master</code>分支应该用新的版本号打好<code>Tag</code>。</p><p>为<code>Bug</code>修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。<br>你可以把维护分支想成是一个直接在<code>master</code>分支上处理的临时发布。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例 "></a>示例 </h2><p>下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。</p><h3 id="创建开发分支"><a href="#创建开发分支" class="headerlink" title="创建开发分支"></a>创建开发分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-5createdev.png" alt=""></p><p>第一步为<code>master</code>分支配套一个<code>develop</code>分支。简单来做可以<a href="https://www.atlassian.com/git/tutorials/using-branches#git-branch" target="_blank" rel="external">本地创建一个空的<code>develop</code>分支</a>，<code>push</code>到服务器上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch develop</div><div class="line">git push -u origin develop</div></pre></td></tr></table></figure><p>以后这个分支将会包含了项目的全部历史，而<code>master</code>分支将只包含了部分历史。其它开发者这时应该<a href="https://www.atlassian.com/git/tutorials/setting-up-a-repository#git-clone" target="_blank" rel="external">克隆中央仓库</a>，建好<code>develop</code>分支的跟踪分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> ssh://user@host/path/to/repo.git</div><div class="line">git checkout -b develop origin/develop</div><div class="line"></div><div class="line"><span class="comment">#【译注】当没有本地分支 develop 时，</span></div><div class="line"><span class="comment"># 最后一条命令，我使用更简单的 git checkout develop</span></div><div class="line"><span class="comment"># 会自动 把 远程分支origin/develop 检出成 本地分支 develop</span></div></pre></td></tr></table></figure><p>现在每个开发都有了这些历史分支的本地拷贝。</p><h3 id="小红和小明开始开发新功能"><a href="#小红和小明开始开发新功能" class="headerlink" title="小红和小明开始开发新功能"></a>小红和小明开始开发新功能</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-6maryjohnbeginnew.png" alt=""></p><p>这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于<code>master</code>分支，而是应该<a href="https://www.atlassian.com/git/tutorials/using-branches#git-checkout" target="_blank" rel="external">基于<code>develop</code>分支</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b some-feature develop</div></pre></td></tr></table></figure><p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git status</div><div class="line">git add &lt;some-file&gt;</div><div class="line">git commit</div></pre></td></tr></table></figure></p><h3 id="小红完成功能开发"><a href="#小红完成功能开发" class="headerlink" title="小红完成功能开发"></a>小红完成功能开发</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-7maryfinishes.png" alt=""></p><p>添加了提交后，小红觉得她的功能OK了。如果团队使用<code>Pull Requests</code>，这时候可以发起一个用于合并到<code>develop</code>分支。<br>否则她可以直接合并到她本地的<code>develop</code>分支后<code>push</code>到中央仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 拉取远程的develop分支，并且当前分支（本地分支some-feature）合并上远程分支develop</span></div><div class="line">git pull origin develop</div><div class="line">git checkout develop</div><div class="line"><span class="comment"># 本地分支some-feature合并上develop</span></div><div class="line"><span class="comment">#【注意】这个分支已经有远程的develop修改了，所以本地develop无需再做远程拉取的操作</span></div><div class="line">git merge some-feature</div><div class="line">git push</div><div class="line"><span class="comment"># 删除本地分支</span></div><div class="line">git branch -d some-feature</div><div class="line"></div><div class="line"><span class="comment">#【译注】上面的命令注释为译者添加，以方便理解</span></div><div class="line"><span class="comment"># 更多说明参见 Issue #18</span></div></pre></td></tr></table></figure><p>第一条命令在合并功能前确保<code>develop</code>分支是最新的。注意，功能决不应该直接合并到<code>master</code>分支。<br>冲突解决方法和<a href="workflow-centralized.md">集中式工作流</a>一样。</p><h3 id="小红开始准备发布"><a href="#小红开始准备发布" class="headerlink" title="小红开始准备发布"></a>小红开始准备发布</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-8maryprepsrelease.png" alt=""></p><p>这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。<br>像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b release-0.1 develop</div></pre></td></tr></table></figure><p>这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。</p><p>只要小红创建这个分支并<code>push</code>到中央仓库，这个发布就是功能冻结的。任何不在<code>develop</code>分支中的新功能都推到下个发布循环中。</p><h3 id="小红完成发布"><a href="#小红完成发布" class="headerlink" title="小红完成发布"></a>小红完成发布</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-9maryfinishes.png" alt=""></p><p>一旦准备好了对外发布，小红合并修改到<code>master</code>分支和<code>develop</code>分支上，删除发布分支。合并回<code>develop</code>分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。<br>另外，如果小红的团队要求<code>Code Review</code>，这是一个发起<code>Pull Request</code>的理想时机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git checkout master</div><div class="line">git merge release-0.1</div><div class="line">git push</div><div class="line">git checkout develop</div><div class="line">git merge release-0.1</div><div class="line">git push</div><div class="line">git branch -d release-0.1</div></pre></td></tr></table></figure><p>发布分支是作为功能开发（<code>develop</code>分支）和对外发布（<code>master</code>分支）间的缓冲。只要有合并到<code>master</code>分支，就应该打好<code>Tag</code>以方便跟踪。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git tag -a 0.1 -m <span class="string">"Initial public release"</span> master</div><div class="line">git push --tags</div></pre></td></tr></table></figure><p><code>Git</code>有提供各种勾子（<code>hook</code>），即仓库有事件发生时触发执行的脚本。<br>可以配置一个勾子，在你<code>push</code>中央仓库的<code>master</code>分支时，自动构建好对外发布。</p><h3 id="最终用户发现Bug"><a href="#最终用户发现Bug" class="headerlink" title="最终用户发现Bug"></a>最终用户发现<code>Bug</code></h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-gitflow-enduserbug.png" alt=""></p><p>对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个<code>Ticket</code>抱怨当前版本的一个<code>Bug</code>。<br>为了处理<code>Bug</code>，小红（或小明）从<code>master</code>分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回<code>master</code>分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git checkout -b issue-<span class="comment">#001 master</span></div><div class="line"><span class="comment"># Fix the bug</span></div><div class="line">git checkout master</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div></pre></td></tr></table></figure><p>就像发布分支，维护分支中新加这些重要修改需要包含到<code>develop</code>分支中，所以小红要执行一个合并操作。然后就可以安全地<a href="https://www.atlassian.com/git/tutorials/using-branches#git-branch" target="_blank" rel="external">删除这个分支</a>了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout develop</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div><div class="line">git branch -d issue-<span class="comment">#001</span></div></pre></td></tr></table></figure><h2 id="下一站"><a href="#下一站" class="headerlink" title="下一站 "></a>下一站 </h2><p>到了这里，但愿你对集中式工作流、功能分支工作流和<code>Gitflow</code>工作流已经感觉很舒适了。<br>你应该也牢固的掌握了本地仓库的潜能，<code>push</code>/<code>pull</code>模式和<code>Git</code>健壮的分支和合并模型。</p><p>记住，这里演示的工作流只是可能用法的例子，而不是在实际工作中使用<code>Git</code>不可违逆的条例。<br>所以不要畏惧按自己需要对工作流的用法做取舍。不变的目标就是让<code>Git</code>为你所用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载：&lt;a href=&quot;https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-gitflow.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitflow工作流&lt;/a&gt;，李鼎&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins杂记</title>
    <link href="http://yoursite.com/2018/10/08/Jenkins%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/10/08/Jenkins杂记/</id>
    <published>2018-10-08T08:29:00.000Z</published>
    <updated>2018-10-08T08:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="admin初始密码"><a href="#admin初始密码" class="headerlink" title="admin初始密码"></a>admin初始密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 .jenkins]<span class="comment"># cat /root/.jenkins/secrets/initialAdminPassword </span></div><div class="line">1342c187dcfcdbf8a1c38dd21b773d95</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Jenkins&quot;&gt;&lt;a href=&quot;#Jenkins&quot; class=&quot;headerlink&quot; title=&quot;Jenkins&quot;&gt;&lt;/a&gt;Jenkins&lt;/h2&gt;&lt;h3 id=&quot;admin初始密码&quot;&gt;&lt;a href=&quot;#admin初始密码&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Item1,考虑使用静态工厂方法替代构造器</title>
    <link href="http://yoursite.com/2018/10/07/Item1,%E8%80%83%E8%99%91%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%9B%BF%E4%BB%A3%E6%9E%84%E9%80%A0%E5%99%A8/"/>
    <id>http://yoursite.com/2018/10/07/Item1,考虑使用静态工厂方法替代构造器/</id>
    <published>2018-10-07T07:50:00.000Z</published>
    <updated>2018-10-07T07:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>客户端可以通过类提供的公共构造方法获取类实例，除此之外，还可以使用静态工厂方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title">valueOf</span><span class="params">(<span class="keyword">boolean</span> b)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> b ? Boolean.TRUE : Boolean.FALSE;</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><h4 id="拥有名称"><a href="#拥有名称" class="headerlink" title="拥有名称"></a>拥有名称</h4><p>使用静态工厂方法替代构造器，不同于构造方法名称固定，可自定义见名知义的方法名，相对于不同参数签名的多个构造方法设计，更加优雅。</p><h4 id="不创建新对象"><a href="#不创建新对象" class="headerlink" title="不创建新对象"></a>不创建新对象</h4><p>使用静态工厂方法替代构造器，不像构造方法，每次在被调用的时候，都需要new一个实例。</p><h4 id="返回子类型"><a href="#返回子类型" class="headerlink" title="返回子类型"></a>返回子类型</h4><p>使用静态工厂方法替代构造器，不像构造方法，它们可以返回其返回类型的任何子类型的对象。<br>例如，Java Collections Framework 的接口有45个实用程序实现，提供不可修改的集合，同步集合等。<br>几乎所有这些实现都是通过静态工厂方法在一个不可实例化的类<code>java.util.Collections</code>中获取的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">unmodifiableList</span><span class="params">(List&lt;? extends T&gt; list)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> (list <span class="keyword">instanceof</span> RandomAccess ?</div><div class="line"><span class="keyword">new</span> UnmodifiableRandomAccessList&lt;&gt;(list) :</div><div class="line"><span class="keyword">new</span> UnmodifiableList&lt;&gt;(list));</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="返回对象可变化"><a href="#返回对象可变化" class="headerlink" title="返回对象可变化"></a>返回对象可变化</h4><p>A fourth advantage of static factories is that the class of the returned object can vary from call to call as a function of the input parameters.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates an empty enum set with the specified element type.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> &lt;E&gt; The class of the elements in the set</div><div class="line"> * <span class="doctag">@param</span> elementType the class object of the element type for this enum</div><div class="line"> *     set</div><div class="line"> * <span class="doctag">@return</span> An empty enum set of the specified type.</div><div class="line"> * <span class="doctag">@throws</span> NullPointerException if &lt;tt&gt;elementType&lt;/tt&gt; is null</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Enum&lt;E&gt;&gt; <span class="function">EnumSet&lt;E&gt; <span class="title">noneOf</span><span class="params">(Class&lt;E&gt; elementType)</span> </span>&#123;</div><div class="line">Enum&lt;?&gt;[] universe = getUniverse(elementType);</div><div class="line"><span class="keyword">if</span> (universe == <span class="keyword">null</span>)</div><div class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ClassCastException(elementType + <span class="string">" not an enum"</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (universe.length &lt;= <span class="number">64</span>)</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> RegularEnumSet&lt;&gt;(elementType, universe);</div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> JumboEnumSet&lt;&gt;(elementType, universe);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="返回对象不需要存在"><a href="#返回对象不需要存在" class="headerlink" title="返回对象不需要存在"></a>返回对象不需要存在</h4><p>A fifth advantage of static factories is that the class of the returned object need not exist when the class containing the method is written</p><p>服务提供程序框架java.util.ServiceLoader</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="不能subclassed"><a href="#不能subclassed" class="headerlink" title="不能subclassed"></a>不能subclassed</h4><p>仅提供静态工厂方法的主要限制是，由于类没有public或protected的构造方法(一般不提供公开构造方法，不绝对，例如Boolean)，因此不能子类化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">A</span><span class="params">(B b)</span> </span>&#123;</div><div class="line"><span class="comment">//...</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> A <span class="title">of</span><span class="params">(B b)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> A(b);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="不利于查询"><a href="#不利于查询" class="headerlink" title="不利于查询"></a>不利于查询</h4><p>使用静态工厂方法的第二个主要的缺点是，程序员查找起来比较困难。<br>这些方法没有在API文档中突出，因此很难弄清楚如何实例化一个提供静态工厂方法而不是构造函数的类。<br>以下是静态工厂方法的一些常用名称。</p><p>from—A type-conversion method that takes a single parameter and returns a corresponding instance of this type, for example:</p><p>Date d = Date.from(instant);</p><p>of—An aggregation method that takes multiple parameters and returns an in-stance of this type that incorporates them, for example:</p><p>Set<rank> faceCards = EnumSet.of(JACK, QUEEN, KING);</rank></p><p>• valueOf—A more verbose alternative to from and of, for example:</p><p>BigInteger prime = BigInteger.valueOf(Integer.MAX_VALUE);</p><p>instance or getInstance—Returns an instance that is described by its pa-rameters (if any) but cannot be said to have the same value, for example:</p><p>StackWalker luke = StackWalker.getInstance(options);</p><p>create or newInstance—Like instance or getInstance, except that the method guarantees that each call returns a new instance, for example:</p><p>Object newArray = Array.newInstance(classObject, arrayLen);</p><p>getType—Like getInstance, but used if the factory method is in a different class. Type is the type of object returned by the factory method, for example:</p><p>FileStore fs = Files.getFileStore(path);</p><p>newType—Like newInstance, but used if the factory method is in a different class. Type is the type of object returned by the factory method, for example:</p><p>BufferedReader br = Files.newBufferedReader(path);</p><p>• type—A concise alternative to getType and newType, for example:</p><p>List<complaint> litany = Collections.list(legacyLitany);</complaint></p><p>In summary, static factory methods and public constructors both have their uses, and it pays to understand their relative merits. Often static factories are preferable, so avoid the reflex to provide public constructors without first consid-ering static factories.</p><p>参考：<br><a href="https://www.oreilly.com/library/view/effective-java-3rd/9780134686097/" target="_blank" rel="external">Effective Java Third Edition</a>，Joshua bloch</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;客户端可以通过类提供的公共构造方法获取类实例，除此之外，还可以使用静态工厂方法。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Boolean &lt;span class=&quot;title&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; b ? Boolean.TRUE : Boolean.FALSE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git命令最佳实践</title>
    <link href="http://yoursite.com/2018/10/05/Git%E5%91%BD%E4%BB%A4%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2018/10/05/Git命令最佳实践/</id>
    <published>2018-10-05T14:43:00.000Z</published>
    <updated>2018-03-05T14:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Create-a-repository"><a href="#Create-a-repository" class="headerlink" title="Create a repository"></a>Create a repository</h3><p>From scratch – create a new local repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init [project_name]</div></pre></td></tr></table></figure><a id="more"></a><p>Download form an existing repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> my_url</div></pre></td></tr></table></figure><h3 id="Observe-your-repository"><a href="#Observe-your-repository" class="headerlink" title="Observe your repository"></a>Observe your repository</h3><p>List new or modified files not yet committed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git status</div></pre></td></tr></table></figure><p>Show the changes to files  not yet staged</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff</div></pre></td></tr></table></figure><p>Show the changes to staged files</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff --cached</div></pre></td></tr></table></figure><p>Show all staged and unstaged file changes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff HEAD</div></pre></td></tr></table></figure><p>Show the changes between two commit ids</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff commit1 commit2</div></pre></td></tr></table></figure><p>List the change dates and authors for a file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git blame [file]</div></pre></td></tr></table></figure><p>Show the file changes for a commit id and/or file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git show [commit_id]:[file]</div></pre></td></tr></table></figure><p>Show full change history</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">log</span></div></pre></td></tr></table></figure><p>show change history for file/directory including diffs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">log</span> -p [file/directory]</div></pre></td></tr></table></figure><h3 id="Working-with-branches"><a href="#Working-with-branches" class="headerlink" title="Working with branches"></a>Working with branches</h3><p>List all local branches</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch</div></pre></td></tr></table></figure><p>List all branches, local and remote<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch -av</div></pre></td></tr></table></figure></p><p>Switch to a branch, and update working directory</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout my_branch</div></pre></td></tr></table></figure><p>Create a new branch called new_branch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch new_branch</div></pre></td></tr></table></figure><p>Delete the branch called my_branch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch -d my_branch</div></pre></td></tr></table></figure><p>Merge branch_a into branch_b</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout branch_b</div><div class="line">$ git merge branch_a</div></pre></td></tr></table></figure><p>Tag the current commit<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag my_tag</div></pre></td></tr></table></figure></p><h3 id="Make-a-change"><a href="#Make-a-change" class="headerlink" title="Make a change"></a>Make a change</h3><p>Stage the file, ready for commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add [file]</div></pre></td></tr></table></figure><p>Stage all changed files, ready for commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add .</div></pre></td></tr></table></figure><p>Commit all staged files to versioned history</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"commit message"</span></div></pre></td></tr></table></figure><p>Commit all your tracked files to versioned history</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -am <span class="string">"commit message"</span></div></pre></td></tr></table></figure><p>Unstages file, keeping the file changes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset [file]</div></pre></td></tr></table></figure><p>Revert everything to the last commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset --hard</div></pre></td></tr></table></figure><h3 id="Synchronize"><a href="#Synchronize" class="headerlink" title="Synchronize"></a>Synchronize</h3><p>Get the latest changes from origin (no merge)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git fetch</div></pre></td></tr></table></figure><p>Fetch the latest changes from origin and merge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull</div></pre></td></tr></table></figure><p>Fetch the latest changes from origin and rebase</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull --rebase</div></pre></td></tr></table></figure><p>Push local chages to the origin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push</div></pre></td></tr></table></figure><h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><p>When in doubt, use git help</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">command</span> --<span class="built_in">help</span></div></pre></td></tr></table></figure><p>Or visit <a href="https://training.github.com/" target="_blank" rel="external">https://training.github.com/</a> for official GitHub training.</p><p>参考：<br><a href="https://zeroturnaround.com/rebellabs/git-commands-and-best-practices-cheat-sheet/" target="_blank" rel="external">Git Commands and Best Practices Cheat Sheet</a>，Simon Maple</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Create-a-repository&quot;&gt;&lt;a href=&quot;#Create-a-repository&quot; class=&quot;headerlink&quot; title=&quot;Create a repository&quot;&gt;&lt;/a&gt;Create a repository&lt;/h3&gt;&lt;p&gt;From scratch – create a new local repository&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git init [project_name]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQL备忘录</title>
    <link href="http://yoursite.com/2018/10/05/SQL%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://yoursite.com/2018/10/05/SQL备忘录/</id>
    <published>2018-10-05T14:00:00.000Z</published>
    <updated>2018-03-05T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://objects.yongtao.wang/images/20181005/sql-cheat-sheet.jpg" alt="SQL cheat sheet"></p><p>参考：<br><a href="https://zeroturnaround.com/rebellabs/sql-cheat-sheet/" target="_blank" rel="external">SQL cheat sheet</a>，Oleg Shelajev</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://objects.yongtao.wang/images/20181005/sql-cheat-sheet.jpg&quot; alt=&quot;SQL cheat sheet&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;https://zerotur
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java内置性能监控命令</title>
    <link href="http://yoursite.com/2018/10/05/java%E5%86%85%E7%BD%AE%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/10/05/java内置性能监控命令/</id>
    <published>2018-10-05T07:39:00.000Z</published>
    <updated>2018-10-05T07:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jps-JVM-Process-Status-Tool"><a href="#jps-JVM-Process-Status-Tool" class="headerlink" title="jps, JVM Process Status Tool"></a>jps, JVM Process Status Tool</h3><p>jps, JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># java -version</span></div><div class="line">java version <span class="string">"1.8.0_181"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_181-b13)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)</div></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jps -l</span></div><div class="line">2368 org.logstash.Logstash</div><div class="line">19013 jenkins.war</div><div class="line">9210 sun.tools.jps.Jps</div><div class="line">2124 org.elasticsearch.bootstrap.Elasticsearch</div></pre></td></tr></table></figure><h3 id="jstat-JVM-Statistics-Monitoring-Tool"><a href="#jstat-JVM-Statistics-Monitoring-Tool" class="headerlink" title="jstat, JVM Statistics Monitoring Tool"></a>jstat, JVM Statistics Monitoring Tool</h3><p>jstat, JVM Statistics Monitoring Tool, 用于收集HotSpot虚拟机各方面的运行数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jstat -gcutil 2124</span></div><div class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT   </div><div class="line">  0.00  26.74  68.99  67.13  92.88  84.44   3661   22.944    14    0.200   23.143</div></pre></td></tr></table></figure><p>E、O、M分别是新生代,老年代,元数据区已用占总大小的百分比<br>S0、S1表示两个幸存者区<br>YGC = Young GC, YGCT = Young GC Time 妙计<br>FGC = Full GC, FGCT = Full GC Time 妙计<br>GCT, 总的GC 时间.</p><h3 id="jinfo"><a href="#jinfo" class="headerlink" title="jinfo"></a>jinfo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jinfo 2124</span></div><div class="line">Attaching to process ID 2124, please <span class="built_in">wait</span>...</div><div class="line">Debugger attached successfully.</div><div class="line">Server compiler detected.</div><div class="line">JVM version is 25.181-b13</div><div class="line">Java System Properties:</div><div class="line"></div><div class="line">jna.platform.library.path = /usr/lib64:/lib64:/usr/lib:/lib:/usr/lib64/mysql</div><div class="line">java.runtime.name = Java(TM) SE Runtime Environment</div><div class="line">sun.boot.library.path = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/amd64</div><div class="line">java.vm.version = 25.181-b13</div><div class="line">es.path.home = /opt/elk/elasticsearch-6.2.3</div><div class="line">log4j.shutdownHookEnabled = <span class="literal">false</span></div><div class="line">java.vm.vendor = Oracle Corporation</div><div class="line">java.vendor.url = http://java.oracle.com/</div><div class="line">path.separator = :</div><div class="line">jna.loaded = <span class="literal">true</span></div><div class="line">file.encoding.pkg = sun.io</div><div class="line">java.vm.name = Java HotSpot(TM) 64-Bit Server VM</div><div class="line">sun.java.launcher = SUN_STANDARD</div><div class="line">user.country = US</div><div class="line">sun.os.patch.level = unknown</div><div class="line">jna.nosys = <span class="literal">true</span></div><div class="line">java.vm.specification.name = Java Virtual Machine Specification</div><div class="line">user.dir = /opt/elk/elasticsearch-6.2.3</div><div class="line">java.runtime.version = 1.8.0_181-b13</div><div class="line">java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment</div><div class="line">java.endorsed.dirs = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/endorsed</div><div class="line">os.arch = amd64</div><div class="line">java.io.tmpdir = /tmp/elasticsearch.WqG997rL</div><div class="line">line.separator = </div><div class="line"></div><div class="line">java.vm.specification.vendor = Oracle Corporation</div><div class="line">os.name = Linux</div><div class="line">io.netty.noKeySetOptimization = <span class="literal">true</span></div><div class="line">sun.jnu.encoding = UTF-8</div><div class="line">jnidispatch.path = /tmp/elasticsearch.WqG997rL/jna--1985354563/jna2966756306267189304.tmp</div><div class="line">java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib</div><div class="line">sun.nio.ch.bugLevel = </div><div class="line">es.logs.cluster_name = elasticsearch</div><div class="line">java.specification.name = Java Platform API Specification</div><div class="line">java.class.version = 52.0</div><div class="line">sun.management.compiler = HotSpot 64-Bit Tiered Compilers</div><div class="line">os.version = 3.10.0-862.el7.x86_64</div><div class="line">user.home = /home/elasticsearch</div><div class="line">user.timezone = Asia/Shanghai</div><div class="line">java.awt.printerjob = sun.print.PSPrinterJob</div><div class="line">file.encoding = UTF-8</div><div class="line">java.specification.version = 1.8</div><div class="line">io.netty.recycler.maxCapacityPerThread = 0</div><div class="line">user.name = elasticsearch</div><div class="line">es.logs.base_path = /opt/elk/elasticsearch-6.2.3/logs</div><div class="line">java.class.path = /opt/elk/elasticsearch-6.2.3/lib/elasticsearch-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/elasticsearch-core-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-core-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-analyzers-common-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-backward-codecs-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-grouping-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-highlighter-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-join-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-memory-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-misc-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-queries-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-queryparser-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-sandbox-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-spatial-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-spatial-extras-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-spatial3d-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-suggest-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/securesm-1.2.jar:/opt/elk/elasticsearch-6.2.3/lib/hppc-0.7.1.jar:/opt/elk/elasticsearch-6.2.3/lib/joda-time-2.9.9.jar:/opt/elk/elasticsearch-6.2.3/lib/snakeyaml-1.17.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-core-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-dataformat-smile-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-dataformat-yaml-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-dataformat-cbor-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/t-digest-3.0.jar:/opt/elk/elasticsearch-6.2.3/lib/HdrHistogram-2.1.9.jar:/opt/elk/elasticsearch-6.2.3/lib/spatial4j-0.6.jar:/opt/elk/elasticsearch-6.2.3/lib/jts-1.13.jar:/opt/elk/elasticsearch-6.2.3/lib/log4j-api-2.9.1.jar:/opt/elk/elasticsearch-6.2.3/lib/log4j-core-2.9.1.jar:/opt/elk/elasticsearch-6.2.3/lib/log4j-1.2-api-2.9.1.jar:/opt/elk/elasticsearch-6.2.3/lib/jna-4.5.1.jar:/opt/elk/elasticsearch-6.2.3/lib/elasticsearch-cli-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/jopt-simple-5.0.2.jar:/opt/elk/elasticsearch-6.2.3/lib/plugin-classloader-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/elasticsearch-launchers-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/plugin-cli-6.2.3.jar</div><div class="line">es.path.conf = /opt/elk/elasticsearch-6.2.3/config</div><div class="line">java.vm.specification.version = 1.8</div><div class="line">sun.arch.data.model = 64</div><div class="line">java.home = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre</div><div class="line">sun.java.command = org.elasticsearch.bootstrap.Elasticsearch -d</div><div class="line">user.language = en</div><div class="line">java.specification.vendor = Oracle Corporation</div><div class="line">io.netty.noUnsafe = <span class="literal">true</span></div><div class="line">awt.toolkit = sun.awt.X11.XToolkit</div><div class="line">java.vm.info = mixed mode</div><div class="line">java.version = 1.8.0_181</div><div class="line">java.ext.dirs = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/ext:/usr/java/packages/lib/ext</div><div class="line">sun.boot.class.path = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/resources.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/rt.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/sunrsasign.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/jsse.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/jce.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/charsets.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/jfr.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/classes</div><div class="line">java.vendor = Oracle Corporation</div><div class="line">java.awt.headless = <span class="literal">true</span></div><div class="line">file.separator = /</div><div class="line">java.vendor.url.bug = http://bugreport.sun.com/bugreport/</div><div class="line">sun.io.unicode.encoding = UnicodeLittle</div><div class="line">sun.cpu.endian = little</div><div class="line">log4j2.disable.jmx = <span class="literal">true</span></div><div class="line">sun.cpu.isalist = </div><div class="line"></div><div class="line">VM Flags:</div><div class="line">Non-default VM flags: -XX:+AlwaysPreTouch -XX:CICompilerCount=3 -XX:CMSInitiatingOccupancyFraction=75 -XX:GCLogFileSize=67108864 -XX:+HeapDumpOnOutOfMemoryError -XX:InitialHeapSize=1073741824 -XX:MaxHeapSize=1073741824 -XX:MaxNewSize=348913664 -XX:MaxTenuringThreshold=6 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=348913664 -XX:NumberOfGCLogFiles=32 -XX:OldPLABSize=16 -XX:OldSize=724828160 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:ThreadStackSize=1024 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseFastUnorderedTimeStamps -XX:+UseGCLogFileRotation -XX:+UseParNewGC </div><div class="line">Command line:  -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -Djna.nosys=<span class="literal">true</span> -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=<span class="literal">true</span> -Dio.netty.noKeySetOptimization=<span class="literal">true</span> -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=<span class="literal">false</span> -Dlog4j2.disable.jmx=<span class="literal">true</span> -Djava.io.tmpdir=/tmp/elasticsearch.WqG997rL -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/elk/elasticsearch-6.2.3 -Des.path.conf=/opt/elk/elasticsearch-6.2.3/config</div></pre></td></tr></table></figure><h3 id="jstat-JVM-Statistics-Monitoring-Tool-1"><a href="#jstat-JVM-Statistics-Monitoring-Tool-1" class="headerlink" title="jstat, JVM Statistics Monitoring Tool"></a>jstat, JVM Statistics Monitoring Tool</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jstat -gcutil 2124</span></div><div class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT   </div><div class="line">  0.00  26.74  68.99  67.13  92.88  84.44   3661   22.944    14    0.200   23.143</div><div class="line">  </div><div class="line">  </div><div class="line"><span class="comment">### jmap</span></div><div class="line"></div><div class="line">[root@kvm000 bin]<span class="comment"># jmap -heap 2124</span></div><div class="line">Attaching to process ID 2124, please <span class="built_in">wait</span>...</div><div class="line">Debugger attached successfully.</div><div class="line">Server compiler detected.</div><div class="line">JVM version is 25.181-b13</div><div class="line"></div><div class="line">using parallel threads <span class="keyword">in</span> the new generation. <span class="comment">#新生代采用的是并行线程处理方式</span></div><div class="line">using thread-local object allocation.</div><div class="line">Concurrent Mark-Sweep GC <span class="comment">#同步并行垃圾回收</span></div><div class="line"></div><div class="line">Heap Configuration:</div><div class="line">   MinHeapFreeRatio         = 40 <span class="comment">#最小堆使用比例</span></div><div class="line">   MaxHeapFreeRatio         = 70 <span class="comment">#最大堆可用比例</span></div><div class="line">   MaxHeapSize              = 1073741824 (1024.0MB) <span class="comment">#最大堆空间大小</span></div><div class="line">   NewSize                  = 348913664 (332.75MB) <span class="comment">#新生代分配大小</span></div><div class="line">   MaxNewSize               = 348913664 (332.75MB) <span class="comment">#最大可新生代分配大小</span></div><div class="line">   OldSize                  = 724828160 (691.25MB) <span class="comment">#老生代大小</span></div><div class="line">   NewRatio                 = 2 <span class="comment">#新生代比例</span></div><div class="line">   SurvivorRatio            = 8 <span class="comment">#新生代与suvivor的比例</span></div><div class="line">   MetaspaceSize            = 21807104 (20.796875MB) <span class="comment">#元数据区大小</span></div><div class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</div><div class="line">   MaxMetaspaceSize         = 17592186044415 MB</div><div class="line">   G1HeapRegionSize         = 0 (0.0MB)</div><div class="line"></div><div class="line">Heap Usage:</div><div class="line">New Generation (Eden + 1 Survivor Space):</div><div class="line">   capacity = 314048512 (299.5MB)</div><div class="line">   used     = 207005464 (197.4157943725586MB)</div><div class="line">   free     = 107043048 (102.0842056274414MB)</div><div class="line">   65.91512332973576% used</div><div class="line">Eden Space:</div><div class="line">   capacity = 279183360 (266.25MB)</div><div class="line">   used     = 197681056 (188.52334594726562MB)</div><div class="line">   free     = 81502304 (77.72665405273438MB)</div><div class="line">   70.80689049662558% used</div><div class="line">From Space:</div><div class="line">   capacity = 34865152 (33.25MB)</div><div class="line">   used     = 9324408 (8.892448425292969MB)</div><div class="line">   free     = 25540744 (24.35755157470703MB)</div><div class="line">   26.744205790354794% used</div><div class="line">To Space:</div><div class="line">   capacity = 34865152 (33.25MB)</div><div class="line">   used     = 0 (0.0MB)</div><div class="line">   free     = 34865152 (33.25MB)</div><div class="line">   0.0% used</div><div class="line">concurrent mark-sweep generation:</div><div class="line">   capacity = 724828160 (691.25MB)</div><div class="line">   used     = 486547784 (464.0081253051758MB)</div><div class="line">   free     = 238280376 (227.24187469482422MB)</div><div class="line">   67.125949411237% used</div><div class="line"></div><div class="line">19955 interned Strings occupying 2899368 bytes.</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># dump jvm</span></div><div class="line">jmap -dump:format=b,file=181005.bin &lt;pid&gt;</div></pre></td></tr></table></figure><h3 id="jhat-JVM-Heap-Dump-Browser"><a href="#jhat-JVM-Heap-Dump-Browser" class="headerlink" title="jhat, JVM Heap Dump Browser"></a>jhat, JVM Heap Dump Browser</h3><p>用于分析heapdump 文件，它会建立一个HTTP/HTML服务器，让用户在浏览器上查看分析结果</p><h3 id="jstack-Stack-Trace-for-Java-显示虚拟机的线程快找"><a href="#jstack-Stack-Trace-for-Java-显示虚拟机的线程快找" class="headerlink" title="jstack, Stack Trace for Java, 显示虚拟机的线程快找."></a>jstack, Stack Trace for Java, 显示虚拟机的线程快找.</h3><p><a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/index.html" target="_blank" rel="external">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/index.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;jps-JVM-Process-Status-Tool&quot;&gt;&lt;a href=&quot;#jps-JVM-Process-Status-Tool&quot; class=&quot;headerlink&quot; title=&quot;jps, JVM Process Status Tool&quot;&gt;&lt;/a&gt;jps, JVM Process Status Tool&lt;/h3&gt;&lt;p&gt;jps, JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@kvm000 bin]&lt;span class=&quot;comment&quot;&gt;# java -version&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;java version &lt;span class=&quot;string&quot;&gt;&quot;1.8.0_181&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Java(TM) SE Runtime Environment (build 1.8.0_181-b13)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>并发请求数</title>
    <link href="http://yoursite.com/2018/10/05/%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82%E6%95%B0/"/>
    <id>http://yoursite.com/2018/10/05/并发请求数/</id>
    <published>2018-10-05T05:54:00.000Z</published>
    <updated>2018-10-05T05:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="并发请求数"><a href="#并发请求数" class="headerlink" title="并发请求数"></a>并发请求数</h2><h3 id="windows-server"><a href="#windows-server" class="headerlink" title="windows server"></a>windows server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -ano | findstr <span class="string">"8080"</span> | FIND /v <span class="string">""</span> /c</div></pre></td></tr></table></figure><h3 id="linux-server"><a href="#linux-server" class="headerlink" title="linux server"></a>linux server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -apn | grep :80 | grep -v LISTEN | wc -l</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;并发请求数&quot;&gt;&lt;a href=&quot;#并发请求数&quot; class=&quot;headerlink&quot; title=&quot;并发请求数&quot;&gt;&lt;/a&gt;并发请求数&lt;/h2&gt;&lt;h3 id=&quot;windows-server&quot;&gt;&lt;a href=&quot;#windows-server&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>删除Git所有标签</title>
    <link href="http://yoursite.com/2018/10/04/%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89Git%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/10/04/删除所有Git标签/</id>
    <published>2018-10-04T03:48:00.000Z</published>
    <updated>2018-10-04T03:48:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xargs命令"><a href="#xargs命令" class="headerlink" title="xargs命令"></a>xargs命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># echo "-lh" | cat</span></div><div class="line">-lh</div><div class="line">[root@localhost ~]<span class="comment"># echo "-lh" | xargs ls</span></div><div class="line">total 4.0K</div><div class="line">-rw-------. 1 root root 1.5K Nov 14  2017 anaconda-ks.cfg</div></pre></td></tr></table></figure><a id="more"></a><h3 id="Remove-all-git-tags"><a href="#Remove-all-git-tags" class="headerlink" title="Remove all git tags"></a>Remove all git tags</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Delete local tags.</span></div><div class="line">git tag -l | xargs git tag -d</div><div class="line"></div><div class="line"><span class="comment">#Fetch remote tags.</span></div><div class="line">git fetch</div><div class="line"></div><div class="line"><span class="comment">#Delete remote tags.</span></div><div class="line">git tag -l | xargs -n 1 git push --delete origin</div><div class="line"></div><div class="line"><span class="comment">#Delete local tasg.</span></div><div class="line">git tag -l | xargs git tag -d</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;xargs命令&quot;&gt;&lt;a href=&quot;#xargs命令&quot; class=&quot;headerlink&quot; title=&quot;xargs命令&quot;&gt;&lt;/a&gt;xargs命令&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# echo &quot;-lh&quot; | cat&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-lh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# echo &quot;-lh&quot; | xargs ls&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;total 4.0K&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-------. 1 root root 1.5K Nov 14  2017 anaconda-ks.cfg&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Gitlab项目初始化</title>
    <link href="http://yoursite.com/2018/10/04/Gitlab%E9%A1%B9%E7%9B%AE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <id>http://yoursite.com/2018/10/04/Gitlab项目初始化/</id>
    <published>2018-10-04T03:35:00.000Z</published>
    <updated>2018-10-04T03:35:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命令行指令"><a href="#命令行指令" class="headerlink" title="命令行指令"></a>命令行指令</h2><h3 id="Git-全局设置"><a href="#Git-全局设置" class="headerlink" title="Git 全局设置"></a>Git 全局设置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git config --global user.name <span class="string">"wangyt"</span></div><div class="line">git config --global user.email <span class="string">"wangyt4dev@gmail.com"</span></div></pre></td></tr></table></figure><h3 id="创建新版本库"><a href="#创建新版本库" class="headerlink" title="创建新版本库"></a>创建新版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> git@192.168.1.204:wangyt/test001.git</div><div class="line"><span class="built_in">cd</span> test001</div><div class="line">touch README.md</div><div class="line">git add README.md</div><div class="line">git commit -m <span class="string">"add README"</span></div><div class="line">git push -u origin master</div></pre></td></tr></table></figure><a id="more"></a><h3 id="已存在的文件夹"><a href="#已存在的文件夹" class="headerlink" title="已存在的文件夹"></a>已存在的文件夹</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> existing_folder</div><div class="line">git init</div><div class="line">git remote add origin git@192.168.1.204:wangyt/test001.git</div><div class="line">git add .</div><div class="line">git commit -m <span class="string">"Initial commit"</span></div><div class="line">git push -u origin master</div></pre></td></tr></table></figure><h3 id="已存在的-Git-版本库"><a href="#已存在的-Git-版本库" class="headerlink" title="已存在的 Git 版本库"></a>已存在的 Git 版本库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">cd</span> existing_repo</div><div class="line">git remote add origin git@192.168.1.204:wangyt/test001.git</div><div class="line">git push -u origin --all</div><div class="line">git push -u origin --tags</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;命令行指令&quot;&gt;&lt;a href=&quot;#命令行指令&quot; class=&quot;headerlink&quot; title=&quot;命令行指令&quot;&gt;&lt;/a&gt;命令行指令&lt;/h2&gt;&lt;h3 id=&quot;Git-全局设置&quot;&gt;&lt;a href=&quot;#Git-全局设置&quot; class=&quot;headerlink&quot; title=&quot;Git 全局设置&quot;&gt;&lt;/a&gt;Git 全局设置&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git config --global user.name &lt;span class=&quot;string&quot;&gt;&quot;wangyt&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git config --global user.email &lt;span class=&quot;string&quot;&gt;&quot;wangyt4dev@gmail.com&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;创建新版本库&quot;&gt;&lt;a href=&quot;#创建新版本库&quot; class=&quot;headerlink&quot; title=&quot;创建新版本库&quot;&gt;&lt;/a&gt;创建新版本库&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git@192.168.1.204:wangyt/test001.git&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; test001&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;touch README.md&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git add README.md&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git commit -m &lt;span class=&quot;string&quot;&gt;&quot;add README&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;git push -u origin master&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker入门及基本操作命令</title>
    <link href="http://yoursite.com/2018/07/14/Docker%E5%85%A5%E9%97%A8%E5%8F%8A%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/07/14/Docker入门及基本操作命令/</id>
    <published>2018-07-14T13:56:00.000Z</published>
    <updated>2018-07-14T13:56:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>参考 <a href="/2018/10/25/Docker%20install/">Docker install</a></p><a id="more"></a><h3 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h3><h4 id="搜索-下载-查看-删除"><a href="#搜索-下载-查看-删除" class="headerlink" title="搜索/下载/查看/删除"></a>搜索/下载/查看/删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 搜索镜像</span></div><div class="line">$ docker search redis</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 下载镜像</span></div><div class="line">$ docker pull redis</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看本地镜像列表</span></div><div class="line">$ docker images</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 删除指定镜像</span></div><div class="line">$ docker rmi image-id</div></pre></td></tr></table></figure><h3 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h3><h4 id="实例化容器"><a href="#实例化容器" class="headerlink" title="实例化容器"></a>实例化容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 创建一个新的容器并启动</span></div><div class="line">$ docker run --name container-name -d image-name</div><div class="line"></div><div class="line"><span class="comment"># 例如，创建一个redis容器，并启动</span></div><div class="line">$ docker run --name redis-ctnr -d redis</div></pre></td></tr></table></figure><h4 id="端口映射"><a href="#端口映射" class="headerlink" title="端口映射"></a>端口映射</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker容器中程序使用的端口，在容器外无法直接访问，需要将其映射出来</span></div><div class="line"><span class="comment"># 将redis默认端口，映射出来，使其外部可访问</span></div><div class="line">$ docker run -d -p 6379:6379 --name redis-ctnr2 redis</div></pre></td></tr></table></figure><h4 id="容器列表"><a href="#容器列表" class="headerlink" title="容器列表"></a>容器列表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看运行的容器列表</span></div><div class="line">$ docker ps</div><div class="line"></div><div class="line"><span class="comment"># 查看运行和停止的容器列表</span></div><div class="line">$ docker ps -a</div></pre></td></tr></table></figure><h4 id="启动和停止容器"><a href="#启动和停止容器" class="headerlink" title="启动和停止容器"></a>启动和停止容器</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 停止一个容器</span></div><div class="line">$ docker stop container-name/container-id</div><div class="line"></div><div class="line"><span class="comment"># 例如，停止redis</span></div><div class="line">$ docker stop redis-ctnr</div><div class="line"></div><div class="line"><span class="comment"># 启动一个容器</span></div><div class="line">$ docker start container-name/container-id</div><div class="line"></div><div class="line"><span class="comment"># 启动 redis</span></div><div class="line">$ docker start redis-ctnr</div></pre></td></tr></table></figure><h4 id="容器删除"><a href="#容器删除" class="headerlink" title="容器删除"></a>容器删除</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 删除指定容器</span></div><div class="line">$ docker rm container-id</div><div class="line"></div><div class="line"><span class="comment"># 删除</span></div><div class="line">$ docker rm redis-ctnr</div><div class="line"></div><div class="line"><span class="comment"># 删除所有容器</span></div><div class="line">$ docker rm $(docker ps -a -q)</div></pre></td></tr></table></figure><h4 id="容器日志"><a href="#容器日志" class="headerlink" title="容器日志"></a>容器日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看当前容器日志</span></div><div class="line">$ docker logs container-name/container-id</div><div class="line"></div><div class="line"><span class="comment"># 查看redis日志</span></div><div class="line">$ docker logs redis-ctnr2</div></pre></td></tr></table></figure><h4 id="登录容器"><a href="#登录容器" class="headerlink" title="登录容器"></a>登录容器</h4><p>运行中的容器其实就是一个linux系统，我们可以登录进容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 登录容器</span></div><div class="line">$ docker <span class="built_in">exec</span> -it container-name/container-id bash</div><div class="line"></div><div class="line">$ docker <span class="built_in">exec</span> -it redis-ctnr2 bash</div><div class="line"></div><div class="line"><span class="comment"># 使用exit退出登录</span></div></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 实例化一个RabbitMQ容器</span></div><div class="line">$ docker run -d -p 5672:5672 -p 15672:15672 rabbitmq:3-management</div></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><h4 id="写一个SpringBoot示例项目"><a href="#写一个SpringBoot示例项目" class="headerlink" title="写一个SpringBoot示例项目"></a>写一个SpringBoot示例项目</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> github.wyt;</div><div class="line"></div><div class="line"><span class="keyword">import</span> org.springframework.boot.SpringApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.SpringBootApplication;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</div><div class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RestController;</div><div class="line"></div><div class="line"><span class="meta">@SpringBootApplication</span></div><div class="line"><span class="meta">@RestController</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DockerFileApplication</span> </span>&#123;</div><div class="line"></div><div class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    SpringApplication.run(DockerFileApplication.class, args);</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</div><div class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">home</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="string">"Hello docker!"</span>;</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>打完包后，上传到/tmp/df目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[root@localhost df]<span class="comment"># pwd</span></div><div class="line">/tmp/df</div><div class="line">[root@localhost df]<span class="comment"># ls -lh</span></div><div class="line">total 14M</div><div class="line">-rw-r--r--. 1 root root 134 Jul 15 17:44 Dockerfile</div><div class="line">-rw-r--r--. 1 root root 14M Jul 15 17:37 dockerfile-demo-1.0-SNAPSHOT.jar</div></pre></td></tr></table></figure><p>创建一个Dockerfile文件，内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">FROM java:8 <span class="comment"># 基镜像</span></div><div class="line"></div><div class="line">MAINTAINER wangyongtao <span class="comment"># 维护者</span></div><div class="line"></div><div class="line">ADD dockerfile-demo-1.0-SNAPSHOT.jar app.jar <span class="comment"># 添加到镜像中并且重命名</span></div><div class="line"></div><div class="line">EXPOSE 8080 <span class="comment"># 将容器的8080端口暴露出来，容器外可做端口映射</span></div><div class="line"></div><div class="line">ENTRYPOINT [<span class="string">"java"</span>,<span class="string">"-jar"</span>,<span class="string">"/app.jar"</span>] <span class="comment">#容器启动时运行 java -jar app.jar</span></div></pre></td></tr></table></figure><p>编译镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">[root@localhost df]<span class="comment"># docker build -t wyt/dockerfile-demo .</span></div><div class="line"></div><div class="line">Sending build context to Docker daemon 14.57 MB</div><div class="line">Step 1 : FROM java:8</div><div class="line">Trying to pull repository docker.io/library/java ... </div><div class="line">8: Pulling from docker.io/library/java</div><div class="line"></div><div class="line">fce5728aad85: Pull complete </div><div class="line">76610ec20bf5: Pull complete </div><div class="line">60170fec2151: Pull complete </div><div class="line">e98f73de8f0d: Pull complete </div><div class="line">11f7af24ed9c: Pull complete </div><div class="line">49e2d6393f32: Pull complete </div><div class="line">bb9cdec9c7f3: Pull complete </div><div class="line">Digest: sha256:c1ff613e8ba25833d2e1940da0940c3824f03f802c449f3d1815a66b7f8c0e9d</div><div class="line"> ---&gt; d23bdf5b1b1b</div><div class="line">Step 2 : MAINTAINER wangyongtao</div><div class="line"> ---&gt; Running <span class="keyword">in</span> 12ebd4a0fd57</div><div class="line"> ---&gt; 046529d38bd4</div><div class="line">Removing intermediate container 12ebd4a0fd57</div><div class="line">Step 3 : ADD dockerfile-demo-1.0-SNAPSHOT.jar app.jar</div><div class="line"> ---&gt; 7aec1880832e</div><div class="line">Removing intermediate container 8712af5da6f3</div><div class="line">Step 4 : EXPOSE 8080</div><div class="line"> ---&gt; Running <span class="keyword">in</span> 1f0127445cf1</div><div class="line"> ---&gt; 9129fa1cc69b</div><div class="line">Removing intermediate container 1f0127445cf1</div><div class="line">Step 5 : ENTRYPOINT java -jar /app.jar</div><div class="line"> ---&gt; Running <span class="keyword">in</span> 19e258a38a53</div><div class="line"> ---&gt; 916933260f9e</div><div class="line">Removing intermediate container 19e258a38a53</div><div class="line">Successfully built 916933260f9e</div></pre></td></tr></table></figure><p>编译时也可以带着Tag</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost df]<span class="comment"># docker build -t wyt/dockerfile-demo:0.0.1 .</span></div></pre></td></tr></table></figure><p>查看编译好的镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@localhost df]<span class="comment"># docker images</span></div><div class="line">REPOSITORY                          TAG                 IMAGE ID            CREATED             SIZE</div><div class="line">wyt/dockerfile-demo                 0.0.1               916933260f9e        30 minutes ago      657.7 MB</div><div class="line">wyt/dockerfile-demo                 latest              916933260f9e        30 minutes ago      657.7 MB</div></pre></td></tr></table></figure><p>从镜像实例化容器并启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[root@localhost df]<span class="comment"># docker run --name docker-demo2 -p 8080:8080 -d wyt/dockerfile-demo</span></div></pre></td></tr></table></figure><p>最后使用docker所在系统ip和8080端口即可访问应用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@localhost df]<span class="comment"># curl http://192.168.91.146:8080</span></div><div class="line">Hello docker!</div><div class="line">[root@localhost df]<span class="comment">#</span></div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;参考 &lt;a href=&quot;/2018/10/25/Docker%20install/&quot;&gt;Docker install&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>理解lambda表达式</title>
    <link href="http://yoursite.com/2018/03/05/%E7%90%86%E8%A7%A3lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/03/05/理解lambda表达式/</id>
    <published>2018-03-05T11:00:00.000Z</published>
    <updated>2018-03-05T12:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Lambda表达式是Java 8中的新特性，是Java迈入函数式编程的第一步，它不依赖于任何类而被创建，它能像对象一样被传递和按需执行。</p><h2 id="Lambda与单方法接口"><a href="#Lambda与单方法接口" class="headerlink" title="Lambda与单方法接口"></a>Lambda与单方法接口</h2><p>函数式编程常被用于实现事件监听器，事件监听器在java中常被定义为一个接口，该接口通常只有一个方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">StateChangeListener</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStateChange</span><span class="params">(State oldState, State newState)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这个接口定义了一个方法，期望状态发生改变时被调用。</p><a id="more"></a><p>Java 7中，必须实现此接口才能监听状态更改。假设有一个类<code>StateOwner</code>，它能注册状态事件监听器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StateOwner</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addStateListener</span><span class="params">(StateChangeListener listener)</span> </span>&#123;</div><div class="line">        <span class="comment">// Add state listener...</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>Java 7中，可以使用匿名类实现接口添加事件监听器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">StateOwner stateOwner = <span class="keyword">new</span> StateOwner();</div><div class="line"></div><div class="line">stateOwner.addStateListener(<span class="keyword">new</span> StateChangeListener() &#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStateChange</span><span class="params">(State oldState, State newState)</span> </span>&#123;</div><div class="line">        System.out.println(<span class="string">"State changed"</span>);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>而在Java 8中，可直接使用lambda表达式添加事件监听器：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">StateOwner stateOwner = <span class="keyword">new</span> StateOwner();</div><div class="line"></div><div class="line">stateOwner.addStateListener(</div><div class="line">    (oldState, newState) -&gt; System.out.println(<span class="string">"State changed"</span>)</div><div class="line">);</div></pre></td></tr></table></figure><p>下面一行就是lambda表达式:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(oldState, newState) -&gt; System.out.println(<span class="string">"State changed"</span>)</div></pre></td></tr></table></figure><p>lambda表达式与<code>addStateListener()</code>方法参数的参数类型相匹配，如果lambda表达式与参数类型相匹配(本例中为StateChangeListener)，那么lambda表达式将转换为实现与该参数相同的接口的函数。</p><p>Java lambda表达式只能用于与之匹配的类型为单一方法的接口。在上面的例子中，lambda表达式被用作类型为<code>StateChangeListener</code>的方法的参数。<code>StateChangeListener</code>只有一个方法，因此lambda表达式与该接口成功匹配。</p><h3 id="Lambda与接口之间的匹配"><a href="#Lambda与接口之间的匹配" class="headerlink" title="Lambda与接口之间的匹配"></a>Lambda与接口之间的匹配</h3><p>单一方法接口有时候也被称之为函数接口。函数接口匹配lambda分为以下几步：</p><p>确保接口只有一个方法<br>lambda表达式参数匹配函数接口方法参数<br>lambda返回值类型匹配函数接口方法返回值类型</p><h2 id="Lambda表达式类型推导"><a href="#Lambda表达式类型推导" class="headerlink" title="Lambda表达式类型推导"></a>Lambda表达式类型推导</h2><p>Java 8之前匿名实现也需要指定具体的接口：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">stateOwner.addStateListener(<span class="keyword">new</span> StateChangeListener() &#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStateChange</span><span class="params">(State oldState, State newState)</span> </span>&#123;</div><div class="line">        <span class="comment">// do something with the old and new state.</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure><p>下面使用lambda表达式，未提及<code>StateChangeListener</code>接口，但是编译器可根据<code>addStateListener</code>方法声明推断出参数类型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">stateOwner.addStateListener(</div><div class="line">    (oldState, newState) -&gt; System.out.println(<span class="string">"State changed"</span>)</div><div class="line">);</div></pre></td></tr></table></figure><p>lambda表达式中的参数类型也可以类型推导，例如<code>(oldState, newState)</code>可通过onStateChange()的方法声明推导而出。</p><h2 id="Lambda表达式参数"><a href="#Lambda表达式参数" class="headerlink" title="Lambda表达式参数"></a>Lambda表达式参数</h2><p>Java lambda表达式实际上类似于方法，因此lambda表达式可以像方法一样使用参数。 前面显示的lambda表达式的(oldState, newState)部分指定了lambda表达式所需的参数。这些参数必须与单个方法接口上方法的参数相匹配。在这种情况下，这些参数必须与StateChangeListener接口的onStateChange()方法的参数匹配：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStateChange</span><span class="params">(State oldState, State newState)</span></span>;</div></pre></td></tr></table></figure><p>至少lambda表达式和方法中的参数数量必须匹配。其次，如果在lambda表达式中指定了任何参数类型，则这些类型也必须匹配。(类型放入lambda表达式参数，本文稍后会介绍)</p><h3 id="无参数"><a href="#无参数" class="headerlink" title="无参数"></a>无参数</h3><p>方法无参数，可以写成这样：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">() -&gt; System.out.println(<span class="string">"Zero parameter lambda"</span>);</div></pre></td></tr></table></figure><h3 id="一个参数"><a href="#一个参数" class="headerlink" title="一个参数"></a>一个参数</h3><p>方法一个参数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(param) -&gt; System.out.println(<span class="string">"One parameter: "</span> + param);</div></pre></td></tr></table></figure><p>一个参数的时候，亦可以省略圆括号：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">param -&gt; System.out.println(<span class="string">"One parameter: "</span> + param);</div></pre></td></tr></table></figure><h3 id="多个参数"><a href="#多个参数" class="headerlink" title="多个参数"></a>多个参数</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(p1, p2) -&gt; System.out.println(<span class="string">"Multiple parameters: "</span> + p1 + <span class="string">", "</span> + p2);</div></pre></td></tr></table></figure><h3 id="参数类型"><a href="#参数类型" class="headerlink" title="参数类型"></a>参数类型</h3><p>如果编译器无法从lambda匹配的函数接口方法中推断出参数类型，那么为lambda表达式指定参数类型有时可能是必需的，这种情况下编译器会提示。Lambda表达式指定参数类型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(Car car) -&gt; System.out.println(<span class="string">"The car is: "</span> + car.getName());</div></pre></td></tr></table></figure><p>如你所见，明确为car指定类型<code>Car</code>。</p><h2 id="Lambda函数体"><a href="#Lambda函数体" class="headerlink" title="Lambda函数体"></a>Lambda函数体</h2><p>Lambda表达式body在 “-&gt;” 右侧被指定，即类似于方法体：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(oldState, newState) -&gt; System.out.println(<span class="string">"State changed"</span>)</div></pre></td></tr></table></figure></p><p>如果需要多行，使用{}括起来：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(oldState, newState) -&gt; &#123;</div><div class="line">   System.out.println(<span class="string">"Old state: "</span> + oldState);</div><div class="line">   System.out.println(<span class="string">"New state: "</span> + newState);</div><div class="line"> &#125;</div></pre></td></tr></table></figure><h2 id="Lambda返回值"><a href="#Lambda返回值" class="headerlink" title="Lambda返回值"></a>Lambda返回值</h2><p>Lambda表达式也可以有返回值，使用return语句即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">(param) -&gt; &#123;</div><div class="line">   System.out.println(<span class="string">"param: "</span> + param);</div><div class="line">   <span class="keyword">return</span> <span class="string">"return value"</span>;</div><div class="line"> &#125;</div></pre></td></tr></table></figure><p>简短的形式：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(a1, a2) -&gt; &#123; <span class="keyword">return</span> a1 &gt; a2; &#125;</div></pre></td></tr></table></figure><p>等价于:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">(a1, a2) -&gt; a1 &gt; a2;</div></pre></td></tr></table></figure><h2 id="用作对象"><a href="#用作对象" class="headerlink" title="用作对象"></a>用作对象</h2><p>A Java lambda expression is essentially an object. You can assign a lambda expression to a variable and pass it around, like you do with any other object. Here is an example:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">MyComparator</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2)</span></span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">MyComparator myComparator = (a, b) -&gt; a &gt; b;</div><div class="line"></div><div class="line"><span class="keyword">boolean</span> result = myComparator.compare(<span class="number">2</span>, <span class="number">5</span>);</div></pre></td></tr></table></figure><p>第一个代码块显示了lambda表达式实现的接口。 第二个代码块显示了lambda表达式的定义，lambda表达式如何分配给变量，最后是如何通过调用它实现的接口方法来调用lambda表达式。</p><p>扩展阅读，<a href="http://www.importnew.com/16436.html" target="_blank" rel="external">Java8 lambda表达式10个示例</a></p><p>参考：<br><a href="http://tutorials.jenkov.com/java/lambda-expressions.html" target="_blank" rel="external">Java Lambda Expressions</a>，Jakob Jenkov</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Lambda表达式是Java 8中的新特性，是Java迈入函数式编程的第一步，它不依赖于任何类而被创建，它能像对象一样被传递和按需执行。&lt;/p&gt;
&lt;h2 id=&quot;Lambda与单方法接口&quot;&gt;&lt;a href=&quot;#Lambda与单方法接口&quot; class=&quot;headerlink&quot; title=&quot;Lambda与单方法接口&quot;&gt;&lt;/a&gt;Lambda与单方法接口&lt;/h2&gt;&lt;p&gt;函数式编程常被用于实现事件监听器，事件监听器在java中常被定义为一个接口，该接口通常只有一个方法：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;StateChangeListener&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;onStateChange&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(State oldState, State newState)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个接口定义了一个方法，期望状态发生改变时被调用。&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>理解cron表达式</title>
    <link href="http://yoursite.com/2018/03/01/%E7%90%86%E8%A7%A3cron%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    <id>http://yoursite.com/2018/03/01/理解cron表达式/</id>
    <published>2018-03-01T03:00:00.000Z</published>
    <updated>2018-03-01T03:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-Cron-Expressions"><a href="#A-Cron-Expressions" class="headerlink" title="A Cron Expressions"></a>A Cron Expressions</h2><p>cron表达式形如 <code>0 0 12 * * ?</code> ，由 <code>Seconds</code> <code>Minutes</code> <code>Hours</code> <code>Day of month</code> <code>Month</code> <code>Day of week</code> <code>Year</code> 字段构成，即<code>几秒</code> <code>几分</code> <code>几时</code> <code>几号</code> <code>几月</code> <code>周几</code> <code>哪年</code>。 字段之间使用空格分隔，每个字段可包含任意多个合法的字符。</p><p>Table A-1 Cron Expressions Allowed Fields and Values</p><table><thead><tr><th>Name</th><th style="text-align:center">Required</th><th style="text-align:center">Allowed Values</th><th style="text-align:center">Allowed Special Characters</th></tr></thead><tbody><tr><td>Seconds</td><td style="text-align:center">Y</td><td style="text-align:center">0-59</td><td style="text-align:center">, - * /</td></tr><tr><td>Minutes</td><td style="text-align:center">Y</td><td style="text-align:center">0-59</td><td style="text-align:center">, - * /</td></tr><tr><td>Hours</td><td style="text-align:center">Y</td><td style="text-align:center">0-23</td><td style="text-align:center">, - * /</td></tr><tr><td>Day of month</td><td style="text-align:center">Y</td><td style="text-align:center">1-31</td><td style="text-align:center">, - * ? / L W</td></tr><tr><td>Month</td><td style="text-align:center">Y</td><td style="text-align:center">1-12 or JAN-DEC</td><td style="text-align:center">, - * /</td></tr><tr><td>Day of week</td><td style="text-align:center">Y</td><td style="text-align:center">1-7 or SUN-SAT</td><td style="text-align:center">, - * ? / L #</td></tr><tr><td>Year</td><td style="text-align:center">N</td><td style="text-align:center">empty or 1970-2099</td><td style="text-align:center">, - * /</td></tr></tbody></table><a id="more"></a><h2 id="Special-Characters"><a href="#Special-Characters" class="headerlink" title="Special Characters"></a>Special Characters</h2><p><code>*</code> (“all values”) - 用于表示字段中的所有值。例如，<code>Minutes</code>字段中的“*”意味着每一分钟。</p><p><code>?</code> (“no specific value”) -  不指定特定的值，举个例子，如果我希望我的任务在某月中特定的某天（如第10天）被触发，并且我不关心是星期几被触发，那么我会设置<code>day-of-month</code>字段为<code>10</code>，设置<code>day-of-week</code>字段为<code>?</code></p><p><code>-</code> - 用于指定范围.如<code>hour</code>值为<code>10-12</code> 表示10时，11时，12时。</p><p><code>,</code> - 用于指定附加的值。例如，<code>day-of-week</code>的值为<code>MON,WED,FRI</code>表示星期天，星期三，星期五</p><p><code>/</code> - 用于指定增长。例如，秒字段值为“0/15”表示具体为第0秒，15秒，30秒，45秒的集合，即从第0秒开始，间隔15秒累加。秒字段值为“5/15”表示具体为第5秒，20秒，35秒，50秒的集合，即从第5秒开始，间隔15秒累加。也可以把/写在’’(即空串，没有’’)后面如’/15’,这种情况等价于’0/15’。<code>day-of-month</code>等于<code>1/3</code> 表示从某月的第一天开始，每隔3天触发。</p><p><code>L</code> (“last”) - 指最后，不同的情况有不同的含义，如<code>day-of-month</code>等于“L”表示月中的最后一天。<code>day-of-week</code>等于“L”仅表示7或者SAT。<code>day-of-week</code>等于“6L”表示月中的最后一个周五。也可以从月中的最后一天指定一个偏移量，例如<code>day-of-month</code>等于“L-3”表示月中的倒数第三天。当使用“L”选项时，切记不要指定列表或值的范围，因为可能会得到令人困惑意外的结果。</p><p><code>W</code> (“weekday”) - 用于指定离指定日最近的工作日（星期一至星期五）。例如，如果您要将“15W”指定为<code>day-of-month</code>字段的值，则含义为：“距离本月15日最近的工作日”。因此，如果15日是星期六，触发器将于14日星期五触发。如果15日是星期天，触发器将在16日星期一触发。如果15日是星期二，那么它将在15日星期二触发。 但是，如果您将“1W”指定为<code>day-of-month</code>的值，并且1号是星期六，则触发器将在星期一即3号触发，因为它不能跨越当前月的边界。’W’字符只能在<code>day-of-month</code>是单日而不是日期范围或日期列表时指定。</p><p>L和W字符也能联合使用在<code>day-of-mouth</code>字段中，即<code>LW</code>，它表示月中的最后一个工作日。</p><p><code>#</code> - 用于指定月中的第几天。例如，<code>day-of-week</code>等于“6#3”表示月中的第三个星期五。又如，“2#1” 表示月中的第一个星期一，“4#5”表示月中的第五个星期三。注意如果你指定了“#5”，并且该月的星期不存在5个，则该月不会发生任何触发。</p><p>合法字符串、月份名称、星期名称不区分大小写，MON等价于mon。</p><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p>下面的例子自己理解一下吧~<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Fire at 12:00 PM (noon) every day</span></div><div class="line">0 0 12 * * ?</div><div class="line"><span class="comment"># Fire at 10:15 AM every day</span></div><div class="line">0 15 10 ? * *</div><div class="line"><span class="comment"># Fire at 10:15 AM every day</span></div><div class="line">0 15 10 * * ?</div><div class="line"><span class="comment"># Fire at 10:15 AM every day</span></div><div class="line">0 15 10 * * ? *</div><div class="line"><span class="comment"># Fire at 10:15 AM every day during the year 2005</span></div><div class="line">0 15 10 * * ? 2005</div><div class="line"><span class="comment"># Fire every minute starting at 2:00 PM and ending at 2:59 PM, every day</span></div><div class="line">0 * 14 * * ?</div><div class="line"><span class="comment"># Fire every 5 minutes starting at 2:00 PM and ending at 2:55 PM, every day</span></div><div class="line">0 0/5 14 * * ?</div><div class="line"><span class="comment"># Fire every 5 minutes starting at 2:00 PM and ending at 2:55 PM, AND fire every 5 minutes starting at 6:00 PM and ending at 6:55 PM, every day</span></div><div class="line">0 0/5 14,18 * * ?</div><div class="line"><span class="comment"># Fire every minute starting at 2:00 PM and ending at 2:05 PM, every day</span></div><div class="line">0 0-5 14 * * ?</div><div class="line"><span class="comment"># Fire at 2:10 PM and at 2:44 PM every Wednesday in the month of March</span></div><div class="line">0 10,44 14 ? 3 WED</div><div class="line"><span class="comment"># Fire at 10:15 AM every Monday, Tuesday, Wednesday, Thursday and Friday</span></div><div class="line">0 15 10 ? * MON-FRI</div><div class="line"><span class="comment"># Fire at 10:15 AM on the 15th day of every month</span></div><div class="line">0 15 10 15 * ?</div><div class="line"><span class="comment"># Fire at 10:15 AM on the last day of every month</span></div><div class="line">0 15 10 L * ?</div><div class="line"><span class="comment"># Fire at 10:15 AM on the last Friday of every month</span></div><div class="line">0 15 10 ? * 6L</div><div class="line"><span class="comment"># Fire at 10:15 AM on the last Friday of every month</span></div><div class="line">0 15 10 ? * 6L</div><div class="line"><span class="comment"># Fire at 10:15 AM on every last friday of every month during the years 2002, 2003, 2004, and 2005</span></div><div class="line">0 15 10 ? * 6L 2002-2005</div><div class="line"><span class="comment"># Fire at 10:15 AM on the third Friday of every month</span></div><div class="line">0 15 10 ? * 6<span class="comment">#3</span></div><div class="line"><span class="comment"># Fire at 12 PM (noon) every 5 days every month, starting on the first day of the month</span></div><div class="line">0 0 12 1/5 * ?</div><div class="line"><span class="comment"># Fire every November 11 at 11:11 AM</span></div><div class="line">0 11 11 11 11 ?</div></pre></td></tr></table></figure></p><p>参考资料：<br>1.<a href="https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm" target="_blank" rel="external">Cron Expressions</a><br>2.<a href="http://www.quartz-scheduler.org/documentation/quartz-2.2.x/tutorials/crontrigger.html" target="_blank" rel="external">Cron Trigger Tutorial</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;A-Cron-Expressions&quot;&gt;&lt;a href=&quot;#A-Cron-Expressions&quot; class=&quot;headerlink&quot; title=&quot;A Cron Expressions&quot;&gt;&lt;/a&gt;A Cron Expressions&lt;/h2&gt;&lt;p&gt;cron表达式形如 &lt;code&gt;0 0 12 * * ?&lt;/code&gt; ，由 &lt;code&gt;Seconds&lt;/code&gt; &lt;code&gt;Minutes&lt;/code&gt; &lt;code&gt;Hours&lt;/code&gt; &lt;code&gt;Day of month&lt;/code&gt; &lt;code&gt;Month&lt;/code&gt; &lt;code&gt;Day of week&lt;/code&gt; &lt;code&gt;Year&lt;/code&gt; 字段构成，即&lt;code&gt;几秒&lt;/code&gt; &lt;code&gt;几分&lt;/code&gt; &lt;code&gt;几时&lt;/code&gt; &lt;code&gt;几号&lt;/code&gt; &lt;code&gt;几月&lt;/code&gt; &lt;code&gt;周几&lt;/code&gt; &lt;code&gt;哪年&lt;/code&gt;。 字段之间使用空格分隔，每个字段可包含任意多个合法的字符。&lt;/p&gt;
&lt;p&gt;Table A-1 Cron Expressions Allowed Fields and Values&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Name&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Required&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Allowed Values&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Allowed Special Characters&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Seconds&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0-59&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Minutes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0-59&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Hours&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0-23&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day of month&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1-31&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * ? / L W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Month&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1-12 or JAN-DEC&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * /&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Day of week&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;Y&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1-7 or SUN-SAT&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * ? / L #&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Year&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;N&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;empty or 1970-2099&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;, - * /&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="教程" scheme="http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Hibernate5.0快速入门</title>
    <link href="http://yoursite.com/2017/12/20/Hibernate5.0%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8/"/>
    <id>http://yoursite.com/2017/12/20/Hibernate5.0快速入门/</id>
    <published>2017-12-20T14:22:00.000Z</published>
    <updated>2017-12-20T15:20:06.541Z</updated>
    
    <content type="html"><![CDATA[<p>参考 <a href="https://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/Hibernate_User_Guide.html" target="_blank" rel="external">Hibernate ORM 5.0 User Guide</a>整理，作为快速入门简明手册。</p><h2 id="体系结构"><a href="#体系结构" class="headerlink" title="体系结构"></a>体系结构</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><img src="https://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/images/architecture/data_access_layers.svg" alt="这里写图片描述"></p><p>如上图所示：java应用利用Hibernate API 来完成 load, store, query等对其领域数据的操作。</p><p>作为JPA的提供者，Hibernate实现了JPA规范，JPA接口和Hibernate具体的实现关系如下图所示：</p><p><img src="https://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/images/architecture/JPA_Hibernate.svg" alt="这里写图片描述"></p><a id="more"></a><p>SessionFactory (<code>org.hibernate.SessionFactory</code>)</p><p>Session实例工厂，一个线程安全的，不可变的代表应用领域模型到一个数据库的映射。<code>EntityManagerFactory</code>在JPA中等价于SessionFactory</p><p>Session (<code>org.hibernate.Session</code>)</p><p>一个单线程，短暂的对象，使用PoEAA《Patterns of Enterprise Application Architecture》中的“Unit of Work”概念设计。</p><p>Transaction (<code>org.hibernate.Transaction</code>)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考 &lt;a href=&quot;https://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/Hibernate_User_Guide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hibernate ORM 5.0 User Guide&lt;/a&gt;整理，作为快速入门简明手册。&lt;/p&gt;
&lt;h2 id=&quot;体系结构&quot;&gt;&lt;a href=&quot;#体系结构&quot; class=&quot;headerlink&quot; title=&quot;体系结构&quot;&gt;&lt;/a&gt;体系结构&lt;/h2&gt;&lt;h3 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/images/architecture/data_access_layers.svg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;如上图所示：java应用利用Hibernate API 来完成 load, store, query等对其领域数据的操作。&lt;/p&gt;
&lt;p&gt;作为JPA的提供者，Hibernate实现了JPA规范，JPA接口和Hibernate具体的实现关系如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://docs.jboss.org/hibernate/orm/5.0/userguide/html_single/images/architecture/JPA_Hibernate.svg&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hibernate" scheme="http://yoursite.com/categories/Hibernate/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>理解POJO</title>
    <link href="http://yoursite.com/2017/12/14/%E7%90%86%E8%A7%A3POJOs/"/>
    <id>http://yoursite.com/2017/12/14/理解POJOs/</id>
    <published>2017-12-14T14:43:00.000Z</published>
    <updated>2017-12-16T11:42:57.013Z</updated>
    
    <content type="html"><![CDATA[<p>POJO表示Plain Old Java Object。它是一个java对象的实例，并且不耦合在各种框架扩展中。</p><p>比如，想从JMS中取出消息，你需要编写一个类实现<code>MessageListener</code>接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleListener</span> <span class="keyword">implements</span> <span class="title">MessageListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (message <span class="keyword">instanceof</span> TextMessage) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                System.out.println(((TextMessage) message).getText());</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">catch</span> (JMSException ex) &#123;</div><div class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(ex);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Message must be of type TextMessage"</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure><p>这会使你的代码变得不通用，迁移到其他消息中间件实现时会变的困难。如果你的应用使用了大量的监听器，</p><p>那么基于以上的情形选择AMQP或其它方案将变得几乎不可能。</p><p>基于POJO的实现意味着你的消息处理不需实现具体框架的接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Component</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ExampleListener</span> </span>&#123;</div><div class="line"></div><div class="line">    <span class="meta">@JmsListener</span>(destination = <span class="string">"myDestination"</span>)</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">processOrder</span><span class="params">(String message)</span> </span>&#123;</div><div class="line">    System.out.println(message);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><p>在这个例子中，你的代码没有直接绑定任何接口。取而代之的是，连接JMS队列的责任被转移到了</p><p>注解中，并且注解更容易更新。当前示例中，你可以用@RabbitListener替换@JmsListener。在其他</p><p>情形下，基于POJO的实现方案可能不使用任何注解。</p><p>这只是一个小例子，它没有对比JMS和Rabbit MQ，而是用以说明代码不绑定接口的意义。通过使用POJO，</p><p>你的代码变得更简单。这样有助于更好的测试，灵活性以及应对以后发生改变的情况。</p><p>Spring及各种组件始终致力于减少代码和类库之间的耦合。这是依赖注入的首要概念，</p><p>即你的服务(指框架组件等)被使用的方式应该是接通应用程序的一部分，而不是服务本身(否则应用和服务发生耦合)。</p><p><a href="https://spring.io/understanding/POJO" target="_blank" rel="external">https://spring.io/understanding/POJO</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;POJO表示Plain Old Java Object。它是一个java对象的实例，并且不耦合在各种框架扩展中。&lt;/p&gt;
&lt;p&gt;比如，想从JMS中取出消息，你需要编写一个类实现&lt;code&gt;MessageListener&lt;/code&gt;接口。&lt;/p&gt;
&lt;figure class
      
    
    </summary>
    
      <category term="编程语言" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/"/>
    
      <category term="Java" scheme="http://yoursite.com/categories/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Windows下noinstallZIP方式配置MySQL5.7</title>
    <link href="http://yoursite.com/2017/11/04/Windows%E4%B8%8BnoinstallZIP%E6%96%B9%E5%BC%8F%E9%85%8D%E7%BD%AEMySQL5.7/"/>
    <id>http://yoursite.com/2017/11/04/Windows下noinstallZIP方式配置MySQL5.7/</id>
    <published>2017-11-04T13:57:00.000Z</published>
    <updated>2017-11-04T14:35:49.560Z</updated>
    
    <content type="html"><![CDATA[<p>参考: <a href="https://dev.mysql.com/doc/refman/5.7/en/windows-install-archive.html" target="_blank" rel="external">https://dev.mysql.com/doc/refman/5.7/en/windows-install-archive.html</a></p><h3 id="下载MySQL"><a href="#下载MySQL" class="headerlink" title="下载MySQL"></a>下载MySQL</h3><p><a href="https://dev.mysql.com/downloads/mysql/" target="_blank" rel="external">https://dev.mysql.com/downloads/mysql/</a> 选择 Windows (x86, 64-bit), ZIP Archive</p><blockquote><p>MySQL Community 5.7 Server requires the Microsoft Visual C++ 2013 Redistributable Package to run on Windows platforms.</p></blockquote><p>MySQL 5.7版本需要安装Microsoft Visual C++ 2013 Redistributable Package</p><p>下载安装: <a href="https://www.microsoft.com/en-us/download/details.aspx?id=40784" target="_blank" rel="external">https://www.microsoft.com/en-us/download/details.aspx?id=40784</a></p><a id="more"></a><h3 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h3><h4 id="1-将下载的MySQL压缩包解压"><a href="#1-将下载的MySQL压缩包解压" class="headerlink" title="1. 将下载的MySQL压缩包解压"></a>1. 将下载的MySQL压缩包解压</h4><p>如<code>D:\dev_app\DB\mysql-5.7.20-winx64</code>目录下，</p><p>将<code>D:\dev_app\DB\mysql-5.7.20-winx64\bin</code> 加入到系统环境变量中</p><p>同时创建数据存储目录如：<code>D:\dev_app\DB\mysql-5.7.20-winx64\data</code></p><h4 id="2-创建配置mysql-ini文件"><a href="#2-创建配置mysql-ini文件" class="headerlink" title="2. 创建配置mysql.ini文件"></a>2. 创建配置mysql.ini文件</h4><blockquote><p>As of MySQL 5.7.18, my-default.ini is no longer included in or installed by distribution packages.</p></blockquote><p>MySQL 5.7.18之后，my-default.ini不在包含在分发包中，我们在<code>D:\dev_app\DB\mysql-5.7.20-winx64</code>目录下自己创建一个my.ini</p><p>内容如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># For advice on how to change settings please see</span></div><div class="line"><span class="comment"># http://dev.mysql.com/doc/refman/5.6/en/server-configuration-defaults.html</span></div><div class="line"><span class="comment"># *** DO NOT EDIT THIS FILE. It's a template which will be copied to the</span></div><div class="line"><span class="comment"># *** default location during install, and will be replaced if you</span></div><div class="line"><span class="comment"># *** upgrade to a newer version of MySQL.</span></div><div class="line"></div><div class="line">[mysqld]</div><div class="line"></div><div class="line"><span class="comment"># Remove leading # and set to the amount of RAM for the most important data</span></div><div class="line"><span class="comment"># cache in MySQL. Start at 70% of total RAM for dedicated server, else 10%.</span></div><div class="line"><span class="comment"># innodb_buffer_pool_size = 128M</span></div><div class="line"></div><div class="line"><span class="comment"># Remove leading # to turn on a very important data integrity option: logging</span></div><div class="line"><span class="comment"># changes to the binary log between backups.</span></div><div class="line"><span class="comment"># log_bin</span></div><div class="line"></div><div class="line"><span class="comment"># These are commonly set, remove the # and set as required.</span></div><div class="line">basedir=D:\dev_app\DB\mysql-5.7.20-winx64</div><div class="line">datadir=D:\\dev_app\\B\\mysql-5.7.20-winx64\\data</div><div class="line"><span class="comment"># port = .....</span></div><div class="line"><span class="comment"># server_id = .....</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment"># Remove leading # to set options mainly useful for reporting servers.</span></div><div class="line"><span class="comment"># The server defaults are faster for transactions and fast SELECTs.</span></div><div class="line"><span class="comment"># Adjust sizes as needed, experiment to find the optimal values.</span></div><div class="line"><span class="comment"># join_buffer_size = 128M</span></div><div class="line"><span class="comment"># sort_buffer_size = 2M</span></div><div class="line"><span class="comment"># read_rnd_buffer_size = 2M </span></div><div class="line"></div><div class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</div></pre></td></tr></table></figure><h3 id="初始化数据目录"><a href="#初始化数据目录" class="headerlink" title="初始化数据目录"></a>初始化数据目录</h3><p>管理员权限启动CMD, 使用mysqld初始化目录:<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mysqld --defaults-file=D:\dev_app\DB\mysql-5.7.20-winx64\my.ini --initialize</div></pre></td></tr></table></figure></p><p>data目录下会生成一个.err扩展名的文件，打开它，里面会记录生成的MySQL临时密码：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">2017-11-03T11:53:18.008877Z 1 [Note] A temporary password is generated <span class="keyword">for</span> root@localhost: xd<span class="comment">#pZirf&amp;2Gk</span></div></pre></td></tr></table></figure></p><p>执行目录初始化主要完成以下功能：</p><blockquote><ul><li>检查数据目录是否存在</li><li>创建mysql数据库及系统表等</li><li>初始化系统表空间等</li><li>服务器创建’root’@’localhost’ 超级用户帐户和其他保留帐户</li><li>其他</li></ul></blockquote><h3 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 可以不带console参数，日志写到文件中，不在屏幕上输出</span></div><div class="line">C:\Users\Administrator&gt;mysqld --console</div></pre></td></tr></table></figure><p>启动成功<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">2017-11-03T12:06:51.583410Z 0 [Note] .\bin\mysqld.exe: ready <span class="keyword">for</span> connections.</div><div class="line">Version: <span class="string">'5.7.20'</span>  socket: <span class="string">''</span>  port: 3306  MySQL Community Server (GPL)</div><div class="line">2017-11-03T12:06:51.583410Z 0 [Note] Executing <span class="string">'SELECT * FROM INFORMATION_SCHEMA</span></div><div class="line">.TABLES;' to get a list of tables using the deprecated partition engine. You may</div><div class="line"> use the startup option <span class="string">'--disable-partition-engine-check'</span> to skip this check.</div><div class="line">2017-11-03T12:06:51.584410Z 0 [Note] Beginning of list of non-natively partition</div><div class="line">ed tables</div><div class="line">2017-11-03T12:06:51.602411Z 0 [Note] End of list of non-natively partitioned tab</div><div class="line">les</div></pre></td></tr></table></figure></p><h3 id="连接到MySQL"><a href="#连接到MySQL" class="headerlink" title="连接到MySQL"></a>连接到MySQL</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mysql -u root -p</div><div class="line">Enter password: ************</div><div class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</div><div class="line">Your MySQL connection id is 3</div><div class="line">Server version: 5.7.20</div><div class="line"></div><div class="line">Copyright (c) 2000, 2017, Oracle and/or its affiliates. All rights reserved.</div><div class="line"></div><div class="line">Oracle is a registered trademark of Oracle Corporation and/or its</div><div class="line">affiliates. Other names may be trademarks of their respective</div><div class="line">owners.</div><div class="line"></div><div class="line">Type <span class="string">'help;'</span> or <span class="string">'\h'</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">'\c'</span> to clear the current input statement.</div><div class="line"></div><div class="line">mysql&gt;</div></pre></td></tr></table></figure><h4 id="分配一个新的root密码"><a href="#分配一个新的root密码" class="headerlink" title="分配一个新的root密码"></a>分配一个新的root密码</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mysql&gt; ALTER USER <span class="string">'root'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'123456'</span>;</div><div class="line">Query OK, 0 rows affected (0.00 sec)</div></pre></td></tr></table></figure><h3 id="将MySQL作为windows服务"><a href="#将MySQL作为windows服务" class="headerlink" title="将MySQL作为windows服务"></a>将MySQL作为windows服务</h3><p>确保mysql服务停止</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mysqladmin -u root -p shutdown</div><div class="line">Enter password: ******</div><div class="line"></div><div class="line"><span class="comment"># another termianl</span></div><div class="line">...</div><div class="line">2017-11-04T13:45:23.331094Z 0 [Note] InnoDB: Buffer pool(s) dump completed at 171104 21:45:23</div><div class="line">2017-11-04T13:45:24.331199Z 0 [Note] InnoDB: Shutdown completed; <span class="built_in">log</span> sequence number 2565405</div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] InnoDB: Removed temporary tablespace data file: <span class="string">"ibtmp1"</span></div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] Shutting down plugin <span class="string">'MEMORY'</span></div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] Shutting down plugin <span class="string">'CSV'</span></div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] Shutting down plugin <span class="string">'sha256_password'</span></div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] Shutting down plugin <span class="string">'mysql_native_password'</span></div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] Shutting down plugin <span class="string">'binlog'</span></div><div class="line">2017-11-04T13:45:24.347199Z 0 [Note] mysqld: Shutdown complete</div></pre></td></tr></table></figure><p>将MySQL Server作为Windows Service自动启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mysqld --install</div><div class="line">Service successfully installed.</div></pre></td></tr></table></figure><p>移除MySQL服务<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">C:\Users\Administrator&gt;mysqld --remove</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;参考: &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/windows-install-archive.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://dev.mysql.com/doc/refman/5.7/en/windows-install-archive.html&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;下载MySQL&quot;&gt;&lt;a href=&quot;#下载MySQL&quot; class=&quot;headerlink&quot; title=&quot;下载MySQL&quot;&gt;&lt;/a&gt;下载MySQL&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://dev.mysql.com/downloads/mysql/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://dev.mysql.com/downloads/mysql/&lt;/a&gt; 选择 Windows (x86, 64-bit), ZIP Archive&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;MySQL Community 5.7 Server requires the Microsoft Visual C++ 2013 Redistributable Package to run on Windows platforms.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;MySQL 5.7版本需要安装Microsoft Visual C++ 2013 Redistributable Package&lt;/p&gt;
&lt;p&gt;下载安装: &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=40784&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.microsoft.com/en-us/download/details.aspx?id=40784&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="http://yoursite.com/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
      <category term="数据库" scheme="http://yoursite.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="Windows" scheme="http://yoursite.com/tags/Windows/"/>
    
  </entry>
  
</feed>
