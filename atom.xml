<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yongtao&#39;s Blog</title>
  
  <subtitle>坚守 无畏 宽容 进取</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-23T16:04:02.302Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangyt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>CAP定理</title>
    <link href="http://yoursite.com/2019/07/24/CAP%E5%AE%9A%E7%90%86/"/>
    <id>http://yoursite.com/2019/07/24/CAP定理/</id>
    <published>2019-07-23T16:01:45.000Z</published>
    <updated>2019-07-23T16:04:02.302Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p>Consistency: all nodes see the same data at the same time. 即所有的节点在同一时间读到同样的数据。</p></li><li><p>Availability: a guarantee that every request receives a response about whether it was successful or failed. 请求无论成功还是失败，都能收到一个响应。</p></li><li><p>Partition-Tolerance: the system continues to operate despite arbitrary message loss or failure of part of the system. 系统仍能运行尽管部分节点出问题或者丢失消息</p></li></ul><p>More info: <a href="https://www.cnblogs.com/jeffwongishandsome/p/talk-about-arch-design-and-load-balance-and-hign-availability-in-system-architecture.html" target="_blank" rel="external">系统架构设计理论与原则、负载均衡及高可用系统设计速记</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;Consistency: all nodes see the same data at the same time. 即所有的节点在同一时间读到同样的数据。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Availability: a guarantee that e
      
    
    </summary>
    
      <category term="分布式" scheme="http://yoursite.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="CAP" scheme="http://yoursite.com/tags/CAP/"/>
    
  </entry>
  
  <entry>
    <title>Ansible Playbook安装docker</title>
    <link href="http://yoursite.com/2019/07/11/Ansible%20Playbook%E7%A4%BA%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/07/11/Ansible Playbook示例/</id>
    <published>2019-07-11T05:32:18.000Z</published>
    <updated>2019-07-11T05:36:52.619Z</updated>
    
    <content type="html"><![CDATA[<p>展示一个安装docker示例，Ansible playbook内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: all</div><div class="line">  tasks:</div><div class="line">  - name: Remove docker</div><div class="line">    yum:</div><div class="line">      name: [<span class="string">'docker'</span>, <span class="string">'docker-client'</span>, <span class="string">'docker-client-latest'</span>, <span class="string">'docker-common'</span>, <span class="string">'docker-latest'</span>, <span class="string">'docker-latest-logrotate'</span>, <span class="string">'docker-logrotate'</span>, <span class="string">'docker-selinux'</span>, <span class="string">'docker-engine-selinux'</span>]</div><div class="line">      state: removed</div><div class="line">  - name: Install yum utils</div><div class="line">    yum:</div><div class="line">      name: [<span class="string">'yum-utils'</span>, <span class="string">'device-mapper-persistent-data'</span>, <span class="string">'lvm2'</span>]</div><div class="line">      state: installed</div><div class="line">  - name: <span class="built_in">Set</span> aliyun repo</div><div class="line">    shell: yum-config-manager --add-repo http:<span class="comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo;yum makecache fast</span></div><div class="line">  - name: Install docker-ce</div><div class="line">    yum: name=docker-ce state=installed</div><div class="line">  - name: Registry mirrors</div><div class="line">    script: ./registry_mirrors.sh</div><div class="line">  - name: After registry mirrors</div><div class="line">    shell: systemctl daemon-reload;systemctl restart docker;systemctl enable docker</div><div class="line">  - name: Show docker version</div><div class="line">    command: docker -v</div><div class="line">    register: result</div><div class="line">  - name: Debug info</div><div class="line">    debug: msg=<span class="string">'&#123;&#123;result.stdout_lines&#125;&#125;'</span></div></pre></td></tr></table></figure><p>registry_mirrors.sh脚本内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line">mkdir -p /etc/docker</div><div class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://kc0hk0ee.mirror.aliyuncs.com"</span>]</div><div class="line">&#125;</div><div class="line">EOF</div></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ansible-playbook install_docker.yml</div></pre></td></tr></table></figure><p>More info: <a href="https://yongtao.wang/2018/10/25/Docker%20install/" target="_blank" rel="external">Docker install</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;展示一个安装docker示例，Ansible playbook内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div
      
    
    </summary>
    
      <category term="ansible" scheme="http://yoursite.com/categories/ansible/"/>
    
    
      <category term="ansible" scheme="http://yoursite.com/tags/ansible/"/>
    
      <category term="playbook" scheme="http://yoursite.com/tags/playbook/"/>
    
  </entry>
  
  <entry>
    <title>Linux下ssh公钥认证</title>
    <link href="http://yoursite.com/2019/07/01/Linux%E4%B8%8Bssh%E5%85%AC%E9%92%A5%E8%AE%A4%E8%AF%81/"/>
    <id>http://yoursite.com/2019/07/01/Linux下ssh公钥认证/</id>
    <published>2019-07-01T11:15:33.000Z</published>
    <updated>2019-07-01T11:15:37.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">编号</th><th style="text-align:center">机器名</th><th style="text-align:center">IP</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">ansible-manager</td><td style="text-align:center">192.168.91.140</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">cluster_001</td><td style="text-align:center">192.168.91.141</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">…</td></tr></tbody></table><h4 id="创建密钥对"><a href="#创建密钥对" class="headerlink" title="创建密钥对"></a>创建密钥对</h4><p>在ansible-manager上执行ssh-keygen命令，一路回车。</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@ansible-manager .ssh]<span class="comment"># ssh-keygen</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </div><div class="line">Enter same passphrase again: </div><div class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:PQtPisFEFbco9jI1loIXyK7y/xr9n6vp562aQ/OkJJs root@ansible-manager</div><div class="line">The key<span class="string">'s randomart image is:</span></div><div class="line">+---[RSA 2048]----+</div><div class="line">|   . .o.o..      |</div><div class="line">|    oo . + .     |</div><div class="line">|   .. * * .      |</div><div class="line">|    .= * o       |</div><div class="line">|   .  = S +      |</div><div class="line">|. .  ..=+=.o     |</div><div class="line">| o  . o*.=o      |</div><div class="line">|  .  .E.oooo     |</div><div class="line">|   .oo..BB*o.    |</div><div class="line">+----[SHA256]-----+</div><div class="line"></div><div class="line"># 生成密钥对id_rsa &amp; id_rsa.pub，其中id_rsa.pub是公钥。</div><div class="line">[root@ansible-manager .ssh]# ls -lh</div><div class="line">total 8.0K</div><div class="line">-rw-------. 1 root root 1.7K Jul  2 03:25 id_rsa</div><div class="line">-rw-r--r--. 1 root root  402 Jul  2 03:25 id_rsa.pub</div><div class="line">-rw-r--r--. 1 root root    0 Jul  2 03:24 known_hosts</div></pre></td></tr></table></figure><h4 id="发送公钥"><a href="#发送公钥" class="headerlink" title="发送公钥"></a>发送公钥</h4><p>将ansible-manager公钥发送给cluster_001，第一次发送公钥的时候，需要输入密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@ansible-manager .ssh]<span class="comment"># ssh-copy-id -i ./id_rsa.pub "root@192.168.91.141"</span></div><div class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"./id_rsa.pub"</span></div><div class="line">The authenticity of host <span class="string">'192.168.91.141 (192.168.91.141)'</span> can<span class="string">'t be established.</span></div><div class="line">ECDSA key fingerprint is SHA256:HcrnywII1gZEW3uk2muw+V+JyD0tbedR8hbdvWNrFMM.</div><div class="line">ECDSA key fingerprint is MD5:55:76:c1:5a:f5:ec:f6:3d:74:e7:d3:ec:ab:49:80:4d.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</div><div class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</div><div class="line">root@192.168.91.141's password: </div><div class="line"></div><div class="line">Number of key(s) added: 1</div><div class="line"></div><div class="line">Now try logging into the machine, with:   <span class="string">"ssh 'root@192.168.91.141'"</span></div><div class="line">and check to make sure that only the key(s) you wanted were added.</div></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>检查被管理机器cluster_001<code>/root/.ssh/authorized_keys</code>中，写入了ansible-manager 公钥内容。ansible-manager使用ssh连接cluster_001:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@ansible-manager .ssh]<span class="comment"># ssh 192.168.91.141</span></div><div class="line">Last login: Tue Jul  2 03:39:14 2019 from 192.168.91.140</div><div class="line">[root@cluster_001 ~]<span class="comment"># hostname</span></div><div class="line">cluster_001</div></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>管理机上创建ssh密钥对；</li><li>将管理机公钥分发给被管理机；</li><li>实现互免认证，可在另一台机器上执行上述流程。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;编号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;机器名&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;IP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ansible-manager&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.91.140&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cluster_001&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.91.141&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;创建密钥对&quot;&gt;&lt;a href=&quot;#创建密钥对&quot; class=&quot;headerlink&quot; title=&quot;创建密钥对&quot;&gt;&lt;/a&gt;创建密钥对&lt;/h4&gt;&lt;p&gt;在ansible-manager上执行ssh-keygen命令，一路回车。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>生产环境下的Elasticsearch参数调整</title>
    <link href="http://yoursite.com/2019/06/28/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84Elasticsearch%E5%8F%82%E6%95%B0%E8%B0%83%E6%95%B4/"/>
    <id>http://yoursite.com/2019/06/28/生产环境下的Elasticsearch参数调整/</id>
    <published>2019-06-28T01:37:00.000Z</published>
    <updated>2019-06-28T01:37:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>开启<code>config/elasticsearch.yml</code>中<code>network.host</code>配置后，ES启动时会切换为生产模式，开发模式下的警告会升级为异常，导致ES节点无法启动。</p><h4 id="禁止swapping"><a href="#禁止swapping" class="headerlink" title="禁止swapping"></a>禁止swapping</h4><p>设置Elasticsearch可锁定的、不被交换出的内存不受限制。编辑<code>config/elasticsearch.yml</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置为true</span></div><div class="line">bootstrap.memory_lock: <span class="literal">true</span></div></pre></td></tr></table></figure></p><p>编辑<code>/etc/security/limits.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># elasticsearch用户锁定内存(不会被swap)不受限制</span></div><div class="line">elasticsearch  -  memlock unlimited</div></pre></td></tr></table></figure></p><a id="more"></a><h4 id="增大文件描述符"><a href="#增大文件描述符" class="headerlink" title="增大文件描述符"></a>增大文件描述符</h4><p>编辑<code>/etc/security/limits.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># elasticsearch用户最多打开文件描述符的数量</span></div><div class="line">elasticsearch  -  nofile  65536</div></pre></td></tr></table></figure></p><h4 id="保证足够的线程数"><a href="#保证足够的线程数" class="headerlink" title="保证足够的线程数"></a>保证足够的线程数</h4><p>编辑<code>/etc/security/limits.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置elasticsearch用户最多创建线程数</span></div><div class="line">elasticsearch  -  nproc 4096</div></pre></td></tr></table></figure></p><h4 id="保证足够的虚拟内存"><a href="#保证足够的虚拟内存" class="headerlink" title="保证足够的虚拟内存"></a>保证足够的虚拟内存</h4><p>编辑<code>/etc/sysctl.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vm.max_map_count=262144</div></pre></td></tr></table></figure></p><h4 id="使设置生效"><a href="#使设置生效" class="headerlink" title="使设置生效"></a>使设置生效</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 加载系统配置参数</span></div><div class="line">[root@elasticstack-server filebeat-6.6.2-nginx]<span class="comment"># sysctl -p</span></div><div class="line">[root@elasticstack-server filebeat-6.6.2-nginx]<span class="comment"># sysctl vm.max_map_count</span></div><div class="line">vm.max_map_count = 262144</div><div class="line"></div><div class="line"><span class="comment"># 切换到elasticsearch用户使ulimit设置生效</span></div><div class="line">[root@elasticstack-server filebeat-6.6.2-nginx]<span class="comment"># su elasticsearch</span></div><div class="line">[elasticsearch@elasticstack-server elasticsearch-6.6.2]$ <span class="built_in">ulimit</span> -a</div><div class="line">core file size          (blocks, -c) 0</div><div class="line">data seg size           (kbytes, -d) unlimited</div><div class="line">scheduling priority             (-e) 0</div><div class="line">file size               (blocks, -f) unlimited</div><div class="line">pending signals                 (-i) 31140</div><div class="line">max locked memory       (kbytes, -l) unlimited</div><div class="line">max memory size         (kbytes, -m) unlimited</div><div class="line">open files                      (-n) 65536</div><div class="line">pipe size            (512 bytes, -p) 8</div><div class="line">POSIX message queues     (bytes, -q) 819200</div><div class="line">real-time priority              (-r) 0</div><div class="line">stack size              (kbytes, -s) 8192</div><div class="line">cpu time               (seconds, -t) unlimited</div><div class="line">max user processes              (-u) 4096</div><div class="line">virtual memory          (kbytes, -v) unlimited</div><div class="line">file locks                      (-x) unlimited</div><div class="line"></div><div class="line"><span class="comment"># 启动Elasticsearch</span></div><div class="line">[elasticsearch@elasticstack-server elasticsearch-6.6.2]$ ./bin/elasticsearch -d -p pid</div></pre></td></tr></table></figure><h4 id="检查设置"><a href="#检查设置" class="headerlink" title="检查设置"></a>检查设置</h4><p>Elasticsearch启动成功后，检查设置项：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置成功</span></div><div class="line">[root@elasticstack-server ~]<span class="comment"># curl -X GET "localhost:9200/_nodes?filter_path=**.mlockall"</span></div><div class="line">&#123;<span class="string">"nodes"</span>:&#123;<span class="string">"yW_SUaDnS6WED2QPm5y4TA"</span>:&#123;<span class="string">"process"</span>:&#123;<span class="string">"mlockall"</span>:<span class="literal">true</span>&#125;&#125;&#125;&#125;</div><div class="line"></div><div class="line">[root@elasticstack-server ~]<span class="comment"># curl -X GET "localhost:9200/_nodes/stats/process?filter_path=**.max_file_descriptors"</span></div><div class="line">&#123;<span class="string">"nodes"</span>:&#123;<span class="string">"yW_SUaDnS6WED2QPm5y4TA"</span>:&#123;<span class="string">"process"</span>:&#123;<span class="string">"max_file_descriptors"</span>:65536&#125;&#125;&#125;&#125;</div></pre></td></tr></table></figure></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/system-config.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/6.2/system-config.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开启&lt;code&gt;config/elasticsearch.yml&lt;/code&gt;中&lt;code&gt;network.host&lt;/code&gt;配置后，ES启动时会切换为生产模式，开发模式下的警告会升级为异常，导致ES节点无法启动。&lt;/p&gt;
&lt;h4 id=&quot;禁止swapping&quot;&gt;&lt;a href=&quot;#禁止swapping&quot; class=&quot;headerlink&quot; title=&quot;禁止swapping&quot;&gt;&lt;/a&gt;禁止swapping&lt;/h4&gt;&lt;p&gt;设置Elasticsearch可锁定的、不被交换出的内存不受限制。编辑&lt;code&gt;config/elasticsearch.yml&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置为true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bootstrap.memory_lock: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/security/limits.conf&lt;/code&gt;文件，追加下述配置：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# elasticsearch用户锁定内存(不会被swap)不受限制&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;elasticsearch  -  memlock unlimited&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://yoursite.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Docker swarm删除节点</title>
    <link href="http://yoursite.com/2019/05/15/Docker%20swarm%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9/"/>
    <id>http://yoursite.com/2019/05/15/Docker swarm删除节点/</id>
    <published>2019-05-15T03:31:49.000Z</published>
    <updated>2019-05-15T03:31:54.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker-swarm删除节点"><a href="#Docker-swarm删除节点" class="headerlink" title="Docker swarm删除节点"></a>Docker swarm删除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在管理节点上先排空节点</span></div><div class="line">docker node update --availability drain yyxh5zbei71kq7c5tadoq19ri</div><div class="line"><span class="comment"># 移除节点</span></div><div class="line">docker node rm yyxh5zbei71kq7c5tadoq19ri</div><div class="line"><span class="comment"># 或者强制删除</span></div><div class="line">docker node rm --force yyxh5zbei71kq7c5tadoq19ri</div><div class="line"></div><div class="line"><span class="comment"># 在所要删除的节点上执行</span></div><div class="line">docker swarm leave</div><div class="line"><span class="comment"># 或强制离开</span></div><div class="line">docker swarm leave --force</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Docker-swarm删除节点&quot;&gt;&lt;a href=&quot;#Docker-swarm删除节点&quot; class=&quot;headerlink&quot; title=&quot;Docker swarm删除节点&quot;&gt;&lt;/a&gt;Docker swarm删除节点&lt;/h3&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>网络IO之同步、异步 &amp; 阻塞、非阻塞</title>
    <link href="http://yoursite.com/2019/03/08/%E7%BD%91%E7%BB%9CIO%E4%B9%8B%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%20&amp;%20%E9%98%BB%E5%A1%9E%E3%80%81%E9%9D%9E%E9%98%BB%E5%A1%9E/"/>
    <id>http://yoursite.com/2019/03/08/网络IO之同步、异步 &amp; 阻塞、非阻塞/</id>
    <published>2019-03-08T06:41:27.000Z</published>
    <updated>2019-03-08T06:41:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>同步(Synchronous)</p><p>A synchronous I/O operation causes the requesting process to be blocked until that I/O operation completes; (同步I/O操作导致请求进程被阻塞，直到I/O操作完成)</p><p>异步(Asynchronous)</p><p>An asynchronous I/O operation does not cause the requesting process to be blocked; (异步I/O操作不会阻塞请求进程)</p><p>注意Non-blocking IO在执行recvfrom这个系统调用的时候，如果kernel的数据没有准备好，不会block进程；如果kernel数据准备好了，recvfrom会将数据从内核空间拷贝到用户空间，在这段时间内，进程还是被block的。</p><p>阻塞(Blocking)</p><p>阻塞调用是指调用结果返回之前，当前线程会被挂起。</p><p>非阻塞(Non-blocking)</p><p>非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。</p><p><a href="http://www.rowkey.me/blog/2016/01/18/io-model/" target="_blank" rel="external">http://www.rowkey.me/blog/2016/01/18/io-model/</a><br><a href="https://baiweiblog.wordpress.com/tag/non-blocking/" target="_blank" rel="external">https://baiweiblog.wordpress.com/tag/non-blocking/</a><br><a href="https://www.zhihu.com/question/19732473/answer/20851256" target="_blank" rel="external">https://www.zhihu.com/question/19732473/answer/20851256</a><br><a href="https://blog.csdn.net/historyasamirror/article/details/5778378" target="_blank" rel="external">https://blog.csdn.net/historyasamirror/article/details/5778378</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;同步(Synchronous)&lt;/p&gt;
&lt;p&gt;A synchronous I/O operation causes the requesting process to be blocked until that I/O operation completes; (同步I/O
      
    
    </summary>
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Git版本回退</title>
    <link href="http://yoursite.com/2019/03/04/Git%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80/"/>
    <id>http://yoursite.com/2019/03/04/Git版本回退/</id>
    <published>2019-03-04T07:39:00.000Z</published>
    <updated>2019-03-04T07:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>改动未提交至远程仓库的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 将HEAD指向commit_id</span></div><div class="line">[root@localhost ~]<span class="comment"># git reset --hard commit_id</span></div></pre></td></tr></table></figure><p>改动已提交至远程仓库的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># revert是放弃指定提交的修改，会生成一次新的提交，需要填写注释，历史记录都在；而reset是指将HEAD指针指到指定提交;</span></div><div class="line">[root@localhost ~]<span class="comment"># git revert HEAD</span></div><div class="line">[root@localhost ~]<span class="comment"># git push origin master</span></div></pre></td></tr></table></figure><a id="more"></a><p><a href="https://segmentfault.com/q/1010000000140446" target="_blank" rel="external">https://segmentfault.com/q/1010000000140446</a><br><a href="https://blog.csdn.net/yxlshk/article/details/79944535" target="_blank" rel="external">https://blog.csdn.net/yxlshk/article/details/79944535</a><br><a href="https://www.cnblogs.com/iloveyou-sky/p/6534409.html" target="_blank" rel="external">https://www.cnblogs.com/iloveyou-sky/p/6534409.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;改动未提交至远程仓库的情况&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 将HEAD指向commit_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# git reset --hard commit_id&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;改动已提交至远程仓库的情况&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# revert是放弃指定提交的修改，会生成一次新的提交，需要填写注释，历史记录都在；而reset是指将HEAD指针指到指定提交;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# git revert HEAD&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# git push origin master&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Docker Swarm节点维护标签</title>
    <link href="http://yoursite.com/2018/10/30/Docker%20Swarm%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/10/30/Docker Swarm节点维护标签/</id>
    <published>2018-10-30T07:50:00.000Z</published>
    <updated>2018-10-30T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Swarm节点维护标签"><a href="#Swarm节点维护标签" class="headerlink" title="Swarm节点维护标签"></a>Swarm节点维护标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@docker_001 ~]<span class="comment"># docker node ls</span></div><div class="line">ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION</div><div class="line">lw72u2jd7xi1xagw94cmd86kk *   docker_001          Ready               Active              Leader              18.06.1-ce</div><div class="line">2igmbyfampcduad32ustl00y8     docker_003          Ready               Active                                  18.06.1-ce</div><div class="line">wudald9nltt9mq9jo9aau3tvf     docker_005          Ready               Active                                  18.06.1-ce</div><div class="line"></div><div class="line"><span class="comment"># 增加一个type=dop的标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node update --label-add type=dop lw72u2jd7xi1xagw94cmd86kk</span></div><div class="line">lw72u2jd7xi1xagw94cmd86kk</div><div class="line"></div><div class="line"><span class="comment"># 查看标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node inspect lw72u2jd7xi1xagw94cmd86kk --pretty</span></div><div class="line">ID:lw72u2jd7xi1xagw94cmd86kk</div><div class="line">Labels:</div><div class="line"> - <span class="built_in">type</span>=dop</div><div class="line">Hostname:              docker_001</div><div class="line">Joined at:             2018-10-24 13:52:32.919572847 +0000 utc</div><div class="line">...</div><div class="line"></div><div class="line"><span class="comment"># 移除标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node update --label-rm type lw72u2jd7xi1xagw94cmd86kk</span></div><div class="line">lw72u2jd7xi1xagw94cmd86kk</div><div class="line">[root@docker_001 ~]<span class="comment"># docker node inspect lw72u2jd7xi1xagw94cmd86kk --pretty</span></div><div class="line">ID:lw72u2jd7xi1xagw94cmd86kk</div><div class="line">Hostname:              docker_001</div><div class="line">Joined at:             2018-10-24 13:52:32.919572847 +0000 utc</div></pre></td></tr></table></figure><p><a href="https://docs.docker.com/engine/swarm/manage-nodes/#add-or-remove-label-metadata" target="_blank" rel="external">Add-or-remove-label-metadata</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Swarm节点维护标签&quot;&gt;&lt;a href=&quot;#Swarm节点维护标签&quot; class=&quot;headerlink&quot; title=&quot;Swarm节点维护标签&quot;&gt;&lt;/a&gt;Swarm节点维护标签&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Deploy a stack to a swarm</title>
    <link href="http://yoursite.com/2018/10/30/Deploy%20a%20stack%20to%20a%20swarm/"/>
    <id>http://yoursite.com/2018/10/30/Deploy a stack to a swarm/</id>
    <published>2018-10-30T05:38:00.000Z</published>
    <updated>2018-10-30T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.docker.com/engine/swarm/stack-deploy/" target="_blank" rel="external">Deploy a stack to a swarm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/swarm/stack-deploy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deploy a stack to a swarm&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Powershell会话中设置环境变量</title>
    <link href="http://yoursite.com/2018/10/30/Powershell%E4%BC%9A%E8%AF%9D%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2018/10/30/Powershell会话中设置环境变量/</id>
    <published>2018-10-30T02:30:00.000Z</published>
    <updated>2018-10-30T02:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Powershell会话中设置环境变量"><a href="#Powershell会话中设置环境变量" class="headerlink" title="Powershell会话中设置环境变量"></a>Powershell会话中设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">PS C:\personal\idea\cloud-cook&gt; ls env:DOCKER_HOST</div><div class="line"></div><div class="line">Name                           Value</div><div class="line">----                           -----</div><div class="line">DOCKER_HOST                    tcp://192.168.1.114:2375</div><div class="line"></div><div class="line"></div><div class="line">PS C:\personal\idea\cloud-cook&gt; <span class="variable">$env</span>:DOCKER_HOST=<span class="string">"tcp://192.168.21.129:2375"</span>   <span class="comment"># 在当前会话中创建DOCKER_HOST环境变量</span></div><div class="line">PS C:\personal\idea\cloud-cook&gt; ls env:DOCKER_HOST</div><div class="line"></div><div class="line">Name                           Value</div><div class="line">----                           -----</div><div class="line">DOCKER_HOST                    tcp://192.168.21.129:2375</div></pre></td></tr></table></figure><p>More info: <a href="https://www.pstips.net/powershell-environment-variables.html" target="_blank" rel="external">Powershell环境变量</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Powershell会话中设置环境变量&quot;&gt;&lt;a href=&quot;#Powershell会话中设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;Powershell会话中设置环境变量&quot;&gt;&lt;/a&gt;Powershell会话中设置环境变量&lt;/h3&gt;&lt;figu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker Swarm 一、 概述</title>
    <link href="http://yoursite.com/2018/10/26/Docker%20Swarm%20%E4%B8%80%E3%80%81%20%E6%A6%82%E8%BF%B0/"/>
    <id>http://yoursite.com/2018/10/26/Docker Swarm 一、 概述/</id>
    <published>2018-10-26T11:36:00.000Z</published>
    <updated>2018-10-26T11:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>自docker engine 1.12引入swarm模式后，可由一个或多个docker引擎组成一个集群，称之为swarm，一个swarm由一个或多个节点组成。</p><h3 id="关键概念"><a href="#关键概念" class="headerlink" title="关键概念"></a>关键概念</h3><h4 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h4><p>swarm节点分为两种类型：<code>manager</code>和<code>worker</code>，</p><p>Manager节点维护集群状态，调度服务，提供swarm模式下的API服务等，多个Manager节点只有一个leader执行编排任务；</p><p>Worker节点接收并执行从Manager节点分派的任务，默认情况下Manager节点同时也是Worker节点；</p><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>服务是对在管理节点和工作节点执行任务的定义，创建服务时可以指定具体使用的镜像和容器中执行的命令等。</p><p>服务有两种模式:<code>replicated</code> 和 <code>global</code></p><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p><a href="https://docs.docker.com/engine/swarm/" target="_blank" rel="external">Swarm mode overview</a><br><a href="https://docs.docker.com/engine/swarm/key-concepts/" target="_blank" rel="external">Swarm mode key concepts</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自docker engine 1.12引入swarm模式后，可由一个或多个docker引擎组成一个集群，称之为swarm，一个swarm由一个或多个节点组成。&lt;/p&gt;
&lt;h3 id=&quot;关键概念&quot;&gt;&lt;a href=&quot;#关键概念&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Docker install</title>
    <link href="http://yoursite.com/2018/10/25/Docker%20install/"/>
    <id>http://yoursite.com/2018/10/25/Docker install/</id>
    <published>2018-10-25T05:29:00.000Z</published>
    <updated>2018-10-25T05:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Uninstall-old-versions"><a href="#Uninstall-old-versions" class="headerlink" title="Uninstall old versions"></a>Uninstall old versions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum remove docker \</span></div><div class="line">  docker-client \</div><div class="line">  docker-client-latest \</div><div class="line">  docker-common \</div><div class="line">  docker-latest \</div><div class="line">  docker-latest-logrotate \</div><div class="line">  docker-logrotate \</div><div class="line">  docker-selinux \</div><div class="line">  docker-engine-selinux \</div><div class="line">  docker-engine</div></pre></td></tr></table></figure><a id="more"></a><h3 id="Install-Docker-CE"><a href="#Install-Docker-CE" class="headerlink" title="Install Docker CE"></a>Install Docker CE</h3><h4 id="Install-required-packages"><a href="#Install-required-packages" class="headerlink" title="Install required packages"></a>Install required packages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum install -y yum-utils \</span></div><div class="line">  device-mapper-persistent-data \</div><div class="line">  lvm2</div></pre></td></tr></table></figure><h4 id="Use-the-following-command-to-set-up-the-stable-repository"><a href="#Use-the-following-command-to-set-up-the-stable-repository" class="headerlink" title="Use the following command to set up the stable repository"></a>Use the following command to set up the stable repository</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 注意设置阿里云repo</span></div><div class="line">[root@docker_007 ~]<span class="comment"># yum-config-manager \</span></div><div class="line">    --add-repo \</div><div class="line">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</div><div class="line">[root@docker_007 ~]<span class="comment"># yum makecache fast</span></div></pre></td></tr></table></figure><h4 id="Install-Docker-CE-1"><a href="#Install-Docker-CE-1" class="headerlink" title="Install Docker CE"></a>Install Docker CE</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum install docker-ce</span></div><div class="line">[root@docker_007 ~]<span class="comment"># docker -v</span></div><div class="line">Docker version 18.06.1-ce, build e68fc7a</div></pre></td></tr></table></figure><h5 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@dlink-72 docker]<span class="comment"># yum list docker-ce --showduplicates | sort -r</span></div><div class="line">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</div><div class="line"> * updates: mirrors.huaweicloud.com</div><div class="line">Loading mirror speeds from cached hostfile</div><div class="line">Loaded plugins: fastestmirror</div><div class="line">Installed Packages</div><div class="line"> * extras: mirror.jdcloud.com</div><div class="line">docker-ce.x86_64            3:18.09.0-3.el7                    docker-ce-stable </div><div class="line">docker-ce.x86_64            18.06.1.ce-3.el7                   docker-ce-stable </div><div class="line">docker-ce.x86_64            18.06.1.ce-3.el7                   @docker-ce-stable</div><div class="line">docker-ce.x86_64            18.06.0.ce-3.el7                   docker-ce-stable </div><div class="line">docker-ce.x86_64            18.03.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            18.03.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.12.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.12.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.09.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.09.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.06.2.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.06.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.06.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.3.ce-1.el7                   docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.2.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable </div><div class="line"> * base: mirrors.tuna.tsinghua.edu.cn</div><div class="line">Available Packages</div><div class="line">[root@dlink-72 docker]<span class="comment"># yum install docker-ce-18.06.1.ce-3.el7</span></div></pre></td></tr></table></figure><h4 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h4><p>使用阿里云Docker镜像加速器，进入阿里云控制台查看配置。<a href="https://cr.console.aliyun.com/cn-hangzhou/mirrors" target="_blank" rel="external">https://cr.console.aliyun.com/cn-hangzhou/mirrors</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mkdir -p /etc/docker</div><div class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://xxxxx.mirror.aliyuncs.com"</span>]</div><div class="line">&#125;</div><div class="line">EOF</div><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div></pre></td></tr></table></figure><h4 id="Start-docker"><a href="#Start-docker" class="headerlink" title="Start docker"></a>Start docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 启动docker服务，并保持开机自启动</span></div><div class="line">[root@docker_007 ~]<span class="comment"># systemctl start docker</span></div><div class="line">[root@docker_007 ~]<span class="comment"># systemctl enable docker</span></div></pre></td></tr></table></figure><h4 id="其他组件"><a href="#其他组件" class="headerlink" title="其他组件"></a>其他组件</h4><p>docker compose<br><a href="https://docs.docker.com/compose/install/" target="_blank" rel="external">https://docs.docker.com/compose/install/</a></p><p>docker machine<br><a href="https://docs.docker.com/machine/install-machine/" target="_blank" rel="external">https://docs.docker.com/machine/install-machine/</a></p><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="external">Get Docker CE for CentOS</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Uninstall-old-versions&quot;&gt;&lt;a href=&quot;#Uninstall-old-versions&quot; class=&quot;headerlink&quot; title=&quot;Uninstall old versions&quot;&gt;&lt;/a&gt;Uninstall old versions&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@docker_007 ~]&lt;span class=&quot;comment&quot;&gt;# yum remove docker \&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-client \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-client-latest \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-common \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-latest \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-latest-logrotate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-logrotate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-selinux \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-engine-selinux \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-engine&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Gitflow工作流[转载]</title>
    <link href="http://yoursite.com/2018/10/08/Gitflow%E5%B7%A5%E4%BD%9C%E6%B5%81%5B%E8%BD%AC%E8%BD%BD%5D/"/>
    <id>http://yoursite.com/2018/10/08/Gitflow工作流[转载]/</id>
    <published>2018-10-08T10:04:00.000Z</published>
    <updated>2018-10-08T10:04:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载：<a href="https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-gitflow.md" target="_blank" rel="external">Gitflow工作流</a>，李鼎</p><a id="more"></a><ul><li><a href="#工作方式">工作方式</a><ul><li><a href="#历史分支">历史分支</a></li><li><a href="#功能分支">功能分支</a></li><li><a href="#发布分支">发布分支</a></li><li><a href="#维护分支">维护分支</a></li></ul></li><li><a href="#示例">示例</a><ul><li><a href="#创建开发分支">创建开发分支</a></li><li><a href="#小红和小明开始开发新功能">小红和小明开始开发新功能</a></li><li><a href="#小红完成功能开发">小红完成功能开发</a></li><li><a href="#小红开始准备发布">小红开始准备发布</a></li><li><a href="#小红完成发布">小红完成发布</a></li><li><a href="#最终用户发现`Bug`">最终用户发现<code>Bug</code></a></li></ul></li><li><a href="#下一站">下一站</a></li></ul><p>这节介绍的<a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external"><code>Gitflow</code>工作流</a>借鉴自在<a href="http://nvie.com/" target="_blank" rel="external">nvie</a>的<em>Vincent Driessen</em>。</p><p><code>Gitflow</code>工作流定义了一个围绕项目发布的严格分支模型。虽然比<a href="workflow-feature-branch.md">功能分支工作流</a>复杂几分，但提供了用于一个健壮的用于管理大型项目的框架。</p><p><code>Gitflow</code>工作流没有用超出功能分支工作流的概念和命令，而是为不同的分支分配一个很明确的角色，并定义分支之间如何和什么时候进行交互。<br>除了使用功能分支，在做准备、维护和记录发布也使用各自的分支。<br>当然你可以用上功能分支工作流所有的好处：<code>Pull Requests</code>、隔离实验性开发和更高效的协作。</p><h2 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式 "></a>工作方式 </h2><p><code>Gitflow</code>工作流仍然用中央仓库作为所有开发者的交互中心。和其它的工作流一样，开发者在本地工作并<code>push</code>分支到要中央仓库中。</p><h3 id="历史分支"><a href="#历史分支" class="headerlink" title="历史分支"></a>历史分支</h3><p>相对使用仅有的一个<code>master</code>分支，<code>Gitflow</code>工作流使用2个分支来记录项目的历史。<code>master</code>分支存储了正式发布的历史，而<code>develop</code>分支作为功能的集成分支。<br>这样也方便<code>master</code>分支上的所有提交分配一个版本号。</p><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-1historical.png" alt=""></p><p>剩下要说明的问题围绕着这2个分支的区别展开。</p><h3 id="功能分支"><a href="#功能分支" class="headerlink" title="功能分支"></a>功能分支</h3><p>每个新功能位于一个自己的分支，这样可以<a href="https://www.atlassian.com/git/tutorials/syncing#git-push" target="_blank" rel="external"><code>push</code>到中央仓库以备份和协作</a>。<br>但功能分支不是从<code>master</code>分支上拉出新分支，而是使用<code>develop</code>分支作为父分支。当新功能完成时，<a href="https://www.atlassian.com/git/tutorials/git-merge" target="_blank" rel="external">合并回<code>develop</code>分支</a>。<br>新功能提交应该从不直接与<code>master</code>分支交互。</p><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-2feature.png" alt=""></p><p>注意，从各种含义和目的上来看，功能分支加上<code>develop</code>分支就是功能分支工作流的用法。但<code>Gitflow</code>工作流没有止步于此。</p><h3 id="发布分支"><a href="#发布分支" class="headerlink" title="发布分支"></a>发布分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-3release.png" alt=""></p><p>一旦<code>develop</code>分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从<code>develop</code>分支上<code>fork</code>一个发布分支。<br>新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上——<br>这个分支只应该做<code>Bug</code>修复、文档生成和其它面向发布任务。<br>一旦对外发布的工作都完成了，发布分支合并到<code>master</code>分支并分配一个版本号打好<code>Tag</code>。<br>另外，这些从新建发布分支以来的做的修改要合并回<code>develop</code>分支。</p><p>使用一个用于发布准备的专门分支，使得一个团队可以在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。<br>这也打造定义良好的开发阶段（比如，可以很轻松地说，『这周我们要做准备发布版本4.0』，并且在仓库的目录结构中可以实际看到）。</p><p>常用的分支约定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">用于新建发布分支的分支: develop</div><div class="line">用于合并的分支: master</div><div class="line">分支命名: release-* 或 release/*</div></pre></td></tr></table></figure><h3 id="维护分支"><a href="#维护分支" class="headerlink" title="维护分支"></a>维护分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-4maintenance.png" alt=""></p><p>维护分支或说是热修复（<code>hotfix</code>）分支用于生成快速给产品发布版本（<code>production releases</code>）打补丁，这是唯一可以直接从<code>master</code>分支<code>fork</code>出来的分支。<br>修复完成，修改应该马上合并回<code>master</code>分支和<code>develop</code>分支（当前的发布分支），<code>master</code>分支应该用新的版本号打好<code>Tag</code>。</p><p>为<code>Bug</code>修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。<br>你可以把维护分支想成是一个直接在<code>master</code>分支上处理的临时发布。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例 "></a>示例 </h2><p>下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。</p><h3 id="创建开发分支"><a href="#创建开发分支" class="headerlink" title="创建开发分支"></a>创建开发分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-5createdev.png" alt=""></p><p>第一步为<code>master</code>分支配套一个<code>develop</code>分支。简单来做可以<a href="https://www.atlassian.com/git/tutorials/using-branches#git-branch" target="_blank" rel="external">本地创建一个空的<code>develop</code>分支</a>，<code>push</code>到服务器上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch develop</div><div class="line">git push -u origin develop</div></pre></td></tr></table></figure><p>以后这个分支将会包含了项目的全部历史，而<code>master</code>分支将只包含了部分历史。其它开发者这时应该<a href="https://www.atlassian.com/git/tutorials/setting-up-a-repository#git-clone" target="_blank" rel="external">克隆中央仓库</a>，建好<code>develop</code>分支的跟踪分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> ssh://user@host/path/to/repo.git</div><div class="line">git checkout -b develop origin/develop</div><div class="line"></div><div class="line"><span class="comment">#【译注】当没有本地分支 develop 时，</span></div><div class="line"><span class="comment"># 最后一条命令，我使用更简单的 git checkout develop</span></div><div class="line"><span class="comment"># 会自动 把 远程分支origin/develop 检出成 本地分支 develop</span></div></pre></td></tr></table></figure><p>现在每个开发都有了这些历史分支的本地拷贝。</p><h3 id="小红和小明开始开发新功能"><a href="#小红和小明开始开发新功能" class="headerlink" title="小红和小明开始开发新功能"></a>小红和小明开始开发新功能</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-6maryjohnbeginnew.png" alt=""></p><p>这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于<code>master</code>分支，而是应该<a href="https://www.atlassian.com/git/tutorials/using-branches#git-checkout" target="_blank" rel="external">基于<code>develop</code>分支</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b some-feature develop</div></pre></td></tr></table></figure><p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git status</div><div class="line">git add &lt;some-file&gt;</div><div class="line">git commit</div></pre></td></tr></table></figure></p><h3 id="小红完成功能开发"><a href="#小红完成功能开发" class="headerlink" title="小红完成功能开发"></a>小红完成功能开发</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-7maryfinishes.png" alt=""></p><p>添加了提交后，小红觉得她的功能OK了。如果团队使用<code>Pull Requests</code>，这时候可以发起一个用于合并到<code>develop</code>分支。<br>否则她可以直接合并到她本地的<code>develop</code>分支后<code>push</code>到中央仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 拉取远程的develop分支，并且当前分支（本地分支some-feature）合并上远程分支develop</span></div><div class="line">git pull origin develop</div><div class="line">git checkout develop</div><div class="line"><span class="comment"># 本地分支some-feature合并上develop</span></div><div class="line"><span class="comment">#【注意】这个分支已经有远程的develop修改了，所以本地develop无需再做远程拉取的操作</span></div><div class="line">git merge some-feature</div><div class="line">git push</div><div class="line"><span class="comment"># 删除本地分支</span></div><div class="line">git branch -d some-feature</div><div class="line"></div><div class="line"><span class="comment">#【译注】上面的命令注释为译者添加，以方便理解</span></div><div class="line"><span class="comment"># 更多说明参见 Issue #18</span></div></pre></td></tr></table></figure><p>第一条命令在合并功能前确保<code>develop</code>分支是最新的。注意，功能决不应该直接合并到<code>master</code>分支。<br>冲突解决方法和<a href="workflow-centralized.md">集中式工作流</a>一样。</p><h3 id="小红开始准备发布"><a href="#小红开始准备发布" class="headerlink" title="小红开始准备发布"></a>小红开始准备发布</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-8maryprepsrelease.png" alt=""></p><p>这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。<br>像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b release-0.1 develop</div></pre></td></tr></table></figure><p>这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。</p><p>只要小红创建这个分支并<code>push</code>到中央仓库，这个发布就是功能冻结的。任何不在<code>develop</code>分支中的新功能都推到下个发布循环中。</p><h3 id="小红完成发布"><a href="#小红完成发布" class="headerlink" title="小红完成发布"></a>小红完成发布</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-9maryfinishes.png" alt=""></p><p>一旦准备好了对外发布，小红合并修改到<code>master</code>分支和<code>develop</code>分支上，删除发布分支。合并回<code>develop</code>分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。<br>另外，如果小红的团队要求<code>Code Review</code>，这是一个发起<code>Pull Request</code>的理想时机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git checkout master</div><div class="line">git merge release-0.1</div><div class="line">git push</div><div class="line">git checkout develop</div><div class="line">git merge release-0.1</div><div class="line">git push</div><div class="line">git branch -d release-0.1</div></pre></td></tr></table></figure><p>发布分支是作为功能开发（<code>develop</code>分支）和对外发布（<code>master</code>分支）间的缓冲。只要有合并到<code>master</code>分支，就应该打好<code>Tag</code>以方便跟踪。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git tag -a 0.1 -m <span class="string">"Initial public release"</span> master</div><div class="line">git push --tags</div></pre></td></tr></table></figure><p><code>Git</code>有提供各种勾子（<code>hook</code>），即仓库有事件发生时触发执行的脚本。<br>可以配置一个勾子，在你<code>push</code>中央仓库的<code>master</code>分支时，自动构建好对外发布。</p><h3 id="最终用户发现Bug"><a href="#最终用户发现Bug" class="headerlink" title="最终用户发现Bug"></a>最终用户发现<code>Bug</code></h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-gitflow-enduserbug.png" alt=""></p><p>对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个<code>Ticket</code>抱怨当前版本的一个<code>Bug</code>。<br>为了处理<code>Bug</code>，小红（或小明）从<code>master</code>分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回<code>master</code>分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git checkout -b issue-<span class="comment">#001 master</span></div><div class="line"><span class="comment"># Fix the bug</span></div><div class="line">git checkout master</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div></pre></td></tr></table></figure><p>就像发布分支，维护分支中新加这些重要修改需要包含到<code>develop</code>分支中，所以小红要执行一个合并操作。然后就可以安全地<a href="https://www.atlassian.com/git/tutorials/using-branches#git-branch" target="_blank" rel="external">删除这个分支</a>了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout develop</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div><div class="line">git branch -d issue-<span class="comment">#001</span></div></pre></td></tr></table></figure><h2 id="下一站"><a href="#下一站" class="headerlink" title="下一站 "></a>下一站 </h2><p>到了这里，但愿你对集中式工作流、功能分支工作流和<code>Gitflow</code>工作流已经感觉很舒适了。<br>你应该也牢固的掌握了本地仓库的潜能，<code>push</code>/<code>pull</code>模式和<code>Git</code>健壮的分支和合并模型。</p><p>记住，这里演示的工作流只是可能用法的例子，而不是在实际工作中使用<code>Git</code>不可违逆的条例。<br>所以不要畏惧按自己需要对工作流的用法做取舍。不变的目标就是让<code>Git</code>为你所用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载：&lt;a href=&quot;https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-gitflow.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitflow工作流&lt;/a&gt;，李鼎&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins杂记</title>
    <link href="http://yoursite.com/2018/10/08/Jenkins%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/10/08/Jenkins杂记/</id>
    <published>2018-10-08T08:29:00.000Z</published>
    <updated>2018-10-08T08:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="admin初始密码"><a href="#admin初始密码" class="headerlink" title="admin初始密码"></a>admin初始密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 .jenkins]<span class="comment"># cat /root/.jenkins/secrets/initialAdminPassword </span></div><div class="line">1342c187dcfcdbf8a1c38dd21b773d95</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Jenkins&quot;&gt;&lt;a href=&quot;#Jenkins&quot; class=&quot;headerlink&quot; title=&quot;Jenkins&quot;&gt;&lt;/a&gt;Jenkins&lt;/h2&gt;&lt;h3 id=&quot;admin初始密码&quot;&gt;&lt;a href=&quot;#admin初始密码&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Item1,考虑使用静态工厂方法替代构造器</title>
    <link href="http://yoursite.com/2018/10/07/Item1,%E8%80%83%E8%99%91%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%9B%BF%E4%BB%A3%E6%9E%84%E9%80%A0%E5%99%A8/"/>
    <id>http://yoursite.com/2018/10/07/Item1,考虑使用静态工厂方法替代构造器/</id>
    <published>2018-10-07T07:50:00.000Z</published>
    <updated>2018-10-07T07:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>客户端可以通过类提供的公共构造方法获取类实例，除此之外，还可以使用静态工厂方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title">valueOf</span><span class="params">(<span class="keyword">boolean</span> b)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> b ? Boolean.TRUE : Boolean.FALSE;</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><h4 id="拥有名称"><a href="#拥有名称" class="headerlink" title="拥有名称"></a>拥有名称</h4><p>使用静态工厂方法替代构造器，不同于构造方法名称固定，可自定义见名知义的方法名，相对于不同参数签名的多个构造方法设计，更加优雅。</p><h4 id="不创建新对象"><a href="#不创建新对象" class="headerlink" title="不创建新对象"></a>不创建新对象</h4><p>使用静态工厂方法替代构造器，不像构造方法，每次在被调用的时候，都需要new一个实例。</p><h4 id="返回子类型"><a href="#返回子类型" class="headerlink" title="返回子类型"></a>返回子类型</h4><p>使用静态工厂方法替代构造器，不像构造方法，它们可以返回其返回类型的任何子类型的对象。<br>例如，Java Collections Framework 的接口有45个实用程序实现，提供不可修改的集合，同步集合等。<br>几乎所有这些实现都是通过静态工厂方法在一个不可实例化的类<code>java.util.Collections</code>中获取的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">unmodifiableList</span><span class="params">(List&lt;? extends T&gt; list)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> (list <span class="keyword">instanceof</span> RandomAccess ?</div><div class="line"><span class="keyword">new</span> UnmodifiableRandomAccessList&lt;&gt;(list) :</div><div class="line"><span class="keyword">new</span> UnmodifiableList&lt;&gt;(list));</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="返回对象可变化"><a href="#返回对象可变化" class="headerlink" title="返回对象可变化"></a>返回对象可变化</h4><p>A fourth advantage of static factories is that the class of the returned object can vary from call to call as a function of the input parameters.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates an empty enum set with the specified element type.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> &lt;E&gt; The class of the elements in the set</div><div class="line"> * <span class="doctag">@param</span> elementType the class object of the element type for this enum</div><div class="line"> *     set</div><div class="line"> * <span class="doctag">@return</span> An empty enum set of the specified type.</div><div class="line"> * <span class="doctag">@throws</span> NullPointerException if &lt;tt&gt;elementType&lt;/tt&gt; is null</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Enum&lt;E&gt;&gt; <span class="function">EnumSet&lt;E&gt; <span class="title">noneOf</span><span class="params">(Class&lt;E&gt; elementType)</span> </span>&#123;</div><div class="line">Enum&lt;?&gt;[] universe = getUniverse(elementType);</div><div class="line"><span class="keyword">if</span> (universe == <span class="keyword">null</span>)</div><div class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ClassCastException(elementType + <span class="string">" not an enum"</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (universe.length &lt;= <span class="number">64</span>)</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> RegularEnumSet&lt;&gt;(elementType, universe);</div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> JumboEnumSet&lt;&gt;(elementType, universe);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="返回对象不需要存在"><a href="#返回对象不需要存在" class="headerlink" title="返回对象不需要存在"></a>返回对象不需要存在</h4><p>A fifth advantage of static factories is that the class of the returned object need not exist when the class containing the method is written</p><p>服务提供程序框架java.util.ServiceLoader</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="不能subclassed"><a href="#不能subclassed" class="headerlink" title="不能subclassed"></a>不能subclassed</h4><p>仅提供静态工厂方法的主要限制是，由于类没有public或protected的构造方法(一般不提供公开构造方法，不绝对，例如Boolean)，因此不能子类化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">A</span><span class="params">(B b)</span> </span>&#123;</div><div class="line"><span class="comment">//...</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> A <span class="title">of</span><span class="params">(B b)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> A(b);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="不利于查询"><a href="#不利于查询" class="headerlink" title="不利于查询"></a>不利于查询</h4><p>使用静态工厂方法的第二个主要的缺点是，程序员查找起来比较困难。<br>这些方法没有在API文档中突出，因此很难弄清楚如何实例化一个提供静态工厂方法而不是构造函数的类。<br>以下是静态工厂方法的一些常用名称。</p><p>from—A type-conversion method that takes a single parameter and returns a corresponding instance of this type, for example:</p><p>Date d = Date.from(instant);</p><p>of—An aggregation method that takes multiple parameters and returns an in-stance of this type that incorporates them, for example:</p><p>Set<rank> faceCards = EnumSet.of(JACK, QUEEN, KING);</rank></p><p>• valueOf—A more verbose alternative to from and of, for example:</p><p>BigInteger prime = BigInteger.valueOf(Integer.MAX_VALUE);</p><p>instance or getInstance—Returns an instance that is described by its pa-rameters (if any) but cannot be said to have the same value, for example:</p><p>StackWalker luke = StackWalker.getInstance(options);</p><p>create or newInstance—Like instance or getInstance, except that the method guarantees that each call returns a new instance, for example:</p><p>Object newArray = Array.newInstance(classObject, arrayLen);</p><p>getType—Like getInstance, but used if the factory method is in a different class. Type is the type of object returned by the factory method, for example:</p><p>FileStore fs = Files.getFileStore(path);</p><p>newType—Like newInstance, but used if the factory method is in a different class. Type is the type of object returned by the factory method, for example:</p><p>BufferedReader br = Files.newBufferedReader(path);</p><p>• type—A concise alternative to getType and newType, for example:</p><p>List<complaint> litany = Collections.list(legacyLitany);</complaint></p><p>In summary, static factory methods and public constructors both have their uses, and it pays to understand their relative merits. Often static factories are preferable, so avoid the reflex to provide public constructors without first consid-ering static factories.</p><p>参考：<br><a href="https://www.oreilly.com/library/view/effective-java-3rd/9780134686097/" target="_blank" rel="external">Effective Java Third Edition</a>，Joshua bloch</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;客户端可以通过类提供的公共构造方法获取类实例，除此之外，还可以使用静态工厂方法。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Boolean &lt;span class=&quot;title&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; b ? Boolean.TRUE : Boolean.FALSE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Git命令最佳实践</title>
    <link href="http://yoursite.com/2018/10/05/Git%E5%91%BD%E4%BB%A4%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5/"/>
    <id>http://yoursite.com/2018/10/05/Git命令最佳实践/</id>
    <published>2018-10-05T14:43:00.000Z</published>
    <updated>2018-03-05T14:43:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Create-a-repository"><a href="#Create-a-repository" class="headerlink" title="Create a repository"></a>Create a repository</h3><p>From scratch – create a new local repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init [project_name]</div></pre></td></tr></table></figure><a id="more"></a><p>Download form an existing repository</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">clone</span> my_url</div></pre></td></tr></table></figure><h3 id="Observe-your-repository"><a href="#Observe-your-repository" class="headerlink" title="Observe your repository"></a>Observe your repository</h3><p>List new or modified files not yet committed</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git status</div></pre></td></tr></table></figure><p>Show the changes to files  not yet staged</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff</div></pre></td></tr></table></figure><p>Show the changes to staged files</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff --cached</div></pre></td></tr></table></figure><p>Show all staged and unstaged file changes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff HEAD</div></pre></td></tr></table></figure><p>Show the changes between two commit ids</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git diff commit1 commit2</div></pre></td></tr></table></figure><p>List the change dates and authors for a file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git blame [file]</div></pre></td></tr></table></figure><p>Show the file changes for a commit id and/or file</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git show [commit_id]:[file]</div></pre></td></tr></table></figure><p>Show full change history</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">log</span></div></pre></td></tr></table></figure><p>show change history for file/directory including diffs</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">log</span> -p [file/directory]</div></pre></td></tr></table></figure><h3 id="Working-with-branches"><a href="#Working-with-branches" class="headerlink" title="Working with branches"></a>Working with branches</h3><p>List all local branches</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch</div></pre></td></tr></table></figure><p>List all branches, local and remote<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch -av</div></pre></td></tr></table></figure></p><p>Switch to a branch, and update working directory</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git checkout my_branch</div></pre></td></tr></table></figure><p>Create a new branch called new_branch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch new_branch</div></pre></td></tr></table></figure><p>Delete the branch called my_branch</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git branch -d my_branch</div></pre></td></tr></table></figure><p>Merge branch_a into branch_b</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git checkout branch_b</div><div class="line">$ git merge branch_a</div></pre></td></tr></table></figure><p>Tag the current commit<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git tag my_tag</div></pre></td></tr></table></figure></p><h3 id="Make-a-change"><a href="#Make-a-change" class="headerlink" title="Make a change"></a>Make a change</h3><p>Stage the file, ready for commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add [file]</div></pre></td></tr></table></figure><p>Stage all changed files, ready for commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git add .</div></pre></td></tr></table></figure><p>Commit all staged files to versioned history</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"commit message"</span></div></pre></td></tr></table></figure><p>Commit all your tracked files to versioned history</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -am <span class="string">"commit message"</span></div></pre></td></tr></table></figure><p>Unstages file, keeping the file changes</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset [file]</div></pre></td></tr></table></figure><p>Revert everything to the last commit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git reset --hard</div></pre></td></tr></table></figure><h3 id="Synchronize"><a href="#Synchronize" class="headerlink" title="Synchronize"></a>Synchronize</h3><p>Get the latest changes from origin (no merge)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git fetch</div></pre></td></tr></table></figure><p>Fetch the latest changes from origin and merge</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull</div></pre></td></tr></table></figure><p>Fetch the latest changes from origin and rebase</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git pull --rebase</div></pre></td></tr></table></figure><p>Push local chages to the origin</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git push</div></pre></td></tr></table></figure><h3 id="Finally"><a href="#Finally" class="headerlink" title="Finally"></a>Finally</h3><p>When in doubt, use git help</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git <span class="built_in">command</span> --<span class="built_in">help</span></div></pre></td></tr></table></figure><p>Or visit <a href="https://training.github.com/" target="_blank" rel="external">https://training.github.com/</a> for official GitHub training.</p><p>参考：<br><a href="https://zeroturnaround.com/rebellabs/git-commands-and-best-practices-cheat-sheet/" target="_blank" rel="external">Git Commands and Best Practices Cheat Sheet</a>，Simon Maple</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Create-a-repository&quot;&gt;&lt;a href=&quot;#Create-a-repository&quot; class=&quot;headerlink&quot; title=&quot;Create a repository&quot;&gt;&lt;/a&gt;Create a repository&lt;/h3&gt;&lt;p&gt;From scratch – create a new local repository&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git init [project_name]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>SQL备忘录</title>
    <link href="http://yoursite.com/2018/10/05/SQL%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://yoursite.com/2018/10/05/SQL备忘录/</id>
    <published>2018-10-05T14:00:00.000Z</published>
    <updated>2018-03-05T14:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://objects.yongtao.wang/images/20181005/sql-cheat-sheet.jpg" alt="SQL cheat sheet"></p><p>参考：<br><a href="https://zeroturnaround.com/rebellabs/sql-cheat-sheet/" target="_blank" rel="external">SQL cheat sheet</a>，Oleg Shelajev</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://objects.yongtao.wang/images/20181005/sql-cheat-sheet.jpg&quot; alt=&quot;SQL cheat sheet&quot;&gt;&lt;/p&gt;
&lt;p&gt;参考：&lt;br&gt;&lt;a href=&quot;https://zerotur
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>java内置性能监控命令</title>
    <link href="http://yoursite.com/2018/10/05/java%E5%86%85%E7%BD%AE%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%E5%91%BD%E4%BB%A4/"/>
    <id>http://yoursite.com/2018/10/05/java内置性能监控命令/</id>
    <published>2018-10-05T07:39:00.000Z</published>
    <updated>2018-10-05T07:39:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="jps-JVM-Process-Status-Tool"><a href="#jps-JVM-Process-Status-Tool" class="headerlink" title="jps, JVM Process Status Tool"></a>jps, JVM Process Status Tool</h3><p>jps, JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># java -version</span></div><div class="line">java version <span class="string">"1.8.0_181"</span></div><div class="line">Java(TM) SE Runtime Environment (build 1.8.0_181-b13)</div><div class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)</div></pre></td></tr></table></figure><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jps -l</span></div><div class="line">2368 org.logstash.Logstash</div><div class="line">19013 jenkins.war</div><div class="line">9210 sun.tools.jps.Jps</div><div class="line">2124 org.elasticsearch.bootstrap.Elasticsearch</div></pre></td></tr></table></figure><h3 id="jstat-JVM-Statistics-Monitoring-Tool"><a href="#jstat-JVM-Statistics-Monitoring-Tool" class="headerlink" title="jstat, JVM Statistics Monitoring Tool"></a>jstat, JVM Statistics Monitoring Tool</h3><p>jstat, JVM Statistics Monitoring Tool, 用于收集HotSpot虚拟机各方面的运行数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jstat -gcutil 2124</span></div><div class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT   </div><div class="line">  0.00  26.74  68.99  67.13  92.88  84.44   3661   22.944    14    0.200   23.143</div></pre></td></tr></table></figure><p>E、O、M分别是新生代,老年代,元数据区已用占总大小的百分比<br>S0、S1表示两个幸存者区<br>YGC = Young GC, YGCT = Young GC Time 妙计<br>FGC = Full GC, FGCT = Full GC Time 妙计<br>GCT, 总的GC 时间.</p><h3 id="jinfo"><a href="#jinfo" class="headerlink" title="jinfo"></a>jinfo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jinfo 2124</span></div><div class="line">Attaching to process ID 2124, please <span class="built_in">wait</span>...</div><div class="line">Debugger attached successfully.</div><div class="line">Server compiler detected.</div><div class="line">JVM version is 25.181-b13</div><div class="line">Java System Properties:</div><div class="line"></div><div class="line">jna.platform.library.path = /usr/lib64:/lib64:/usr/lib:/lib:/usr/lib64/mysql</div><div class="line">java.runtime.name = Java(TM) SE Runtime Environment</div><div class="line">sun.boot.library.path = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/amd64</div><div class="line">java.vm.version = 25.181-b13</div><div class="line">es.path.home = /opt/elk/elasticsearch-6.2.3</div><div class="line">log4j.shutdownHookEnabled = <span class="literal">false</span></div><div class="line">java.vm.vendor = Oracle Corporation</div><div class="line">java.vendor.url = http://java.oracle.com/</div><div class="line">path.separator = :</div><div class="line">jna.loaded = <span class="literal">true</span></div><div class="line">file.encoding.pkg = sun.io</div><div class="line">java.vm.name = Java HotSpot(TM) 64-Bit Server VM</div><div class="line">sun.java.launcher = SUN_STANDARD</div><div class="line">user.country = US</div><div class="line">sun.os.patch.level = unknown</div><div class="line">jna.nosys = <span class="literal">true</span></div><div class="line">java.vm.specification.name = Java Virtual Machine Specification</div><div class="line">user.dir = /opt/elk/elasticsearch-6.2.3</div><div class="line">java.runtime.version = 1.8.0_181-b13</div><div class="line">java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment</div><div class="line">java.endorsed.dirs = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/endorsed</div><div class="line">os.arch = amd64</div><div class="line">java.io.tmpdir = /tmp/elasticsearch.WqG997rL</div><div class="line">line.separator = </div><div class="line"></div><div class="line">java.vm.specification.vendor = Oracle Corporation</div><div class="line">os.name = Linux</div><div class="line">io.netty.noKeySetOptimization = <span class="literal">true</span></div><div class="line">sun.jnu.encoding = UTF-8</div><div class="line">jnidispatch.path = /tmp/elasticsearch.WqG997rL/jna--1985354563/jna2966756306267189304.tmp</div><div class="line">java.library.path = /usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib</div><div class="line">sun.nio.ch.bugLevel = </div><div class="line">es.logs.cluster_name = elasticsearch</div><div class="line">java.specification.name = Java Platform API Specification</div><div class="line">java.class.version = 52.0</div><div class="line">sun.management.compiler = HotSpot 64-Bit Tiered Compilers</div><div class="line">os.version = 3.10.0-862.el7.x86_64</div><div class="line">user.home = /home/elasticsearch</div><div class="line">user.timezone = Asia/Shanghai</div><div class="line">java.awt.printerjob = sun.print.PSPrinterJob</div><div class="line">file.encoding = UTF-8</div><div class="line">java.specification.version = 1.8</div><div class="line">io.netty.recycler.maxCapacityPerThread = 0</div><div class="line">user.name = elasticsearch</div><div class="line">es.logs.base_path = /opt/elk/elasticsearch-6.2.3/logs</div><div class="line">java.class.path = /opt/elk/elasticsearch-6.2.3/lib/elasticsearch-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/elasticsearch-core-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-core-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-analyzers-common-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-backward-codecs-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-grouping-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-highlighter-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-join-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-memory-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-misc-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-queries-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-queryparser-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-sandbox-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-spatial-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-spatial-extras-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-spatial3d-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/lucene-suggest-7.2.1.jar:/opt/elk/elasticsearch-6.2.3/lib/securesm-1.2.jar:/opt/elk/elasticsearch-6.2.3/lib/hppc-0.7.1.jar:/opt/elk/elasticsearch-6.2.3/lib/joda-time-2.9.9.jar:/opt/elk/elasticsearch-6.2.3/lib/snakeyaml-1.17.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-core-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-dataformat-smile-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-dataformat-yaml-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/jackson-dataformat-cbor-2.8.10.jar:/opt/elk/elasticsearch-6.2.3/lib/t-digest-3.0.jar:/opt/elk/elasticsearch-6.2.3/lib/HdrHistogram-2.1.9.jar:/opt/elk/elasticsearch-6.2.3/lib/spatial4j-0.6.jar:/opt/elk/elasticsearch-6.2.3/lib/jts-1.13.jar:/opt/elk/elasticsearch-6.2.3/lib/log4j-api-2.9.1.jar:/opt/elk/elasticsearch-6.2.3/lib/log4j-core-2.9.1.jar:/opt/elk/elasticsearch-6.2.3/lib/log4j-1.2-api-2.9.1.jar:/opt/elk/elasticsearch-6.2.3/lib/jna-4.5.1.jar:/opt/elk/elasticsearch-6.2.3/lib/elasticsearch-cli-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/jopt-simple-5.0.2.jar:/opt/elk/elasticsearch-6.2.3/lib/plugin-classloader-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/elasticsearch-launchers-6.2.3.jar:/opt/elk/elasticsearch-6.2.3/lib/plugin-cli-6.2.3.jar</div><div class="line">es.path.conf = /opt/elk/elasticsearch-6.2.3/config</div><div class="line">java.vm.specification.version = 1.8</div><div class="line">sun.arch.data.model = 64</div><div class="line">java.home = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre</div><div class="line">sun.java.command = org.elasticsearch.bootstrap.Elasticsearch -d</div><div class="line">user.language = en</div><div class="line">java.specification.vendor = Oracle Corporation</div><div class="line">io.netty.noUnsafe = <span class="literal">true</span></div><div class="line">awt.toolkit = sun.awt.X11.XToolkit</div><div class="line">java.vm.info = mixed mode</div><div class="line">java.version = 1.8.0_181</div><div class="line">java.ext.dirs = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/ext:/usr/java/packages/lib/ext</div><div class="line">sun.boot.class.path = /usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/resources.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/rt.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/sunrsasign.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/jsse.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/jce.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/charsets.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/lib/jfr.jar:/usr/<span class="built_in">local</span>/jdk1.8.0_181/jre/classes</div><div class="line">java.vendor = Oracle Corporation</div><div class="line">java.awt.headless = <span class="literal">true</span></div><div class="line">file.separator = /</div><div class="line">java.vendor.url.bug = http://bugreport.sun.com/bugreport/</div><div class="line">sun.io.unicode.encoding = UnicodeLittle</div><div class="line">sun.cpu.endian = little</div><div class="line">log4j2.disable.jmx = <span class="literal">true</span></div><div class="line">sun.cpu.isalist = </div><div class="line"></div><div class="line">VM Flags:</div><div class="line">Non-default VM flags: -XX:+AlwaysPreTouch -XX:CICompilerCount=3 -XX:CMSInitiatingOccupancyFraction=75 -XX:GCLogFileSize=67108864 -XX:+HeapDumpOnOutOfMemoryError -XX:InitialHeapSize=1073741824 -XX:MaxHeapSize=1073741824 -XX:MaxNewSize=348913664 -XX:MaxTenuringThreshold=6 -XX:MinHeapDeltaBytes=196608 -XX:NewSize=348913664 -XX:NumberOfGCLogFiles=32 -XX:OldPLABSize=16 -XX:OldSize=724828160 -XX:-OmitStackTraceInFastThrow -XX:+PrintGC -XX:+PrintGCApplicationStoppedTime -XX:+PrintGCDateStamps -XX:+PrintGCDetails -XX:+PrintGCTimeStamps -XX:+PrintTenuringDistribution -XX:ThreadStackSize=1024 -XX:+UseCMSInitiatingOccupancyOnly -XX:+UseCompressedClassPointers -XX:+UseCompressedOops -XX:+UseConcMarkSweepGC -XX:+UseFastUnorderedTimeStamps -XX:+UseGCLogFileRotation -XX:+UseParNewGC </div><div class="line">Command line:  -Xms1g -Xmx1g -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -Djna.nosys=<span class="literal">true</span> -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=<span class="literal">true</span> -Dio.netty.noKeySetOptimization=<span class="literal">true</span> -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=<span class="literal">false</span> -Dlog4j2.disable.jmx=<span class="literal">true</span> -Djava.io.tmpdir=/tmp/elasticsearch.WqG997rL -XX:+HeapDumpOnOutOfMemoryError -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/opt/elk/elasticsearch-6.2.3 -Des.path.conf=/opt/elk/elasticsearch-6.2.3/config</div></pre></td></tr></table></figure><h3 id="jstat-JVM-Statistics-Monitoring-Tool-1"><a href="#jstat-JVM-Statistics-Monitoring-Tool-1" class="headerlink" title="jstat, JVM Statistics Monitoring Tool"></a>jstat, JVM Statistics Monitoring Tool</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 bin]<span class="comment"># jstat -gcutil 2124</span></div><div class="line">  S0     S1     E      O      M     CCS    YGC     YGCT    FGC    FGCT     GCT   </div><div class="line">  0.00  26.74  68.99  67.13  92.88  84.44   3661   22.944    14    0.200   23.143</div><div class="line">  </div><div class="line">  </div><div class="line"><span class="comment">### jmap</span></div><div class="line"></div><div class="line">[root@kvm000 bin]<span class="comment"># jmap -heap 2124</span></div><div class="line">Attaching to process ID 2124, please <span class="built_in">wait</span>...</div><div class="line">Debugger attached successfully.</div><div class="line">Server compiler detected.</div><div class="line">JVM version is 25.181-b13</div><div class="line"></div><div class="line">using parallel threads <span class="keyword">in</span> the new generation. <span class="comment">#新生代采用的是并行线程处理方式</span></div><div class="line">using thread-local object allocation.</div><div class="line">Concurrent Mark-Sweep GC <span class="comment">#同步并行垃圾回收</span></div><div class="line"></div><div class="line">Heap Configuration:</div><div class="line">   MinHeapFreeRatio         = 40 <span class="comment">#最小堆使用比例</span></div><div class="line">   MaxHeapFreeRatio         = 70 <span class="comment">#最大堆可用比例</span></div><div class="line">   MaxHeapSize              = 1073741824 (1024.0MB) <span class="comment">#最大堆空间大小</span></div><div class="line">   NewSize                  = 348913664 (332.75MB) <span class="comment">#新生代分配大小</span></div><div class="line">   MaxNewSize               = 348913664 (332.75MB) <span class="comment">#最大可新生代分配大小</span></div><div class="line">   OldSize                  = 724828160 (691.25MB) <span class="comment">#老生代大小</span></div><div class="line">   NewRatio                 = 2 <span class="comment">#新生代比例</span></div><div class="line">   SurvivorRatio            = 8 <span class="comment">#新生代与suvivor的比例</span></div><div class="line">   MetaspaceSize            = 21807104 (20.796875MB) <span class="comment">#元数据区大小</span></div><div class="line">   CompressedClassSpaceSize = 1073741824 (1024.0MB)</div><div class="line">   MaxMetaspaceSize         = 17592186044415 MB</div><div class="line">   G1HeapRegionSize         = 0 (0.0MB)</div><div class="line"></div><div class="line">Heap Usage:</div><div class="line">New Generation (Eden + 1 Survivor Space):</div><div class="line">   capacity = 314048512 (299.5MB)</div><div class="line">   used     = 207005464 (197.4157943725586MB)</div><div class="line">   free     = 107043048 (102.0842056274414MB)</div><div class="line">   65.91512332973576% used</div><div class="line">Eden Space:</div><div class="line">   capacity = 279183360 (266.25MB)</div><div class="line">   used     = 197681056 (188.52334594726562MB)</div><div class="line">   free     = 81502304 (77.72665405273438MB)</div><div class="line">   70.80689049662558% used</div><div class="line">From Space:</div><div class="line">   capacity = 34865152 (33.25MB)</div><div class="line">   used     = 9324408 (8.892448425292969MB)</div><div class="line">   free     = 25540744 (24.35755157470703MB)</div><div class="line">   26.744205790354794% used</div><div class="line">To Space:</div><div class="line">   capacity = 34865152 (33.25MB)</div><div class="line">   used     = 0 (0.0MB)</div><div class="line">   free     = 34865152 (33.25MB)</div><div class="line">   0.0% used</div><div class="line">concurrent mark-sweep generation:</div><div class="line">   capacity = 724828160 (691.25MB)</div><div class="line">   used     = 486547784 (464.0081253051758MB)</div><div class="line">   free     = 238280376 (227.24187469482422MB)</div><div class="line">   67.125949411237% used</div><div class="line"></div><div class="line">19955 interned Strings occupying 2899368 bytes.</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># dump jvm</span></div><div class="line">jmap -dump:format=b,file=181005.bin &lt;pid&gt;</div></pre></td></tr></table></figure><h3 id="jhat-JVM-Heap-Dump-Browser"><a href="#jhat-JVM-Heap-Dump-Browser" class="headerlink" title="jhat, JVM Heap Dump Browser"></a>jhat, JVM Heap Dump Browser</h3><p>用于分析heapdump 文件，它会建立一个HTTP/HTML服务器，让用户在浏览器上查看分析结果</p><h3 id="jstack-Stack-Trace-for-Java-显示虚拟机的线程快找"><a href="#jstack-Stack-Trace-for-Java-显示虚拟机的线程快找" class="headerlink" title="jstack, Stack Trace for Java, 显示虚拟机的线程快找."></a>jstack, Stack Trace for Java, 显示虚拟机的线程快找.</h3><p><a href="https://docs.oracle.com/javase/8/docs/technotes/tools/unix/index.html" target="_blank" rel="external">https://docs.oracle.com/javase/8/docs/technotes/tools/unix/index.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;jps-JVM-Process-Status-Tool&quot;&gt;&lt;a href=&quot;#jps-JVM-Process-Status-Tool&quot; class=&quot;headerlink&quot; title=&quot;jps, JVM Process Status Tool&quot;&gt;&lt;/a&gt;jps, JVM Process Status Tool&lt;/h3&gt;&lt;p&gt;jps, JVM Process Status Tool,显示指定系统内所有的HotSpot虚拟机进程&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@kvm000 bin]&lt;span class=&quot;comment&quot;&gt;# java -version&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;java version &lt;span class=&quot;string&quot;&gt;&quot;1.8.0_181&quot;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Java(TM) SE Runtime Environment (build 1.8.0_181-b13)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>并发请求数</title>
    <link href="http://yoursite.com/2018/10/05/%E5%B9%B6%E5%8F%91%E8%AF%B7%E6%B1%82%E6%95%B0/"/>
    <id>http://yoursite.com/2018/10/05/并发请求数/</id>
    <published>2018-10-05T05:54:00.000Z</published>
    <updated>2018-10-05T05:54:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="并发请求数"><a href="#并发请求数" class="headerlink" title="并发请求数"></a>并发请求数</h2><h3 id="windows-server"><a href="#windows-server" class="headerlink" title="windows server"></a>windows server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -ano | findstr <span class="string">"8080"</span> | FIND /v <span class="string">""</span> /c</div></pre></td></tr></table></figure><h3 id="linux-server"><a href="#linux-server" class="headerlink" title="linux server"></a>linux server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">netstat -apn | grep :80 | grep -v LISTEN | wc -l</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;并发请求数&quot;&gt;&lt;a href=&quot;#并发请求数&quot; class=&quot;headerlink&quot; title=&quot;并发请求数&quot;&gt;&lt;/a&gt;并发请求数&lt;/h2&gt;&lt;h3 id=&quot;windows-server&quot;&gt;&lt;a href=&quot;#windows-server&quot; class=&quot;head
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>删除Git所有标签</title>
    <link href="http://yoursite.com/2018/10/04/%E5%88%A0%E9%99%A4%E6%89%80%E6%9C%89Git%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/10/04/删除所有Git标签/</id>
    <published>2018-10-04T03:48:00.000Z</published>
    <updated>2018-10-04T03:48:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="xargs命令"><a href="#xargs命令" class="headerlink" title="xargs命令"></a>xargs命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[root@localhost ~]<span class="comment"># echo "-lh" | cat</span></div><div class="line">-lh</div><div class="line">[root@localhost ~]<span class="comment"># echo "-lh" | xargs ls</span></div><div class="line">total 4.0K</div><div class="line">-rw-------. 1 root root 1.5K Nov 14  2017 anaconda-ks.cfg</div></pre></td></tr></table></figure><a id="more"></a><h3 id="Remove-all-git-tags"><a href="#Remove-all-git-tags" class="headerlink" title="Remove all git tags"></a>Remove all git tags</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#Delete local tags.</span></div><div class="line">git tag -l | xargs git tag -d</div><div class="line"></div><div class="line"><span class="comment">#Fetch remote tags.</span></div><div class="line">git fetch</div><div class="line"></div><div class="line"><span class="comment">#Delete remote tags.</span></div><div class="line">git tag -l | xargs -n 1 git push --delete origin</div><div class="line"></div><div class="line"><span class="comment">#Delete local tasg.</span></div><div class="line">git tag -l | xargs git tag -d</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;xargs命令&quot;&gt;&lt;a href=&quot;#xargs命令&quot; class=&quot;headerlink&quot; title=&quot;xargs命令&quot;&gt;&lt;/a&gt;xargs命令&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# echo &quot;-lh&quot; | cat&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-lh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# echo &quot;-lh&quot; | xargs ls&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;total 4.0K&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;-rw-------. 1 root root 1.5K Nov 14  2017 anaconda-ks.cfg&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
