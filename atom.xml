<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yongtao&#39;s Blog</title>
  
  <subtitle>坚守 无畏 宽容 进取</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-08-26T07:04:00.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wangyt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Zookeeper集群搭建测试</title>
    <link href="http://yoursite.com/2019/08/26/Zookeeper%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/08/26/Zookeeper集群搭建测试/</id>
    <published>2019-08-26T07:04:00.000Z</published>
    <updated>2019-08-26T07:04:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>单台机器搭建一个伪Zookeeper集群，用于测试学习。</p><table><thead><tr><th>节点</th><th>主机</th><th>客户端连接端口</th><th>follower连接leader端口</th><th>leader选举端口</th></tr></thead><tbody><tr><td>server.1</td><td>192.168.91.146</td><td>2181</td><td>2887</td><td>3887</td></tr><tr><td>server.2</td><td>192.168.91.146</td><td>2182</td><td>2888</td><td>3888</td></tr><tr><td>server.3</td><td>192.168.91.146</td><td>2183</td><td>2889</td><td>3889</td></tr></tbody></table><a id="more"></a><h4 id="准备目录"><a href="#准备目录" class="headerlink" title="准备目录"></a>准备目录</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster zookeeper-cluster-test]<span class="comment"># ls -lh</span></div><div class="line">total 8.0K</div><div class="line">-rwxr-xr-x. 1 root root 147 Aug 23 11:03 shutdown.sh</div><div class="line">-rwxr-xr-x. 1 root root 265 Aug 23 10:53 startup.sh</div><div class="line">drwxr-xr-x. 8 root root 166 Aug 22 16:58 zookeeper-3.5.5-server.1</div><div class="line">drwxr-xr-x. 8 root root 166 Aug 22 17:26 zookeeper-3.5.5-server.2</div><div class="line">drwxr-xr-x. 8 root root 166 Aug 22 17:26 zookeeper-3.5.5-server.3</div></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>分别修改server.1、server.2、server.3三个节点的<code>conf/zoo.cfg</code>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># The number of milliseconds of each tick</span></div><div class="line">tickTime=2000</div><div class="line"><span class="comment"># The number of ticks that the initial </span></div><div class="line"><span class="comment"># synchronization phase can take</span></div><div class="line">initLimit=5</div><div class="line"><span class="comment"># The number of ticks that can pass between </span></div><div class="line"><span class="comment"># sending a request and getting an acknowledgement</span></div><div class="line">syncLimit=2</div><div class="line"><span class="comment"># the directory where the snapshot is stored.</span></div><div class="line"><span class="comment"># do not use /tmp for storage, /tmp here is just </span></div><div class="line"><span class="comment"># example sakes.</span></div><div class="line">dataDir=__DATA_ZOO__/data</div><div class="line">dataLogDir=__DATA_ZOO__/logs</div><div class="line"><span class="comment"># the port at which the clients will connect</span></div><div class="line">clientPort=2181</div><div class="line"><span class="comment"># server.x=[hostname]:nnnnn[:nnnnn], etc : (No Java system property) servers making up the ZooKeeper ensemble. When the server starts up, it determines which server it is by looking for the file myid in the data directory. That file contains the server number, in ASCII, and it should match x in server.x in the left hand side of this setting. The list of servers that make up ZooKeeper servers that is used by the clients must match the list of ZooKeeper servers that each ZooKeeper server has. There are two port numbers nnnnn. The first followers use to connect to the leader, and the second is for leader election. If you want to test multiple servers on a single machine, then different ports can be used for each server.</span></div><div class="line">server.1=192.168.91.146:2887:3887</div><div class="line">server.2=192.168.91.146:2888:3888</div><div class="line">server.3=192.168.91.146:2889:3889</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">tickTime=2000</div><div class="line">initLimit=5</div><div class="line">syncLimit=2</div><div class="line">dataDir=__DATA_ZOO__/data</div><div class="line">dataLogDir=__DATA_ZOO__/logs</div><div class="line">clientPort=2182</div><div class="line">server.1=192.168.91.146:2887:3887</div><div class="line">server.2=192.168.91.146:2888:3888</div><div class="line">server.3=192.168.91.146:2889:3889</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">tickTime=2000</div><div class="line">initLimit=5</div><div class="line">syncLimit=2</div><div class="line">dataDir=__DATA_ZOO__/data</div><div class="line">dataLogDir=__DATA_ZOO__/logs</div><div class="line">clientPort=2183</div><div class="line">server.1=192.168.91.146:2887:3887</div><div class="line">server.2=192.168.91.146:2888:3888</div><div class="line">server.3=192.168.91.146:2889:3889</div></pre></td></tr></table></figure><h4 id="启停脚本"><a href="#启停脚本" class="headerlink" title="启停脚本"></a>启停脚本</h4><h5 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line">current_path=`<span class="built_in">pwd</span>`</div><div class="line">nodes=(zookeeper-3.5.5-server.1 zookeeper-3.5.5-server.2 zookeeper-3.5.5-server.3)</div><div class="line"><span class="keyword">for</span> val <span class="keyword">in</span> <span class="string">"<span class="variable">$&#123;nodes[@]&#125;</span>"</span></div><div class="line"><span class="keyword">do</span></div><div class="line">    path=<span class="variable">$current_path</span>/<span class="variable">$val</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$path</span></div><div class="line">    <span class="built_in">cd</span> <span class="variable">$path</span></div><div class="line">        ./bin/zkServer.sh start</div><div class="line"><span class="keyword">done</span></div><div class="line">jps -l | grep QuorumPeerMain</div></pre></td></tr></table></figure><h5 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster zookeeper-cluster-test]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/zookeeper-cluster-test</div><div class="line">[root@pseudo-cluster zookeeper-cluster-test]<span class="comment"># ./startup.sh </span></div><div class="line">/usr/<span class="built_in">local</span>/zookeeper-cluster-test/zookeeper-3.5.5-server.1</div><div class="line">ZooKeeper JMX enabled by default</div><div class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper-cluster-test/zookeeper-3.5.5-server.1/bin/../conf/zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">/usr/<span class="built_in">local</span>/zookeeper-cluster-test/zookeeper-3.5.5-server.2</div><div class="line">ZooKeeper JMX enabled by default</div><div class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper-cluster-test/zookeeper-3.5.5-server.2/bin/../conf/zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">/usr/<span class="built_in">local</span>/zookeeper-cluster-test/zookeeper-3.5.5-server.3</div><div class="line">ZooKeeper JMX enabled by default</div><div class="line">Using config: /usr/<span class="built_in">local</span>/zookeeper-cluster-test/zookeeper-3.5.5-server.3/bin/../conf/zoo.cfg</div><div class="line">Starting zookeeper ... STARTED</div><div class="line">56626 org.apache.zookeeper.server.quorum.QuorumPeerMain</div><div class="line">56739 org.apache.zookeeper.server.quorum.QuorumPeerMain</div><div class="line">56679 org.apache.zookeeper.server.quorum.QuorumPeerMain</div><div class="line">[root@pseudo-cluster zookeeper-cluster-test]<span class="comment">#</span></div></pre></td></tr></table></figure><h5 id="查看集群"><a href="#查看集群" class="headerlink" title="查看集群"></a>查看集群</h5><h5 id="停止脚本"><a href="#停止脚本" class="headerlink" title="停止脚本"></a>停止脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line">jps -l | grep QuorumPeerMain</div><div class="line"></div><div class="line"><span class="built_in">kill</span> -9 $(jps -l | grep org.apache.zookeeper.server.quorum.QuorumPeerMain | awk <span class="string">'&#123;&#123;print $1&#125;&#125;'</span>)</div></pre></td></tr></table></figure><h5 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster zookeeper-cluster-test]<span class="comment"># ./shutdown.sh </span></div><div class="line">56626 org.apache.zookeeper.server.quorum.QuorumPeerMain</div><div class="line">56739 org.apache.zookeeper.server.quorum.QuorumPeerMain</div><div class="line">56679 org.apache.zookeeper.server.quorum.QuorumPeerMain</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单台机器搭建一个伪Zookeeper集群，用于测试学习。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;节点&lt;/th&gt;
&lt;th&gt;主机&lt;/th&gt;
&lt;th&gt;客户端连接端口&lt;/th&gt;
&lt;th&gt;follower连接leader端口&lt;/th&gt;
&lt;th&gt;leader选举端口&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;server.1&lt;/td&gt;
&lt;td&gt;192.168.91.146&lt;/td&gt;
&lt;td&gt;2181&lt;/td&gt;
&lt;td&gt;2887&lt;/td&gt;
&lt;td&gt;3887&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server.2&lt;/td&gt;
&lt;td&gt;192.168.91.146&lt;/td&gt;
&lt;td&gt;2182&lt;/td&gt;
&lt;td&gt;2888&lt;/td&gt;
&lt;td&gt;3888&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;server.3&lt;/td&gt;
&lt;td&gt;192.168.91.146&lt;/td&gt;
&lt;td&gt;2183&lt;/td&gt;
&lt;td&gt;2889&lt;/td&gt;
&lt;td&gt;3889&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="Zookeeper" scheme="http://yoursite.com/categories/Zookeeper/"/>
    
    
      <category term="Zookeeper" scheme="http://yoursite.com/tags/Zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>The lifetime of a thread</title>
    <link href="http://yoursite.com/2019/08/22/The%20lifetime%20of%20a%20thread/"/>
    <id>http://yoursite.com/2019/08/22/The lifetime of a thread/</id>
    <published>2019-08-22T11:40:00.000Z</published>
    <updated>2019-08-22T11:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="The-lifetime-of-a-thread"><a href="#The-lifetime-of-a-thread" class="headerlink" title="The lifetime of a thread"></a>The lifetime of a thread</h1><h3 id="线程的状态"><a href="#线程的状态" class="headerlink" title="线程的状态"></a>线程的状态</h3><p>线程有六种状态，定义在<code>java.lang.Thread.State</code>内部枚举中：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">enum</span> State &#123;</div><div class="line">    NEW,</div><div class="line">    RUNNABLE,</div><div class="line">    BLOCKED,</div><div class="line">    WAITING,</div><div class="line">    TIMED_WAITING,</div><div class="line">    TERMINATED;</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><p>A thread state. A thread can be in one of the following states:</p><ul><li><strong>NEW</strong> A thread that has not yet started is in this state.</li><li><strong>RUNNABLE</strong> A thread executing in the Java virtual machine is in this state.</li><li><strong>BLOCKED</strong> A thread that is blocked waiting for a monitor lock is in this state. 处于此状态，线程被阻塞等待监视器锁</li><li><strong>WAITING</strong> A thread that is waiting indefinitely for another thread to perform a particular action is in this state. 无限期等待另外线程执行特定的动作，通常为唤醒等操作</li><li><strong>TIMED_WAITING</strong> A thread that is waiting for another thread to perform an action for up to a specified waiting time is in this state. 限期等待</li><li><strong>TERMINATED</strong> A thread that has exited is in this state.</li></ul><p>A thread can be in only one state at a given point in time. These states are virtual machine states which do not reflect any operating system thread states.</p><h3 id="线程的生命周期"><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h3><p><img src="https://objects.yongtao.wang/images/20190903/java-thread-life-cycle-state.gif" alt="The lifetime of a thread.gif"><br>实现三个线程，其中Thread-01执行睡眠，Thread-02、Thread-03执行同步任务，jstack抓取堆栈信息，观察线程状态。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">    Thread thd01 =</div><div class="line">        <span class="keyword">new</span> Thread(</div><div class="line">        () -&gt; &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                TimeUnit.SECONDS.sleep(<span class="number">120</span>);</div><div class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                <span class="comment">// ignore</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Thread-01"</span>);</div><div class="line"></div><div class="line">    Thread thd02 =</div><div class="line">        <span class="keyword">new</span> Thread(</div><div class="line">        () -&gt; &#123;</div><div class="line">            doSorting();</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Thread-02"</span>);</div><div class="line"></div><div class="line">    Thread thd03 =</div><div class="line">        <span class="keyword">new</span> Thread(</div><div class="line">        () -&gt; &#123;</div><div class="line">            doSorting();</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Thread-03"</span>);</div><div class="line"></div><div class="line">    thd01.start();</div><div class="line">    thd02.start();</div><div class="line">    thd03.start();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">synchronized</span> <span class="keyword">void</span> <span class="title">doSorting</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">for</span> (; ; ) &#123;</div><div class="line">        <span class="comment">// 生成随机数组</span></div><div class="line">        <span class="keyword">double</span>[] a = <span class="keyword">new</span> <span class="keyword">double</span>[<span class="number">100</span>];</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; a.length; i++) &#123;</div><div class="line">            a[i] = <span class="keyword">new</span> Random().nextDouble();</div><div class="line">        &#125;</div><div class="line">        <span class="comment">// 对随机数组进行排序，使其消耗CPU</span></div><div class="line">        Arrays.sort(a);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p><p>如堆栈信息所示，Thread-01处于TIMED_WAITING状态，Thread-02处于RUNNABLE状态，Thread-02处于BLOCKED状态。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">&quot;Thread-03&quot; #13 prio=5 os_prio=0 tid=0x000000002092b000 nid=0x345c waiting for monitor entry [0x00000000214fe000]</div><div class="line">   java.lang.Thread.State: BLOCKED (on object monitor)</div><div class="line">        at io.mysnippet.multithread.ThreadState.doSorting(ThreadState.java:49)</div><div class="line">        - waiting to lock &lt;0x000000068280a830&gt; (a java.lang.Class for io.mysnippet.multithread.ThreadState)</div><div class="line">        at io.mysnippet.multithread.ThreadState.lambda$main$2(ThreadState.java:37)</div><div class="line">        at io.mysnippet.multithread.ThreadState$$Lambda$3/1078694789.run(Unknown Source)</div><div class="line">        at java.lang.Thread.run(Thread.java:745)</div><div class="line"></div><div class="line">   Locked ownable synchronizers:</div><div class="line">        - None</div><div class="line"></div><div class="line">&quot;Thread-02&quot; #12 prio=5 os_prio=0 tid=0x000000002092a000 nid=0x748 runnable [0x00000000213fe000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line">        at io.mysnippet.multithread.ThreadState.doSorting(ThreadState.java:50)</div><div class="line">        - locked &lt;0x000000068280a830&gt; (a java.lang.Class for io.mysnippet.multithread.ThreadState)</div><div class="line">        at io.mysnippet.multithread.ThreadState.lambda$main$1(ThreadState.java:30)</div><div class="line">        at io.mysnippet.multithread.ThreadState$$Lambda$2/1096979270.run(Unknown Source)</div><div class="line">        at java.lang.Thread.run(Thread.java:745)</div><div class="line"></div><div class="line">   Locked ownable synchronizers:</div><div class="line">        - None</div><div class="line"></div><div class="line">&quot;Thread-01&quot; #11 prio=5 os_prio=0 tid=0x0000000020949800 nid=0x4494 waiting on condition [0x00000000212ff000]</div><div class="line">   java.lang.Thread.State: TIMED_WAITING (sleeping)</div><div class="line">        at java.lang.Thread.sleep(Native Method)</div><div class="line">        at java.lang.Thread.sleep(Thread.java:340)</div><div class="line">        at java.util.concurrent.TimeUnit.sleep(TimeUnit.java:386)</div><div class="line">        at io.mysnippet.multithread.ThreadState.lambda$main$0(ThreadState.java:20)</div><div class="line">        at io.mysnippet.multithread.ThreadState$$Lambda$1/2003749087.run(Unknown Source)</div><div class="line">        at java.lang.Thread.run(Thread.java:745)</div><div class="line"></div><div class="line">   Locked ownable synchronizers:</div><div class="line">        - None</div></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;The-lifetime-of-a-thread&quot;&gt;&lt;a href=&quot;#The-lifetime-of-a-thread&quot; class=&quot;headerlink&quot; title=&quot;The lifetime of a thread&quot;&gt;&lt;/a&gt;The lifetime of a thread&lt;/h1&gt;&lt;h3 id=&quot;线程的状态&quot;&gt;&lt;a href=&quot;#线程的状态&quot; class=&quot;headerlink&quot; title=&quot;线程的状态&quot;&gt;&lt;/a&gt;线程的状态&lt;/h3&gt;&lt;p&gt;线程有六种状态，定义在&lt;code&gt;java.lang.Thread.State&lt;/code&gt;内部枚举中：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;enum&lt;/span&gt; State &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    NEW,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    RUNNABLE,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    BLOCKED,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    WAITING,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    TIMED_WAITING,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    TERMINATED;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="thread" scheme="http://yoursite.com/categories/thread/"/>
    
    
      <category term="thread" scheme="http://yoursite.com/tags/thread/"/>
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Elasticsearch集群搭建测试</title>
    <link href="http://yoursite.com/2019/08/21/Elasticsearch%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/08/21/Elasticsearch集群搭建测试/</id>
    <published>2019-08-21T06:06:30.000Z</published>
    <updated>2019-08-21T06:06:30.000Z</updated>
    
    <content type="html"><![CDATA[<p>单台机器搭建一个伪Elasticsearch集群，用于测试学习。</p><table><thead><tr><th>节点</th><th>主机</th><th>HTTP端口</th><th>TCP端口</th></tr></thead><tbody><tr><td>node-0</td><td>192.168.91.146</td><td>9200</td><td>9300</td></tr><tr><td>node-1</td><td>192.168.91.146</td><td>9201</td><td>9301</td></tr><tr><td>node-2</td><td>192.168.91.146</td><td>9202</td><td>9302</td></tr></tbody></table><a id="more"></a><h4 id="准备目录"><a href="#准备目录" class="headerlink" title="准备目录"></a>准备目录</h4><p>下载elasticsearch安装包，按照如下目录组织</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test</div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># ls -lh</span></div><div class="line">total 8.0K</div><div class="line">drwxr-xr-x. 9 elasticsearch elasticsearch 155 Aug 11 03:22 es-6.6.2-node0</div><div class="line">drwxr-xr-x. 9 elasticsearch elasticsearch 165 Aug 11 03:22 es-6.6.2-node1</div><div class="line">drwxr-xr-x. 9 elasticsearch elasticsearch 155 Aug 11 03:22 es-6.6.2-node2</div><div class="line">-rwxr-xr-x. 1 elasticsearch elasticsearch 253 Aug  9 03:07 shutdown.sh</div><div class="line">-rwxr-xr-x. 1 elasticsearch elasticsearch 264 Aug  9 03:13 startup.sh</div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment">#</span></div></pre></td></tr></table></figure><h4 id="添加用户-amp-组-amp-赋权"><a href="#添加用户-amp-组-amp-赋权" class="headerlink" title="添加用户&amp;组&amp;赋权"></a>添加用户&amp;组&amp;赋权</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># groupadd elasticsearch</span></div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># useradd elasticsearch -g elasticsearch</span></div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># chown -R elasticsearch.elasticsearch /usr/local/es-cluser-test</span></div></pre></td></tr></table></figure><h4 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h4><p>分别修改node0、node1、node2三个节点的<code>config/elasticsearch.yml</code>配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cluster.name: es-pseudo-cluster</div><div class="line">node.name: node-0</div><div class="line">bootstrap.memory_lock: <span class="literal">true</span></div><div class="line">network.host: 192.168.91.146</div><div class="line">http.port: 9200</div><div class="line">transport.tcp.port: 9300</div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.91.146:9301"</span>, <span class="string">"192.168.91.146:9302"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 2</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cluster.name: es-pseudo-cluster</div><div class="line">node.name: node-1</div><div class="line">bootstrap.memory_lock: <span class="literal">true</span></div><div class="line">network.host: 192.168.91.146</div><div class="line">http.port: 9201</div><div class="line">transport.tcp.port: 9301</div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.91.146:9300"</span>, <span class="string">"192.168.91.146:9302"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 2</div></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">cluster.name: es-pseudo-cluster</div><div class="line">node.name: node-2</div><div class="line">bootstrap.memory_lock: <span class="literal">true</span></div><div class="line">network.host: 192.168.91.146</div><div class="line">http.port: 9202</div><div class="line">transport.tcp.port: 9302</div><div class="line">discovery.zen.ping.unicast.hosts: [<span class="string">"192.168.91.146:9300"</span>, <span class="string">"192.168.91.146:9301"</span>]</div><div class="line">discovery.zen.minimum_master_nodes: 2</div></pre></td></tr></table></figure><h4 id="启停脚本"><a href="#启停脚本" class="headerlink" title="启停脚本"></a>启停脚本</h4><h5 id="启动脚本"><a href="#启动脚本" class="headerlink" title="启动脚本"></a>启动脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line">current_path=`<span class="built_in">pwd</span>`</div><div class="line">nodes=(es-6.6.2-node0 es-6.6.2-node1 es-6.6.2-node2)</div><div class="line"></div><div class="line"><span class="keyword">for</span> val <span class="keyword">in</span> <span class="string">"<span class="variable">$&#123;nodes[@]&#125;</span>"</span></div><div class="line"><span class="keyword">do</span></div><div class="line">    path=<span class="variable">$current_path</span>/<span class="variable">$val</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$path</span></div><div class="line">    <span class="built_in">cd</span> <span class="variable">$path</span></div><div class="line">    ./bin/elasticsearch -d -p pid</div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line">ps -elf | grep -v <span class="string">'grep'</span> | grep Elasticsearch</div></pre></td></tr></table></figure><h5 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test</div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># ls -lh</span></div><div class="line">total 8.0K</div><div class="line">drwxr-xr-x. 9 elasticsearch elasticsearch 155 Aug 14 03:52 es-6.6.2-node0</div><div class="line">drwxr-xr-x. 9 elasticsearch elasticsearch 155 Aug 14 03:56 es-6.6.2-node1</div><div class="line">drwxr-xr-x. 9 elasticsearch elasticsearch 155 Aug 14 03:56 es-6.6.2-node2</div><div class="line">-rwxr-xr-x. 1 elasticsearch elasticsearch 253 Aug  9 03:07 shutdown.sh</div><div class="line">-rwxr-xr-x. 1 elasticsearch elasticsearch 264 Aug 14 03:55 startup.sh</div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># </span></div><div class="line">[root@pseudo-cluster es-cluser-test]<span class="comment"># su elasticsearch</span></div><div class="line">[elasticsearch@pseudo-cluster es-cluser-test]$ ./startup.sh </div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node0</div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node1</div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node2</div><div class="line">0 S elastic+  30162      1 99  80   0 - 776807 futex_ 03:57 pts/0   00:00:01 /usr/<span class="built_in">local</span>/jdk1.8.0_221/bin/java -Xms512m -Xmx512m -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -Djna.nosys=<span class="literal">true</span> -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=<span class="literal">true</span> -Dio.netty.noKeySetOptimization=<span class="literal">true</span> -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=<span class="literal">false</span> -Dlog4j2.disable.jmx=<span class="literal">true</span> -Djava.io.tmpdir=/tmp/elasticsearch-3768772128440104570 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node0 -Des.path.conf=/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node0/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node0/lib/* org.elasticsearch.bootstrap.Elasticsearch -d -p pid</div><div class="line">0 S elastic+  30238      1  0  80   0 - 773344 futex_ 03:57 pts/0   00:00:00 /usr/<span class="built_in">local</span>/jdk1.8.0_221/bin/java -Xms512m -Xmx512m -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -Djna.nosys=<span class="literal">true</span> -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=<span class="literal">true</span> -Dio.netty.noKeySetOptimization=<span class="literal">true</span> -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=<span class="literal">false</span> -Dlog4j2.disable.jmx=<span class="literal">true</span> -Djava.io.tmpdir=/tmp/elasticsearch-3776090600362042909 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node1 -Des.path.conf=/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node1/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node1/lib/* org.elasticsearch.bootstrap.Elasticsearch -d -p pid</div><div class="line">0 S elastic+  30314      1  0  80   0 - 25758 futex_ 03:57 pts/0    00:00:00 /usr/<span class="built_in">local</span>/jdk1.8.0_221/bin/java -Xms512m -Xmx512m -XX:+UseConcMarkSweepGC -XX:CMSInitiatingOccupancyFraction=75 -XX:+UseCMSInitiatingOccupancyOnly -Des.networkaddress.cache.ttl=60 -Des.networkaddress.cache.negative.ttl=10 -XX:+AlwaysPreTouch -Xss1m -Djava.awt.headless=<span class="literal">true</span> -Dfile.encoding=UTF-8 -Djna.nosys=<span class="literal">true</span> -XX:-OmitStackTraceInFastThrow -Dio.netty.noUnsafe=<span class="literal">true</span> -Dio.netty.noKeySetOptimization=<span class="literal">true</span> -Dio.netty.recycler.maxCapacityPerThread=0 -Dlog4j.shutdownHookEnabled=<span class="literal">false</span> -Dlog4j2.disable.jmx=<span class="literal">true</span> -Djava.io.tmpdir=/tmp/elasticsearch-4360777951552716525 -XX:+HeapDumpOnOutOfMemoryError -XX:HeapDumpPath=data -XX:ErrorFile=logs/hs_err_pid%p.log -XX:+PrintGCDetails -XX:+PrintGCDateStamps -XX:+PrintTenuringDistribution -XX:+PrintGCApplicationStoppedTime -Xloggc:logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=32 -XX:GCLogFileSize=64m -Des.path.home=/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node2 -Des.path.conf=/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node2/config -Des.distribution.flavor=default -Des.distribution.type=tar -cp /usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node2/lib/* org.elasticsearch.bootstrap.Elasticsearch -d -p pid</div><div class="line">[elasticsearch@pseudo-cluster es-cluser-test]$</div></pre></td></tr></table></figure><h5 id="查看集群"><a href="#查看集群" class="headerlink" title="查看集群"></a>查看集群</h5><p>通过Elasticsearch Head查看集群</p><p><img src="https://objects.yongtao.wang/images/20190821/elasticsearch-pseudo-cluster.png" alt="elasticsearch-pseudo-cluster"></p><h5 id="停止脚本"><a href="#停止脚本" class="headerlink" title="停止脚本"></a>停止脚本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line">current_path=`<span class="built_in">pwd</span>`</div><div class="line">nodes=(es-6.6.2-node0 es-6.6.2-node1 es-6.6.2-node2)</div><div class="line"></div><div class="line"><span class="keyword">for</span> val <span class="keyword">in</span> <span class="string">"<span class="variable">$&#123;nodes[@]&#125;</span>"</span></div><div class="line"><span class="keyword">do</span></div><div class="line">    path=<span class="variable">$current_path</span>/<span class="variable">$val</span></div><div class="line">    <span class="built_in">echo</span> <span class="variable">$path</span></div><div class="line">    <span class="built_in">cd</span> <span class="variable">$path</span></div><div class="line">    <span class="built_in">kill</span> -9 `cat pid` </div><div class="line"><span class="keyword">done</span></div><div class="line"></div><div class="line">ps -elf | grep -v <span class="string">'grep'</span> | grep Elasticsearch</div></pre></td></tr></table></figure><h5 id="停止"><a href="#停止" class="headerlink" title="停止"></a>停止</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[elasticsearch@pseudo-cluster es-cluser-test]$ ./shutdown.sh </div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node0</div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node1</div><div class="line">/usr/<span class="built_in">local</span>/es-cluser-test/es-6.6.2-node2</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单台机器搭建一个伪Elasticsearch集群，用于测试学习。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;节点&lt;/th&gt;
&lt;th&gt;主机&lt;/th&gt;
&lt;th&gt;HTTP端口&lt;/th&gt;
&lt;th&gt;TCP端口&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;node-0&lt;/td&gt;
&lt;td&gt;192.168.91.146&lt;/td&gt;
&lt;td&gt;9200&lt;/td&gt;
&lt;td&gt;9300&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node-1&lt;/td&gt;
&lt;td&gt;192.168.91.146&lt;/td&gt;
&lt;td&gt;9201&lt;/td&gt;
&lt;td&gt;9301&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;node-2&lt;/td&gt;
&lt;td&gt;192.168.91.146&lt;/td&gt;
&lt;td&gt;9202&lt;/td&gt;
&lt;td&gt;9302&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://yoursite.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Windows 10 去除快捷方式小箭头</title>
    <link href="http://yoursite.com/2019/08/10/Windows%2010%20%E5%8E%BB%E9%99%A4%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F%E5%B0%8F%E7%AE%AD%E5%A4%B4/"/>
    <id>http://yoursite.com/2019/08/10/Windows 10 去除快捷方式小箭头/</id>
    <published>2019-08-10T12:56:00.000Z</published>
    <updated>2019-08-10T12:56:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Windows-10-去除快捷方式小箭头"><a href="#Windows-10-去除快捷方式小箭头" class="headerlink" title="Windows 10 去除快捷方式小箭头"></a>Windows 10 去除快捷方式小箭头</h3><h4 id="去掉小箭头"><a href="#去掉小箭头" class="headerlink" title="去掉小箭头"></a>去掉小箭头</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">reg add <span class="string">"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Icons"</span> /v 29 /d <span class="string">"%systemroot%\system32\imageres.dll,197"</span> /t reg_sz /f</div><div class="line">taskkill /f /im explorer.exe</div><div class="line">attrib -s -r -h <span class="string">"%userprofile%\AppData\Local\iconcache.db"</span></div><div class="line">del <span class="string">"%userprofile%\AppData\Local\iconcache.db"</span> /f /q</div><div class="line">start explorer</div><div class="line">pause</div></pre></td></tr></table></figure><h4 id="恢复小箭头"><a href="#恢复小箭头" class="headerlink" title="恢复小箭头"></a>恢复小箭头</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">reg delete <span class="string">"HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Icons"</span> /v 29 /f</div><div class="line">taskkill /f /im explorer.exe</div><div class="line">attrib -s -r -h <span class="string">"%userprofile%\AppData\Local\iconcache.db"</span></div><div class="line">del <span class="string">"%userprofile%\AppData\Local\iconcache.db"</span> /f /q</div><div class="line">start explorer</div><div class="line">pause</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Windows-10-去除快捷方式小箭头&quot;&gt;&lt;a href=&quot;#Windows-10-去除快捷方式小箭头&quot; class=&quot;headerlink&quot; title=&quot;Windows 10 去除快捷方式小箭头&quot;&gt;&lt;/a&gt;Windows 10 去除快捷方式小箭头&lt;/h3&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Redis集群搭建测试</title>
    <link href="http://yoursite.com/2019/08/01/Redis%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA%E6%B5%8B%E8%AF%95/"/>
    <id>http://yoursite.com/2019/08/01/Redis集群搭建测试/</id>
    <published>2019-08-01T03:28:49.000Z</published>
    <updated>2019-08-02T02:46:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>单台机器搭建一个伪Redis集群，用于测试学习。redis-3.2.13可以使用redis源码自行编译<code>make prifix=/tmp/redis</code>。</p><h4 id="下载redis-cluster-test项目"><a href="#下载redis-cluster-test项目" class="headerlink" title="下载redis-cluster-test项目"></a>下载redis-cluster-test项目</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster <span class="built_in">local</span>]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span></div><div class="line">[root@pseudo-cluster <span class="built_in">local</span>]<span class="comment"># git clone https://github.com/wyt/redis-cluster-test.git</span></div><div class="line">[root@pseudo-cluster bin]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/redis-3.2.13/bin</div><div class="line">[root@pseudo-cluster bin]<span class="comment"># chmod +x ./*</span></div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test</div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># chmod +x shutdown.sh startup.sh</span></div></pre></td></tr></table></figure><h4 id="安装ruby环境等"><a href="#安装ruby环境等" class="headerlink" title="安装ruby环境等"></a>安装ruby环境等</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 安装ruby环境</span></div><div class="line">[root@pseudo-cluster redis-cluster-test] yum install centos-release-scl-rh</div><div class="line">[root@pseudo-cluster redis-cluster-test] yum install rh-ruby23 -y</div><div class="line"><span class="comment"># 当前session生效</span></div><div class="line">[root@pseudo-cluster redis-cluster-test] scl <span class="built_in">enable</span> rh-ruby23 bash</div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ruby -v</span></div><div class="line">ruby 2.3.8p459 (2018-10-18 revision 65136) [x86_64-linux]</div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># gem install redis</span></div><div class="line">Fetching: redis-4.1.2.gem (100%)</div><div class="line">Successfully installed redis-4.1.2</div><div class="line">Parsing documentation <span class="keyword">for</span> redis-4.1.2</div><div class="line">Installing ri documentation <span class="keyword">for</span> redis-4.1</div></pre></td></tr></table></figure><a id="more"></a><h4 id="规划集群"><a href="#规划集群" class="headerlink" title="规划集群"></a>规划集群</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># pwd</span></div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test</div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ls -lh</span></div><div class="line">total 16K</div><div class="line">drwxr-xr-x. 2 root root   64 Aug  1 18:57 7000</div><div class="line">drwxr-xr-x. 2 root root   64 Aug  1 18:57 7001</div><div class="line">drwxr-xr-x. 2 root root   64 Aug  1 18:57 7002</div><div class="line">drwxr-xr-x. 2 root root   64 Aug  1 18:57 7003</div><div class="line">drwxr-xr-x. 2 root root   64 Aug  1 18:57 7004</div><div class="line">drwxr-xr-x. 2 root root   64 Aug  1 18:57 7005</div><div class="line">-rw-r--r--. 1 root root 7.1K Aug  1 18:56 README.md</div><div class="line">drwxr-xr-x. 3 root root   35 Aug  1 18:54 redis-3.2.13</div><div class="line">-rwxr-xr-x. 1 root root   75 Aug  1 18:54 shutdown.sh</div><div class="line">-rwxr-xr-x. 1 root root  635 Aug  1 18:54 startup.sh</div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ./startup.sh </span></div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/7000</div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/7001</div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/7002</div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/7003</div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/7004</div><div class="line">/usr/<span class="built_in">local</span>/redis-cluster-test/7005</div><div class="line">5 S root      14845      1  0  80   0 - 35257 ep_pol 18:59 ?        00:00:00 ../redis-3.2.13/bin/redis-server *:7000 [cluster]</div><div class="line">5 S root      14849      1  0  80   0 - 35257 ep_pol 18:59 ?        00:00:00 ../redis-3.2.13/bin/redis-server *:7001 [cluster]</div><div class="line">5 S root      14853      1  0  80   0 - 35257 ep_pol 18:59 ?        00:00:00 ../redis-3.2.13/bin/redis-server *:7002 [cluster]</div><div class="line">5 S root      14857      1  0  80   0 - 35257 ep_pol 18:59 ?        00:00:00 ../redis-3.2.13/bin/redis-server *:7003 [cluster]</div><div class="line">5 S root      14861      1  0  80   0 - 35257 ep_pol 18:59 ?        00:00:00 ../redis-3.2.13/bin/redis-server *:7004 [cluster]</div><div class="line">5 S root      14865      1  0  80   0 - 35257 ep_pol 18:59 ?        00:00:00 ../redis-3.2.13/bin/redis-server *:7005 [cluster]</div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ./redis-3.2.13/bin/redis-trib.rb create --replicas 1 192.168.91.146:7000 192.168.91.146:7001 192.168.91.146:7002 192.168.91.146:7003 192.168.91.146:7004 192.168.91.146:7005</span></div><div class="line">&gt;&gt;&gt; Creating cluster</div><div class="line">&gt;&gt;&gt; Performing <span class="built_in">hash</span> slots allocation on 6 nodes...</div><div class="line">Using 3 masters:</div><div class="line">192.168.91.146:7000</div><div class="line">192.168.91.146:7001</div><div class="line">192.168.91.146:7002</div><div class="line">Adding replica 192.168.91.146:7003 to 192.168.91.146:7000</div><div class="line">Adding replica 192.168.91.146:7004 to 192.168.91.146:7001</div><div class="line">Adding replica 192.168.91.146:7005 to 192.168.91.146:7002</div><div class="line">M: 50925d802a5f1be70521fafea196e8b112c122ca 192.168.91.146:7000</div><div class="line">   slots:0-5460 (5461 slots) master</div><div class="line">M: c4a38513a633aab450a3d491c30ec6b305b7abef 192.168.91.146:7001</div><div class="line">   slots:5461-10922 (5462 slots) master</div><div class="line">M: 963dd0cac7581f29464624cb0df8a678cdfc54cd 192.168.91.146:7002</div><div class="line">   slots:10923-16383 (5461 slots) master</div><div class="line">S: 6f3aa71e0d754d54738d746bd617d31adabd0d3f 192.168.91.146:7003</div><div class="line">   replicates 50925d802a5f1be70521fafea196e8b112c122ca</div><div class="line">S: 60cd05e9ed0350bd271fabacf00483bc9a34c2da 192.168.91.146:7004</div><div class="line">   replicates c4a38513a633aab450a3d491c30ec6b305b7abef</div><div class="line">S: 2755ff19dcb8d00967e66f7d19bf95603fa352dc 192.168.91.146:7005</div><div class="line">   replicates 963dd0cac7581f29464624cb0df8a678cdfc54cd</div><div class="line">Can I <span class="built_in">set</span> the above configuration? (<span class="built_in">type</span> <span class="string">'yes'</span> to accept): yes</div><div class="line">&gt;&gt;&gt; Nodes configuration updated</div><div class="line">&gt;&gt;&gt; Assign a different config epoch to each node</div><div class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</div><div class="line">Waiting <span class="keyword">for</span> the cluster to join...</div><div class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.91.146:7000)</div><div class="line">M: 50925d802a5f1be70521fafea196e8b112c122ca 192.168.91.146:7000</div><div class="line">   slots:0-5460 (5461 slots) master</div><div class="line">   1 additional replica(s)</div><div class="line">M: 963dd0cac7581f29464624cb0df8a678cdfc54cd 192.168.91.146:7002</div><div class="line">   slots:10923-16383 (5461 slots) master</div><div class="line">   1 additional replica(s)</div><div class="line">S: 2755ff19dcb8d00967e66f7d19bf95603fa352dc 192.168.91.146:7005</div><div class="line">   slots: (0 slots) slave</div><div class="line">   replicates 963dd0cac7581f29464624cb0df8a678cdfc54cd</div><div class="line">M: c4a38513a633aab450a3d491c30ec6b305b7abef 192.168.91.146:7001</div><div class="line">   slots:5461-10922 (5462 slots) master</div><div class="line">   1 additional replica(s)</div><div class="line">S: 6f3aa71e0d754d54738d746bd617d31adabd0d3f 192.168.91.146:7003</div><div class="line">   slots: (0 slots) slave</div><div class="line">   replicates 50925d802a5f1be70521fafea196e8b112c122ca</div><div class="line">S: 60cd05e9ed0350bd271fabacf00483bc9a34c2da 192.168.91.146:7004</div><div class="line">   slots: (0 slots) slave</div><div class="line">   replicates c4a38513a633aab450a3d491c30ec6b305b7abef</div><div class="line">[OK] All nodes agree about slots configuration.</div><div class="line">&gt;&gt;&gt; Check <span class="keyword">for</span> open slots...</div><div class="line">&gt;&gt;&gt; Check slots coverage...</div><div class="line">[OK] All 16384 slots covered.</div></pre></td></tr></table></figure><h4 id="查看集群信息"><a href="#查看集群信息" class="headerlink" title="查看集群信息"></a>查看集群信息</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ./redis-3.2.13/bin/redis-cli -c -p 7000</span></div><div class="line">127.0.0.1:7000&gt; CLUSTER NODES</div><div class="line">963dd0cac7581f29464624cb0df8a678cdfc54cd 192.168.91.146:7002 master - 0 1564657233357 3 connected 10923-16383</div><div class="line">2755ff19dcb8d00967e66f7d19bf95603fa352dc 192.168.91.146:7005 slave 963dd0cac7581f29464624cb0df8a678cdfc54cd 0 1564657233862 6 connected</div><div class="line">50925d802a5f1be70521fafea196e8b112c122ca 192.168.91.146:7000 myself,master - 0 0 1 connected 0-5460</div><div class="line">c4a38513a633aab450a3d491c30ec6b305b7abef 192.168.91.146:7001 master - 0 1564657234365 2 connected 5461-10922</div><div class="line">6f3aa71e0d754d54738d746bd617d31adabd0d3f 192.168.91.146:7003 slave 50925d802a5f1be70521fafea196e8b112c122ca 0 1564657235373 4 connected</div><div class="line">60cd05e9ed0350bd271fabacf00483bc9a34c2da 192.168.91.146:7004 slave c4a38513a633aab450a3d491c30ec6b305b7abef 0 1564657234868 5 connected</div><div class="line">127.0.0.1:7000&gt; CLUSTER INFO</div><div class="line">cluster_state:ok</div><div class="line">cluster_slots_assigned:16384</div><div class="line">cluster_slots_ok:16384</div><div class="line">cluster_slots_pfail:0</div><div class="line">cluster_slots_fail:0</div><div class="line">cluster_known_nodes:6</div><div class="line">cluster_size:3</div><div class="line">cluster_current_epoch:6</div><div class="line">cluster_my_epoch:1</div><div class="line">cluster_stats_messages_sent:207</div><div class="line">cluster_stats_messages_received:207</div></pre></td></tr></table></figure><h4 id="集群数据操作"><a href="#集群数据操作" class="headerlink" title="集群数据操作"></a>集群数据操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ./redis-3.2.13/bin/redis-cli -c -p 7000</span></div><div class="line">127.0.0.1:7000&gt; <span class="built_in">set</span> foo bar</div><div class="line">-&gt; Redirected to slot [12182] located at 192.168.91.146:7002</div><div class="line">OK</div><div class="line">192.168.91.146:7002&gt; <span class="built_in">set</span> hello world</div><div class="line">-&gt; Redirected to slot [866] located at 192.168.91.146:7000</div><div class="line">OK</div><div class="line">192.168.91.146:7000&gt; <span class="built_in">set</span> name sunwukong</div><div class="line">-&gt; Redirected to slot [5798] located at 192.168.91.146:7001</div><div class="line">OK</div><div class="line">192.168.91.146:7001&gt; get foo</div><div class="line">-&gt; Redirected to slot [12182] located at 192.168.91.146:7002</div><div class="line"><span class="string">"bar"</span></div><div class="line">192.168.91.146:7002&gt; get hello</div><div class="line">-&gt; Redirected to slot [866] located at 192.168.91.146:7000</div><div class="line"><span class="string">"world"</span></div><div class="line">192.168.91.146:7000&gt; get name</div><div class="line">-&gt; Redirected to slot [5798] located at 192.168.91.146:7001</div><div class="line"><span class="string">"sunwukong"</span></div><div class="line">192.168.91.146:7001&gt; </div><div class="line"><span class="comment"># 从节点默认不能写入</span></div><div class="line">[root@pseudo-cluster redis-cluster-test]<span class="comment"># ./redis-3.2.13/bin/redis-cli -c -p 7004</span></div><div class="line">127.0.0.1:7004&gt; <span class="built_in">set</span> key001 value001</div><div class="line">-&gt; Redirected to slot [12657] located at 192.168.91.146:7002</div><div class="line">OK</div><div class="line">192.168.91.146:7002&gt; get key001</div><div class="line"><span class="string">"value001"</span></div><div class="line">192.168.91.146:7002&gt;</div></pre></td></tr></table></figure><p>参考：<br><a href="https://github.com/wyt/redis-cluster-test" target="_blank" rel="external">redis-cluster-test</a>，wyt<br><a href="http://www.redis.cn/topics/cluster-tutorial.html" target="_blank" rel="external">cluster-tutorial</a>，redis.cn</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;单台机器搭建一个伪Redis集群，用于测试学习。redis-3.2.13可以使用redis源码自行编译&lt;code&gt;make prifix=/tmp/redis&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&quot;下载redis-cluster-test项目&quot;&gt;&lt;a href=&quot;#下载redis-cluster-test项目&quot; class=&quot;headerlink&quot; title=&quot;下载redis-cluster-test项目&quot;&gt;&lt;/a&gt;下载redis-cluster-test项目&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;# pwd&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster &lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;]&lt;span class=&quot;comment&quot;&gt;# git clone https://github.com/wyt/redis-cluster-test.git&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster bin]&lt;span class=&quot;comment&quot;&gt;# pwd&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/redis-cluster-test/redis-3.2.13/bin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster bin]&lt;span class=&quot;comment&quot;&gt;# chmod +x ./*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test]&lt;span class=&quot;comment&quot;&gt;# pwd&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/redis-cluster-test&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test]&lt;span class=&quot;comment&quot;&gt;# chmod +x shutdown.sh startup.sh&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;安装ruby环境等&quot;&gt;&lt;a href=&quot;#安装ruby环境等&quot; class=&quot;headerlink&quot; title=&quot;安装ruby环境等&quot;&gt;&lt;/a&gt;安装ruby环境等&lt;/h4&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 安装ruby环境&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test] yum install centos-release-scl-rh&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test] yum install rh-ruby23 -y&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 当前session生效&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test] scl &lt;span class=&quot;built_in&quot;&gt;enable&lt;/span&gt; rh-ruby23 bash&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test]&lt;span class=&quot;comment&quot;&gt;# ruby -v&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;ruby 2.3.8p459 (2018-10-18 revision 65136) [x86_64-linux]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@pseudo-cluster redis-cluster-test]&lt;span class=&quot;comment&quot;&gt;# gem install redis&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Fetching: redis-4.1.2.gem (100%)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Successfully installed redis-4.1.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Parsing documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; redis-4.1.2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Installing ri documentation &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; redis-4.1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="缓存" scheme="http://yoursite.com/categories/%E7%BC%93%E5%AD%98/"/>
    
      <category term="Redis" scheme="http://yoursite.com/categories/%E7%BC%93%E5%AD%98/Redis/"/>
    
    
      <category term="缓存" scheme="http://yoursite.com/tags/%E7%BC%93%E5%AD%98/"/>
    
      <category term="Redis" scheme="http://yoursite.com/tags/Redis/"/>
    
      <category term="Cluster" scheme="http://yoursite.com/tags/Cluster/"/>
    
  </entry>
  
  <entry>
    <title>CAP定理</title>
    <link href="http://yoursite.com/2019/07/24/CAP%E5%AE%9A%E7%90%86/"/>
    <id>http://yoursite.com/2019/07/24/CAP定理/</id>
    <published>2019-07-23T16:01:45.000Z</published>
    <updated>2019-08-14T01:19:34.603Z</updated>
    
    <content type="html"><![CDATA[<h4 id="基本内容"><a href="#基本内容" class="headerlink" title="基本内容"></a>基本内容</h4><ul><li><p>Consistency: all nodes see the same data at the same time. 即所有的节点在同一时刻读到同样的数据。</p></li><li><p>Availability: a guarantee that every request receives a response about whether it was successful or failed. 请求无论成功还是失败，都能收到一个响应。</p></li><li><p>Partition-Tolerance: the system continues to operate despite arbitrary message loss or failure of part of the system. 系统仍能运行尽管部分节点出问题或者丢失消息</p></li></ul><h4 id="CAP选择"><a href="#CAP选择" class="headerlink" title="CAP选择"></a>CAP选择</h4><p>分布式系统中不能同时满足C、A、P</p><ul><li><p>CA，加强一致性&amp;可用性，放弃分区容忍性，例如传统单机数据库;</p></li><li><p>AP，加强可用性&amp;分区容忍性，放弃强一致性，例如大多数NoSQL系统;</p></li><li><p>CP，加强一致性&amp;分区容忍性，可用性比较差，例如Zookeeper; </p><p>如果ZooKeeper集群中出现了网络分割的故障（注：由于交换机故障导致交换机底下的子网间不能互访）；那么ZooKeeper会将它们都从自己管理范围中剔除出去，外界就不能访问到这些节点了，即便这些节点本身是“健康”的，可以正常提供服务的；所以导致到达这些节点的请求被丢失了。</p></li></ul><h4 id="BASE理论"><a href="#BASE理论" class="headerlink" title="BASE理论"></a>BASE理论</h4><p>在分布式系统中，一般选择加强可用性和分区容忍性而牺牲一致性。</p><ul><li><p>Basically Available：基本可用，允许分区失败；</p></li><li><p>Soft state：软状态，接受一段时间的状态不同步；</p></li><li><p>Eventually consistent：最终一致，保证最终的数据状态是一致的。</p><p>在没有发生故障的前提下，数据达到一致状态的时间延迟，取决于网络延迟，系统负载和数据复制方案设计等因素。</p></li></ul><p>More info: <a href="https://www.cnblogs.com/jeffwongishandsome/p/talk-about-arch-design-and-load-balance-and-hign-availability-in-system-architecture.html" target="_blank" rel="external">系统架构设计理论与原则、负载均衡及高可用系统设计速记</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;基本内容&quot;&gt;&lt;a href=&quot;#基本内容&quot; class=&quot;headerlink&quot; title=&quot;基本内容&quot;&gt;&lt;/a&gt;基本内容&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Consistency: all nodes see the same data at the same 
      
    
    </summary>
    
      <category term="分布式" scheme="http://yoursite.com/categories/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
    
      <category term="CAP" scheme="http://yoursite.com/tags/CAP/"/>
    
  </entry>
  
  <entry>
    <title>Ansible Playbook安装docker</title>
    <link href="http://yoursite.com/2019/07/11/Ansible%20Playbook%E7%A4%BA%E4%BE%8B/"/>
    <id>http://yoursite.com/2019/07/11/Ansible Playbook示例/</id>
    <published>2019-07-11T05:32:18.000Z</published>
    <updated>2019-07-11T05:36:52.619Z</updated>
    
    <content type="html"><![CDATA[<p>展示一个安装docker示例，Ansible playbook内容如下：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">---</div><div class="line">- hosts: all</div><div class="line">  tasks:</div><div class="line">  - name: Remove docker</div><div class="line">    yum:</div><div class="line">      name: [<span class="string">'docker'</span>, <span class="string">'docker-client'</span>, <span class="string">'docker-client-latest'</span>, <span class="string">'docker-common'</span>, <span class="string">'docker-latest'</span>, <span class="string">'docker-latest-logrotate'</span>, <span class="string">'docker-logrotate'</span>, <span class="string">'docker-selinux'</span>, <span class="string">'docker-engine-selinux'</span>]</div><div class="line">      state: removed</div><div class="line">  - name: Install yum utils</div><div class="line">    yum:</div><div class="line">      name: [<span class="string">'yum-utils'</span>, <span class="string">'device-mapper-persistent-data'</span>, <span class="string">'lvm2'</span>]</div><div class="line">      state: installed</div><div class="line">  - name: <span class="built_in">Set</span> aliyun repo</div><div class="line">    shell: yum-config-manager --add-repo http:<span class="comment">//mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo;yum makecache fast</span></div><div class="line">  - name: Install docker-ce</div><div class="line">    yum: name=docker-ce state=installed</div><div class="line">  - name: Registry mirrors</div><div class="line">    script: ./registry_mirrors.sh</div><div class="line">  - name: After registry mirrors</div><div class="line">    shell: systemctl daemon-reload;systemctl restart docker;systemctl enable docker</div><div class="line">  - name: Show docker version</div><div class="line">    command: docker -v</div><div class="line">    register: result</div><div class="line">  - name: Debug info</div><div class="line">    debug: msg=<span class="string">'&#123;&#123;result.stdout_lines&#125;&#125;'</span></div></pre></td></tr></table></figure><p>registry_mirrors.sh脚本内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/usr/bin/env bash</span></div><div class="line"></div><div class="line">mkdir -p /etc/docker</div><div class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://kc0hk0ee.mirror.aliyuncs.com"</span>]</div><div class="line">&#125;</div><div class="line">EOF</div></pre></td></tr></table></figure><p>执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ansible-playbook install_docker.yml</div></pre></td></tr></table></figure><p>More info: <a href="https://yongtao.wang/2018/10/25/Docker%20install/" target="_blank" rel="external">Docker install</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;展示一个安装docker示例，Ansible playbook内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div
      
    
    </summary>
    
      <category term="ansible" scheme="http://yoursite.com/categories/ansible/"/>
    
    
      <category term="ansible" scheme="http://yoursite.com/tags/ansible/"/>
    
      <category term="playbook" scheme="http://yoursite.com/tags/playbook/"/>
    
  </entry>
  
  <entry>
    <title>Linux下ssh公钥认证</title>
    <link href="http://yoursite.com/2019/07/01/Linux%E4%B8%8Bssh%E5%85%AC%E9%92%A5%E8%AE%A4%E8%AF%81/"/>
    <id>http://yoursite.com/2019/07/01/Linux下ssh公钥认证/</id>
    <published>2019-07-01T11:15:33.000Z</published>
    <updated>2019-07-01T11:15:37.000Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th style="text-align:center">编号</th><th style="text-align:center">机器名</th><th style="text-align:center">IP</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center">ansible-manager</td><td style="text-align:center">192.168.91.140</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center">cluster_001</td><td style="text-align:center">192.168.91.141</td></tr><tr><td style="text-align:center">…</td><td style="text-align:center">…</td><td style="text-align:center">…</td></tr></tbody></table><h4 id="创建密钥对"><a href="#创建密钥对" class="headerlink" title="创建密钥对"></a>创建密钥对</h4><p>在ansible-manager上执行ssh-keygen命令，一路回车。</p><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">[root@ansible-manager .ssh]<span class="comment"># ssh-keygen</span></div><div class="line">Generating public/private rsa key pair.</div><div class="line">Enter file <span class="keyword">in</span> <span class="built_in">which</span> to save the key (/root/.ssh/id_rsa): </div><div class="line">Enter passphrase (empty <span class="keyword">for</span> no passphrase): </div><div class="line">Enter same passphrase again: </div><div class="line">Your identification has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.</div><div class="line">Your public key has been saved <span class="keyword">in</span> /root/.ssh/id_rsa.pub.</div><div class="line">The key fingerprint is:</div><div class="line">SHA256:PQtPisFEFbco9jI1loIXyK7y/xr9n6vp562aQ/OkJJs root@ansible-manager</div><div class="line">The key<span class="string">'s randomart image is:</span></div><div class="line">+---[RSA 2048]----+</div><div class="line">|   . .o.o..      |</div><div class="line">|    oo . + .     |</div><div class="line">|   .. * * .      |</div><div class="line">|    .= * o       |</div><div class="line">|   .  = S +      |</div><div class="line">|. .  ..=+=.o     |</div><div class="line">| o  . o*.=o      |</div><div class="line">|  .  .E.oooo     |</div><div class="line">|   .oo..BB*o.    |</div><div class="line">+----[SHA256]-----+</div><div class="line"></div><div class="line"># 生成密钥对id_rsa &amp; id_rsa.pub，其中id_rsa.pub是公钥。</div><div class="line">[root@ansible-manager .ssh]# ls -lh</div><div class="line">total 8.0K</div><div class="line">-rw-------. 1 root root 1.7K Jul  2 03:25 id_rsa</div><div class="line">-rw-r--r--. 1 root root  402 Jul  2 03:25 id_rsa.pub</div><div class="line">-rw-r--r--. 1 root root    0 Jul  2 03:24 known_hosts</div></pre></td></tr></table></figure><h4 id="发送公钥"><a href="#发送公钥" class="headerlink" title="发送公钥"></a>发送公钥</h4><p>将ansible-manager公钥发送给cluster_001，第一次发送公钥的时候，需要输入密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">[root@ansible-manager .ssh]<span class="comment"># ssh-copy-id -i ./id_rsa.pub "root@192.168.91.141"</span></div><div class="line">/usr/bin/ssh-copy-id: INFO: Source of key(s) to be installed: <span class="string">"./id_rsa.pub"</span></div><div class="line">The authenticity of host <span class="string">'192.168.91.141 (192.168.91.141)'</span> can<span class="string">'t be established.</span></div><div class="line">ECDSA key fingerprint is SHA256:HcrnywII1gZEW3uk2muw+V+JyD0tbedR8hbdvWNrFMM.</div><div class="line">ECDSA key fingerprint is MD5:55:76:c1:5a:f5:ec:f6:3d:74:e7:d3:ec:ab:49:80:4d.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">/usr/bin/ssh-copy-id: INFO: attempting to log in with the new key(s), to filter out any that are already installed</div><div class="line">/usr/bin/ssh-copy-id: INFO: 1 key(s) remain to be installed -- if you are prompted now it is to install the new keys</div><div class="line">root@192.168.91.141's password: </div><div class="line"></div><div class="line">Number of key(s) added: 1</div><div class="line"></div><div class="line">Now try logging into the machine, with:   <span class="string">"ssh 'root@192.168.91.141'"</span></div><div class="line">and check to make sure that only the key(s) you wanted were added.</div></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p>检查被管理机器cluster_001<code>/root/.ssh/authorized_keys</code>中，写入了ansible-manager 公钥内容。ansible-manager使用ssh连接cluster_001:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">[root@ansible-manager .ssh]<span class="comment"># ssh 192.168.91.141</span></div><div class="line">Last login: Tue Jul  2 03:39:14 2019 from 192.168.91.140</div><div class="line">[root@cluster_001 ~]<span class="comment"># hostname</span></div><div class="line">cluster_001</div></pre></td></tr></table></figure><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ol><li>管理机上创建ssh密钥对；</li><li>将管理机公钥分发给被管理机；</li><li>实现互免认证，可在另一台机器上执行上述流程。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;编号&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;机器名&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;IP&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;ansible-manager&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.91.140&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;cluster_001&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;192.168.91.141&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;…&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;创建密钥对&quot;&gt;&lt;a href=&quot;#创建密钥对&quot; class=&quot;headerlink&quot; title=&quot;创建密钥对&quot;&gt;&lt;/a&gt;创建密钥对&lt;/h4&gt;&lt;p&gt;在ansible-manager上执行ssh-keygen命令，一路回车。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
      <category term="ssh" scheme="http://yoursite.com/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>生产环境下的Elasticsearch参数调整</title>
    <link href="http://yoursite.com/2019/06/28/%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84Elasticsearch%E5%8F%82%E6%95%B0%E8%B0%83%E6%95%B4/"/>
    <id>http://yoursite.com/2019/06/28/生产环境下的Elasticsearch参数调整/</id>
    <published>2019-06-28T01:37:00.000Z</published>
    <updated>2019-06-28T01:37:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>开启<code>config/elasticsearch.yml</code>中<code>network.host</code>配置后，ES启动时会切换为生产模式，开发模式下的警告会升级为异常，导致ES节点无法启动。</p><h4 id="禁止swapping"><a href="#禁止swapping" class="headerlink" title="禁止swapping"></a>禁止swapping</h4><p>设置Elasticsearch可锁定的、不被交换出的内存不受限制。编辑<code>config/elasticsearch.yml</code><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置为true</span></div><div class="line">bootstrap.memory_lock: <span class="literal">true</span></div></pre></td></tr></table></figure></p><p>编辑<code>/etc/security/limits.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># elasticsearch用户锁定内存(不会被swap)不受限制</span></div><div class="line">elasticsearch  -  memlock unlimited</div></pre></td></tr></table></figure></p><a id="more"></a><h4 id="增大文件描述符"><a href="#增大文件描述符" class="headerlink" title="增大文件描述符"></a>增大文件描述符</h4><p>编辑<code>/etc/security/limits.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># elasticsearch用户最多打开文件描述符的数量</span></div><div class="line">elasticsearch  -  nofile  65536</div></pre></td></tr></table></figure></p><h4 id="保证足够的线程数"><a href="#保证足够的线程数" class="headerlink" title="保证足够的线程数"></a>保证足够的线程数</h4><p>编辑<code>/etc/security/limits.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置elasticsearch用户最多创建线程数</span></div><div class="line">elasticsearch  -  nproc 4096</div></pre></td></tr></table></figure></p><h4 id="保证足够的虚拟内存"><a href="#保证足够的虚拟内存" class="headerlink" title="保证足够的虚拟内存"></a>保证足够的虚拟内存</h4><p>编辑<code>/etc/sysctl.conf</code>文件，追加下述配置：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">vm.max_map_count=262144</div></pre></td></tr></table></figure></p><h4 id="使设置生效"><a href="#使设置生效" class="headerlink" title="使设置生效"></a>使设置生效</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 加载系统配置参数</span></div><div class="line">[root@elasticstack-server filebeat-6.6.2-nginx]<span class="comment"># sysctl -p</span></div><div class="line">[root@elasticstack-server filebeat-6.6.2-nginx]<span class="comment"># sysctl vm.max_map_count</span></div><div class="line">vm.max_map_count = 262144</div><div class="line"></div><div class="line"><span class="comment"># 切换到elasticsearch用户使ulimit设置生效</span></div><div class="line">[root@elasticstack-server filebeat-6.6.2-nginx]<span class="comment"># su elasticsearch</span></div><div class="line">[elasticsearch@elasticstack-server elasticsearch-6.6.2]$ <span class="built_in">ulimit</span> -a</div><div class="line">core file size          (blocks, -c) 0</div><div class="line">data seg size           (kbytes, -d) unlimited</div><div class="line">scheduling priority             (-e) 0</div><div class="line">file size               (blocks, -f) unlimited</div><div class="line">pending signals                 (-i) 31140</div><div class="line">max locked memory       (kbytes, -l) unlimited</div><div class="line">max memory size         (kbytes, -m) unlimited</div><div class="line">open files                      (-n) 65536</div><div class="line">pipe size            (512 bytes, -p) 8</div><div class="line">POSIX message queues     (bytes, -q) 819200</div><div class="line">real-time priority              (-r) 0</div><div class="line">stack size              (kbytes, -s) 8192</div><div class="line">cpu time               (seconds, -t) unlimited</div><div class="line">max user processes              (-u) 4096</div><div class="line">virtual memory          (kbytes, -v) unlimited</div><div class="line">file locks                      (-x) unlimited</div><div class="line"></div><div class="line"><span class="comment"># 启动Elasticsearch</span></div><div class="line">[elasticsearch@elasticstack-server elasticsearch-6.6.2]$ ./bin/elasticsearch -d -p pid</div></pre></td></tr></table></figure><h4 id="检查设置"><a href="#检查设置" class="headerlink" title="检查设置"></a>检查设置</h4><p>Elasticsearch启动成功后，检查设置项：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 设置成功</span></div><div class="line">[root@elasticstack-server ~]<span class="comment"># curl -X GET "localhost:9200/_nodes?filter_path=**.mlockall"</span></div><div class="line">&#123;<span class="string">"nodes"</span>:&#123;<span class="string">"yW_SUaDnS6WED2QPm5y4TA"</span>:&#123;<span class="string">"process"</span>:&#123;<span class="string">"mlockall"</span>:<span class="literal">true</span>&#125;&#125;&#125;&#125;</div><div class="line"></div><div class="line">[root@elasticstack-server ~]<span class="comment"># curl -X GET "localhost:9200/_nodes/stats/process?filter_path=**.max_file_descriptors"</span></div><div class="line">&#123;<span class="string">"nodes"</span>:&#123;<span class="string">"yW_SUaDnS6WED2QPm5y4TA"</span>:&#123;<span class="string">"process"</span>:&#123;<span class="string">"max_file_descriptors"</span>:65536&#125;&#125;&#125;&#125;</div></pre></td></tr></table></figure></p><p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/6.2/system-config.html" target="_blank" rel="external">https://www.elastic.co/guide/en/elasticsearch/reference/6.2/system-config.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开启&lt;code&gt;config/elasticsearch.yml&lt;/code&gt;中&lt;code&gt;network.host&lt;/code&gt;配置后，ES启动时会切换为生产模式，开发模式下的警告会升级为异常，导致ES节点无法启动。&lt;/p&gt;
&lt;h4 id=&quot;禁止swapping&quot;&gt;&lt;a href=&quot;#禁止swapping&quot; class=&quot;headerlink&quot; title=&quot;禁止swapping&quot;&gt;&lt;/a&gt;禁止swapping&lt;/h4&gt;&lt;p&gt;设置Elasticsearch可锁定的、不被交换出的内存不受限制。编辑&lt;code&gt;config/elasticsearch.yml&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 设置为true&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;bootstrap.memory_lock: &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/security/limits.conf&lt;/code&gt;文件，追加下述配置：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# elasticsearch用户锁定内存(不会被swap)不受限制&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;elasticsearch  -  memlock unlimited&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="elasticsearch" scheme="http://yoursite.com/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://yoursite.com/tags/elasticsearch/"/>
    
  </entry>
  
  <entry>
    <title>Docker swarm删除节点</title>
    <link href="http://yoursite.com/2019/05/15/Docker%20swarm%E5%88%A0%E9%99%A4%E8%8A%82%E7%82%B9/"/>
    <id>http://yoursite.com/2019/05/15/Docker swarm删除节点/</id>
    <published>2019-05-15T03:31:49.000Z</published>
    <updated>2019-05-15T03:31:54.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Docker-swarm删除节点"><a href="#Docker-swarm删除节点" class="headerlink" title="Docker swarm删除节点"></a>Docker swarm删除节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 在管理节点上先排空节点</span></div><div class="line">docker node update --availability drain yyxh5zbei71kq7c5tadoq19ri</div><div class="line"><span class="comment"># 移除节点</span></div><div class="line">docker node rm yyxh5zbei71kq7c5tadoq19ri</div><div class="line"><span class="comment"># 或者强制删除</span></div><div class="line">docker node rm --force yyxh5zbei71kq7c5tadoq19ri</div><div class="line"></div><div class="line"><span class="comment"># 在所要删除的节点上执行</span></div><div class="line">docker swarm leave</div><div class="line"><span class="comment"># 或强制离开</span></div><div class="line">docker swarm leave --force</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Docker-swarm删除节点&quot;&gt;&lt;a href=&quot;#Docker-swarm删除节点&quot; class=&quot;headerlink&quot; title=&quot;Docker swarm删除节点&quot;&gt;&lt;/a&gt;Docker swarm删除节点&lt;/h3&gt;&lt;figure class=&quot;hi
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>网络IO之同步、异步 &amp; 阻塞、非阻塞</title>
    <link href="http://yoursite.com/2019/03/08/%E7%BD%91%E7%BB%9CIO%E4%B9%8B%E5%90%8C%E6%AD%A5%E3%80%81%E5%BC%82%E6%AD%A5%20&amp;%20%E9%98%BB%E5%A1%9E%E3%80%81%E9%9D%9E%E9%98%BB%E5%A1%9E/"/>
    <id>http://yoursite.com/2019/03/08/网络IO之同步、异步 &amp; 阻塞、非阻塞/</id>
    <published>2019-03-08T06:41:27.000Z</published>
    <updated>2019-03-08T06:41:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>同步(Synchronous)</p><p>A synchronous I/O operation causes the requesting process to be blocked until that I/O operation completes; (同步I/O操作导致请求进程被阻塞，直到I/O操作完成)</p><p>异步(Asynchronous)</p><p>An asynchronous I/O operation does not cause the requesting process to be blocked; (异步I/O操作不会阻塞请求进程)</p><p>注意Non-blocking IO在执行recvfrom这个系统调用的时候，如果kernel的数据没有准备好，不会block进程；如果kernel数据准备好了，recvfrom会将数据从内核空间拷贝到用户空间，在这段时间内，进程还是被block的。</p><p>阻塞(Blocking)</p><p>阻塞调用是指调用结果返回之前，当前线程会被挂起。</p><p>非阻塞(Non-blocking)</p><p>非阻塞调用指在不能立刻得到结果之前，该调用不会阻塞当前线程。</p><p><a href="http://www.rowkey.me/blog/2016/01/18/io-model/" target="_blank" rel="external">http://www.rowkey.me/blog/2016/01/18/io-model/</a><br><a href="https://baiweiblog.wordpress.com/tag/non-blocking/" target="_blank" rel="external">https://baiweiblog.wordpress.com/tag/non-blocking/</a><br><a href="https://www.zhihu.com/question/19732473/answer/20851256" target="_blank" rel="external">https://www.zhihu.com/question/19732473/answer/20851256</a><br><a href="https://blog.csdn.net/historyasamirror/article/details/5778378" target="_blank" rel="external">https://blog.csdn.net/historyasamirror/article/details/5778378</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;同步(Synchronous)&lt;/p&gt;
&lt;p&gt;A synchronous I/O operation causes the requesting process to be blocked until that I/O operation completes; (同步I/O
      
    
    </summary>
    
    
      <category term="OS" scheme="http://yoursite.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Git版本回退</title>
    <link href="http://yoursite.com/2019/03/04/Git%E7%89%88%E6%9C%AC%E5%9B%9E%E9%80%80/"/>
    <id>http://yoursite.com/2019/03/04/Git版本回退/</id>
    <published>2019-03-04T07:39:00.000Z</published>
    <updated>2019-03-04T07:40:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>改动未提交至远程仓库的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 将HEAD指向commit_id</span></div><div class="line">[root@localhost ~]<span class="comment"># git reset --hard commit_id</span></div></pre></td></tr></table></figure><p>改动已提交至远程仓库的情况</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># revert是放弃指定提交的修改，会生成一次新的提交，需要填写注释，历史记录都在；而reset是指将HEAD指针指到指定提交;</span></div><div class="line">[root@localhost ~]<span class="comment"># git revert HEAD</span></div><div class="line">[root@localhost ~]<span class="comment"># git push origin master</span></div></pre></td></tr></table></figure><a id="more"></a><p><a href="https://segmentfault.com/q/1010000000140446" target="_blank" rel="external">https://segmentfault.com/q/1010000000140446</a><br><a href="https://blog.csdn.net/yxlshk/article/details/79944535" target="_blank" rel="external">https://blog.csdn.net/yxlshk/article/details/79944535</a><br><a href="https://www.cnblogs.com/iloveyou-sky/p/6534409.html" target="_blank" rel="external">https://www.cnblogs.com/iloveyou-sky/p/6534409.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;改动未提交至远程仓库的情况&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 将HEAD指向commit_id&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# git reset --hard commit_id&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;改动已提交至远程仓库的情况&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# revert是放弃指定提交的修改，会生成一次新的提交，需要填写注释，历史记录都在；而reset是指将HEAD指针指到指定提交;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# git revert HEAD&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[root@localhost ~]&lt;span class=&quot;comment&quot;&gt;# git push origin master&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>Docker Swarm节点维护标签</title>
    <link href="http://yoursite.com/2018/10/30/Docker%20Swarm%E8%8A%82%E7%82%B9%E7%BB%B4%E6%8A%A4%E6%A0%87%E7%AD%BE/"/>
    <id>http://yoursite.com/2018/10/30/Docker Swarm节点维护标签/</id>
    <published>2018-10-30T07:50:00.000Z</published>
    <updated>2018-10-30T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Swarm节点维护标签"><a href="#Swarm节点维护标签" class="headerlink" title="Swarm节点维护标签"></a>Swarm节点维护标签</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">[root@docker_001 ~]<span class="comment"># docker node ls</span></div><div class="line">ID                            HOSTNAME            STATUS              AVAILABILITY        MANAGER STATUS      ENGINE VERSION</div><div class="line">lw72u2jd7xi1xagw94cmd86kk *   docker_001          Ready               Active              Leader              18.06.1-ce</div><div class="line">2igmbyfampcduad32ustl00y8     docker_003          Ready               Active                                  18.06.1-ce</div><div class="line">wudald9nltt9mq9jo9aau3tvf     docker_005          Ready               Active                                  18.06.1-ce</div><div class="line"></div><div class="line"><span class="comment"># 增加一个type=dop的标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node update --label-add type=dop lw72u2jd7xi1xagw94cmd86kk</span></div><div class="line">lw72u2jd7xi1xagw94cmd86kk</div><div class="line"></div><div class="line"><span class="comment"># 查看标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node inspect lw72u2jd7xi1xagw94cmd86kk --pretty</span></div><div class="line">ID:lw72u2jd7xi1xagw94cmd86kk</div><div class="line">Labels:</div><div class="line"> - <span class="built_in">type</span>=dop</div><div class="line">Hostname:              docker_001</div><div class="line">Joined at:             2018-10-24 13:52:32.919572847 +0000 utc</div><div class="line">...</div><div class="line"></div><div class="line"><span class="comment"># 移除标签</span></div><div class="line">[root@docker_001 ~]<span class="comment"># docker node update --label-rm type lw72u2jd7xi1xagw94cmd86kk</span></div><div class="line">lw72u2jd7xi1xagw94cmd86kk</div><div class="line">[root@docker_001 ~]<span class="comment"># docker node inspect lw72u2jd7xi1xagw94cmd86kk --pretty</span></div><div class="line">ID:lw72u2jd7xi1xagw94cmd86kk</div><div class="line">Hostname:              docker_001</div><div class="line">Joined at:             2018-10-24 13:52:32.919572847 +0000 utc</div></pre></td></tr></table></figure><p><a href="https://docs.docker.com/engine/swarm/manage-nodes/#add-or-remove-label-metadata" target="_blank" rel="external">Add-or-remove-label-metadata</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Swarm节点维护标签&quot;&gt;&lt;a href=&quot;#Swarm节点维护标签&quot; class=&quot;headerlink&quot; title=&quot;Swarm节点维护标签&quot;&gt;&lt;/a&gt;Swarm节点维护标签&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Deploy a stack to a swarm</title>
    <link href="http://yoursite.com/2018/10/30/Deploy%20a%20stack%20to%20a%20swarm/"/>
    <id>http://yoursite.com/2018/10/30/Deploy a stack to a swarm/</id>
    <published>2018-10-30T05:38:00.000Z</published>
    <updated>2018-10-30T05:38:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://docs.docker.com/engine/swarm/stack-deploy/" target="_blank" rel="external">Deploy a stack to a swarm</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://docs.docker.com/engine/swarm/stack-deploy/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deploy a stack to a swarm&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Powershell会话中设置环境变量</title>
    <link href="http://yoursite.com/2018/10/30/Powershell%E4%BC%9A%E8%AF%9D%E4%B8%AD%E8%AE%BE%E7%BD%AE%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
    <id>http://yoursite.com/2018/10/30/Powershell会话中设置环境变量/</id>
    <published>2018-10-30T02:30:00.000Z</published>
    <updated>2018-10-30T02:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Powershell会话中设置环境变量"><a href="#Powershell会话中设置环境变量" class="headerlink" title="Powershell会话中设置环境变量"></a>Powershell会话中设置环境变量</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">PS C:\personal\idea\cloud-cook&gt; ls env:DOCKER_HOST</div><div class="line"></div><div class="line">Name                           Value</div><div class="line">----                           -----</div><div class="line">DOCKER_HOST                    tcp://192.168.1.114:2375</div><div class="line"></div><div class="line"></div><div class="line">PS C:\personal\idea\cloud-cook&gt; <span class="variable">$env</span>:DOCKER_HOST=<span class="string">"tcp://192.168.21.129:2375"</span>   <span class="comment"># 在当前会话中创建DOCKER_HOST环境变量</span></div><div class="line">PS C:\personal\idea\cloud-cook&gt; ls env:DOCKER_HOST</div><div class="line"></div><div class="line">Name                           Value</div><div class="line">----                           -----</div><div class="line">DOCKER_HOST                    tcp://192.168.21.129:2375</div></pre></td></tr></table></figure><p>More info: <a href="https://www.pstips.net/powershell-environment-variables.html" target="_blank" rel="external">Powershell环境变量</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Powershell会话中设置环境变量&quot;&gt;&lt;a href=&quot;#Powershell会话中设置环境变量&quot; class=&quot;headerlink&quot; title=&quot;Powershell会话中设置环境变量&quot;&gt;&lt;/a&gt;Powershell会话中设置环境变量&lt;/h3&gt;&lt;figu
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker Swarm 一、 概述</title>
    <link href="http://yoursite.com/2018/10/26/Docker%20Swarm%20%E4%B8%80%E3%80%81%20%E6%A6%82%E8%BF%B0/"/>
    <id>http://yoursite.com/2018/10/26/Docker Swarm 一、 概述/</id>
    <published>2018-10-26T11:36:00.000Z</published>
    <updated>2018-10-26T11:36:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>自docker engine 1.12引入swarm模式后，可由一个或多个docker引擎组成一个集群，称之为swarm，一个swarm由一个或多个节点组成。</p><h3 id="关键概念"><a href="#关键概念" class="headerlink" title="关键概念"></a>关键概念</h3><h4 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h4><p>swarm节点分为两种类型：<code>manager</code>和<code>worker</code>，</p><p>Manager节点维护集群状态，调度服务，提供swarm模式下的API服务等，多个Manager节点只有一个leader执行编排任务；</p><p>Worker节点接收并执行从Manager节点分派的任务，默认情况下Manager节点同时也是Worker节点；</p><h4 id="服务"><a href="#服务" class="headerlink" title="服务"></a>服务</h4><p>服务是对在管理节点和工作节点执行任务的定义，创建服务时可以指定具体使用的镜像和容器中执行的命令等。</p><p>服务有两种模式:<code>replicated</code> 和 <code>global</code></p><h4 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h4><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><p><a href="https://docs.docker.com/engine/swarm/" target="_blank" rel="external">Swarm mode overview</a><br><a href="https://docs.docker.com/engine/swarm/key-concepts/" target="_blank" rel="external">Swarm mode key concepts</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自docker engine 1.12引入swarm模式后，可由一个或多个docker引擎组成一个集群，称之为swarm，一个swarm由一个或多个节点组成。&lt;/p&gt;
&lt;h3 id=&quot;关键概念&quot;&gt;&lt;a href=&quot;#关键概念&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
      <category term="docker swarm" scheme="http://yoursite.com/tags/docker-swarm/"/>
    
  </entry>
  
  <entry>
    <title>Docker install</title>
    <link href="http://yoursite.com/2018/10/25/Docker%20install/"/>
    <id>http://yoursite.com/2018/10/25/Docker install/</id>
    <published>2018-10-25T05:29:00.000Z</published>
    <updated>2018-10-25T05:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Uninstall-old-versions"><a href="#Uninstall-old-versions" class="headerlink" title="Uninstall old versions"></a>Uninstall old versions</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum remove docker \</span></div><div class="line">  docker-client \</div><div class="line">  docker-client-latest \</div><div class="line">  docker-common \</div><div class="line">  docker-latest \</div><div class="line">  docker-latest-logrotate \</div><div class="line">  docker-logrotate \</div><div class="line">  docker-selinux \</div><div class="line">  docker-engine-selinux \</div><div class="line">  docker-engine</div></pre></td></tr></table></figure><a id="more"></a><h3 id="Install-Docker-CE"><a href="#Install-Docker-CE" class="headerlink" title="Install Docker CE"></a>Install Docker CE</h3><h4 id="Install-required-packages"><a href="#Install-required-packages" class="headerlink" title="Install required packages"></a>Install required packages</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum install -y yum-utils \</span></div><div class="line">  device-mapper-persistent-data \</div><div class="line">  lvm2</div></pre></td></tr></table></figure><h4 id="Use-the-following-command-to-set-up-the-stable-repository"><a href="#Use-the-following-command-to-set-up-the-stable-repository" class="headerlink" title="Use the following command to set up the stable repository"></a>Use the following command to set up the stable repository</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 注意设置阿里云repo</span></div><div class="line">[root@docker_007 ~]<span class="comment"># yum-config-manager \</span></div><div class="line">    --add-repo \</div><div class="line">    http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</div><div class="line">[root@docker_007 ~]<span class="comment"># yum makecache fast</span></div></pre></td></tr></table></figure><h4 id="Install-Docker-CE-1"><a href="#Install-Docker-CE-1" class="headerlink" title="Install Docker CE"></a>Install Docker CE</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># yum install docker-ce</span></div><div class="line">[root@docker_007 ~]<span class="comment"># docker -v</span></div><div class="line">Docker version 18.06.1-ce, build e68fc7a</div></pre></td></tr></table></figure><h5 id="安装指定版本"><a href="#安装指定版本" class="headerlink" title="安装指定版本"></a>安装指定版本</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">[root@dlink-72 docker]<span class="comment"># yum list docker-ce --showduplicates | sort -r</span></div><div class="line">Repodata is over 2 weeks old. Install yum-cron? Or run: yum makecache fast</div><div class="line"> * updates: mirrors.huaweicloud.com</div><div class="line">Loading mirror speeds from cached hostfile</div><div class="line">Loaded plugins: fastestmirror</div><div class="line">Installed Packages</div><div class="line"> * extras: mirror.jdcloud.com</div><div class="line">docker-ce.x86_64            3:18.09.0-3.el7                    docker-ce-stable </div><div class="line">docker-ce.x86_64            18.06.1.ce-3.el7                   docker-ce-stable </div><div class="line">docker-ce.x86_64            18.06.1.ce-3.el7                   @docker-ce-stable</div><div class="line">docker-ce.x86_64            18.06.0.ce-3.el7                   docker-ce-stable </div><div class="line">docker-ce.x86_64            18.03.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            18.03.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.12.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.12.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.09.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.09.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.06.2.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.06.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.06.0.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.3.ce-1.el7                   docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.2.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.1.ce-1.el7.centos            docker-ce-stable </div><div class="line">docker-ce.x86_64            17.03.0.ce-1.el7.centos            docker-ce-stable </div><div class="line"> * base: mirrors.tuna.tsinghua.edu.cn</div><div class="line">Available Packages</div><div class="line">[root@dlink-72 docker]<span class="comment"># yum install docker-ce-18.06.1.ce-3.el7</span></div></pre></td></tr></table></figure><h4 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h4><p>使用阿里云Docker镜像加速器，进入阿里云控制台查看配置。<a href="https://cr.console.aliyun.com/cn-hangzhou/mirrors" target="_blank" rel="external">https://cr.console.aliyun.com/cn-hangzhou/mirrors</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">mkdir -p /etc/docker</div><div class="line">tee /etc/docker/daemon.json &lt;&lt;-<span class="string">'EOF'</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"registry-mirrors"</span>: [<span class="string">"https://xxxxx.mirror.aliyuncs.com"</span>]</div><div class="line">&#125;</div><div class="line">EOF</div><div class="line">systemctl daemon-reload</div><div class="line">systemctl restart docker</div></pre></td></tr></table></figure><h4 id="Start-docker"><a href="#Start-docker" class="headerlink" title="Start docker"></a>Start docker</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 启动docker服务，并保持开机自启动</span></div><div class="line">[root@docker_007 ~]<span class="comment"># systemctl start docker</span></div><div class="line">[root@docker_007 ~]<span class="comment"># systemctl enable docker</span></div></pre></td></tr></table></figure><h4 id="远程访问"><a href="#远程访问" class="headerlink" title="远程访问"></a>远程访问</h4><p>参考<a href="https://success.docker.com/article/how-do-i-enable-the-remote-api-for-dockerd" target="_blank" rel="external">How do I enable the remote API for dockerd</a></p><p>注意关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 查看防火墙状态</span></div><div class="line">firewall-cmd --state</div><div class="line"><span class="comment"># 停止firewall</span></div><div class="line">systemctl stop firewalld.service</div><div class="line"><span class="comment"># 禁止firewall开机启动</span></div><div class="line">systemctl <span class="built_in">disable</span> firewalld.service</div></pre></td></tr></table></figure><h4 id="查看docker服务日志"><a href="#查看docker服务日志" class="headerlink" title="查看docker服务日志"></a>查看docker服务日志</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">[root@docker_007 ~]<span class="comment"># journalctl -ru docker.service</span></div><div class="line"><span class="comment">#可以指定日期范围</span></div><div class="line">[root@docker_007 ~]<span class="comment"># journalctl -ru docker.service --since="2019-08-25 16:20:00" --until="2019-08-25 16:30:00"</span></div></pre></td></tr></table></figure><h4 id="其他组件"><a href="#其他组件" class="headerlink" title="其他组件"></a>其他组件</h4><p>docker compose<br><a href="https://docs.docker.com/compose/install/" target="_blank" rel="external">https://docs.docker.com/compose/install/</a></p><p>docker machine<br><a href="https://docs.docker.com/machine/install-machine/" target="_blank" rel="external">https://docs.docker.com/machine/install-machine/</a></p><p><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="external">Get Docker CE for CentOS</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Uninstall-old-versions&quot;&gt;&lt;a href=&quot;#Uninstall-old-versions&quot; class=&quot;headerlink&quot; title=&quot;Uninstall old versions&quot;&gt;&lt;/a&gt;Uninstall old versions&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[root@docker_007 ~]&lt;span class=&quot;comment&quot;&gt;# yum remove docker \&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-client \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-client-latest \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-common \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-latest \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-latest-logrotate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-logrotate \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-selinux \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-engine-selinux \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  docker-engine&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="docker" scheme="http://yoursite.com/categories/docker/"/>
    
    
      <category term="docker" scheme="http://yoursite.com/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Gitflow工作流[转载]</title>
    <link href="http://yoursite.com/2018/10/08/Gitflow%E5%B7%A5%E4%BD%9C%E6%B5%81%5B%E8%BD%AC%E8%BD%BD%5D/"/>
    <id>http://yoursite.com/2018/10/08/Gitflow工作流[转载]/</id>
    <published>2018-10-08T10:04:00.000Z</published>
    <updated>2018-10-08T10:04:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>转载：<a href="https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-gitflow.md" target="_blank" rel="external">Gitflow工作流</a>，李鼎</p><a id="more"></a><ul><li><a href="#工作方式">工作方式</a><ul><li><a href="#历史分支">历史分支</a></li><li><a href="#功能分支">功能分支</a></li><li><a href="#发布分支">发布分支</a></li><li><a href="#维护分支">维护分支</a></li></ul></li><li><a href="#示例">示例</a><ul><li><a href="#创建开发分支">创建开发分支</a></li><li><a href="#小红和小明开始开发新功能">小红和小明开始开发新功能</a></li><li><a href="#小红完成功能开发">小红完成功能开发</a></li><li><a href="#小红开始准备发布">小红开始准备发布</a></li><li><a href="#小红完成发布">小红完成发布</a></li><li><a href="#最终用户发现`Bug`">最终用户发现<code>Bug</code></a></li></ul></li><li><a href="#下一站">下一站</a></li></ul><p>这节介绍的<a href="http://nvie.com/posts/a-successful-git-branching-model/" target="_blank" rel="external"><code>Gitflow</code>工作流</a>借鉴自在<a href="http://nvie.com/" target="_blank" rel="external">nvie</a>的<em>Vincent Driessen</em>。</p><p><code>Gitflow</code>工作流定义了一个围绕项目发布的严格分支模型。虽然比<a href="workflow-feature-branch.md">功能分支工作流</a>复杂几分，但提供了用于一个健壮的用于管理大型项目的框架。</p><p><code>Gitflow</code>工作流没有用超出功能分支工作流的概念和命令，而是为不同的分支分配一个很明确的角色，并定义分支之间如何和什么时候进行交互。<br>除了使用功能分支，在做准备、维护和记录发布也使用各自的分支。<br>当然你可以用上功能分支工作流所有的好处：<code>Pull Requests</code>、隔离实验性开发和更高效的协作。</p><h2 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式 "></a>工作方式 </h2><p><code>Gitflow</code>工作流仍然用中央仓库作为所有开发者的交互中心。和其它的工作流一样，开发者在本地工作并<code>push</code>分支到要中央仓库中。</p><h3 id="历史分支"><a href="#历史分支" class="headerlink" title="历史分支"></a>历史分支</h3><p>相对使用仅有的一个<code>master</code>分支，<code>Gitflow</code>工作流使用2个分支来记录项目的历史。<code>master</code>分支存储了正式发布的历史，而<code>develop</code>分支作为功能的集成分支。<br>这样也方便<code>master</code>分支上的所有提交分配一个版本号。</p><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-1historical.png" alt=""></p><p>剩下要说明的问题围绕着这2个分支的区别展开。</p><h3 id="功能分支"><a href="#功能分支" class="headerlink" title="功能分支"></a>功能分支</h3><p>每个新功能位于一个自己的分支，这样可以<a href="https://www.atlassian.com/git/tutorials/syncing#git-push" target="_blank" rel="external"><code>push</code>到中央仓库以备份和协作</a>。<br>但功能分支不是从<code>master</code>分支上拉出新分支，而是使用<code>develop</code>分支作为父分支。当新功能完成时，<a href="https://www.atlassian.com/git/tutorials/git-merge" target="_blank" rel="external">合并回<code>develop</code>分支</a>。<br>新功能提交应该从不直接与<code>master</code>分支交互。</p><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-2feature.png" alt=""></p><p>注意，从各种含义和目的上来看，功能分支加上<code>develop</code>分支就是功能分支工作流的用法。但<code>Gitflow</code>工作流没有止步于此。</p><h3 id="发布分支"><a href="#发布分支" class="headerlink" title="发布分支"></a>发布分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-3release.png" alt=""></p><p>一旦<code>develop</code>分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从<code>develop</code>分支上<code>fork</code>一个发布分支。<br>新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上——<br>这个分支只应该做<code>Bug</code>修复、文档生成和其它面向发布任务。<br>一旦对外发布的工作都完成了，发布分支合并到<code>master</code>分支并分配一个版本号打好<code>Tag</code>。<br>另外，这些从新建发布分支以来的做的修改要合并回<code>develop</code>分支。</p><p>使用一个用于发布准备的专门分支，使得一个团队可以在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。<br>这也打造定义良好的开发阶段（比如，可以很轻松地说，『这周我们要做准备发布版本4.0』，并且在仓库的目录结构中可以实际看到）。</p><p>常用的分支约定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">用于新建发布分支的分支: develop</div><div class="line">用于合并的分支: master</div><div class="line">分支命名: release-* 或 release/*</div></pre></td></tr></table></figure><h3 id="维护分支"><a href="#维护分支" class="headerlink" title="维护分支"></a>维护分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-4maintenance.png" alt=""></p><p>维护分支或说是热修复（<code>hotfix</code>）分支用于生成快速给产品发布版本（<code>production releases</code>）打补丁，这是唯一可以直接从<code>master</code>分支<code>fork</code>出来的分支。<br>修复完成，修改应该马上合并回<code>master</code>分支和<code>develop</code>分支（当前的发布分支），<code>master</code>分支应该用新的版本号打好<code>Tag</code>。</p><p>为<code>Bug</code>修复使用专门分支，让团队可以处理掉问题而不用打断其它工作或是等待下一个发布循环。<br>你可以把维护分支想成是一个直接在<code>master</code>分支上处理的临时发布。</p><h2 id="示例"><a href="#示例" class="headerlink" title="示例 "></a>示例 </h2><p>下面的示例演示本工作流如何用于管理单个发布循环。假设你已经创建了一个中央仓库。</p><h3 id="创建开发分支"><a href="#创建开发分支" class="headerlink" title="创建开发分支"></a>创建开发分支</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-5createdev.png" alt=""></p><p>第一步为<code>master</code>分支配套一个<code>develop</code>分支。简单来做可以<a href="https://www.atlassian.com/git/tutorials/using-branches#git-branch" target="_blank" rel="external">本地创建一个空的<code>develop</code>分支</a>，<code>push</code>到服务器上：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git branch develop</div><div class="line">git push -u origin develop</div></pre></td></tr></table></figure><p>以后这个分支将会包含了项目的全部历史，而<code>master</code>分支将只包含了部分历史。其它开发者这时应该<a href="https://www.atlassian.com/git/tutorials/setting-up-a-repository#git-clone" target="_blank" rel="external">克隆中央仓库</a>，建好<code>develop</code>分支的跟踪分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">git <span class="built_in">clone</span> ssh://user@host/path/to/repo.git</div><div class="line">git checkout -b develop origin/develop</div><div class="line"></div><div class="line"><span class="comment">#【译注】当没有本地分支 develop 时，</span></div><div class="line"><span class="comment"># 最后一条命令，我使用更简单的 git checkout develop</span></div><div class="line"><span class="comment"># 会自动 把 远程分支origin/develop 检出成 本地分支 develop</span></div></pre></td></tr></table></figure><p>现在每个开发都有了这些历史分支的本地拷贝。</p><h3 id="小红和小明开始开发新功能"><a href="#小红和小明开始开发新功能" class="headerlink" title="小红和小明开始开发新功能"></a>小红和小明开始开发新功能</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-6maryjohnbeginnew.png" alt=""></p><p>这个示例中，小红和小明开始各自的功能开发。他们需要为各自的功能创建相应的分支。新分支不是基于<code>master</code>分支，而是应该<a href="https://www.atlassian.com/git/tutorials/using-branches#git-checkout" target="_blank" rel="external">基于<code>develop</code>分支</a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b some-feature develop</div></pre></td></tr></table></figure><p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">git status</div><div class="line">git add &lt;some-file&gt;</div><div class="line">git commit</div></pre></td></tr></table></figure></p><h3 id="小红完成功能开发"><a href="#小红完成功能开发" class="headerlink" title="小红完成功能开发"></a>小红完成功能开发</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-7maryfinishes.png" alt=""></p><p>添加了提交后，小红觉得她的功能OK了。如果团队使用<code>Pull Requests</code>，这时候可以发起一个用于合并到<code>develop</code>分支。<br>否则她可以直接合并到她本地的<code>develop</code>分支后<code>push</code>到中央仓库：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 拉取远程的develop分支，并且当前分支（本地分支some-feature）合并上远程分支develop</span></div><div class="line">git pull origin develop</div><div class="line">git checkout develop</div><div class="line"><span class="comment"># 本地分支some-feature合并上develop</span></div><div class="line"><span class="comment">#【注意】这个分支已经有远程的develop修改了，所以本地develop无需再做远程拉取的操作</span></div><div class="line">git merge some-feature</div><div class="line">git push</div><div class="line"><span class="comment"># 删除本地分支</span></div><div class="line">git branch -d some-feature</div><div class="line"></div><div class="line"><span class="comment">#【译注】上面的命令注释为译者添加，以方便理解</span></div><div class="line"><span class="comment"># 更多说明参见 Issue #18</span></div></pre></td></tr></table></figure><p>第一条命令在合并功能前确保<code>develop</code>分支是最新的。注意，功能决不应该直接合并到<code>master</code>分支。<br>冲突解决方法和<a href="workflow-centralized.md">集中式工作流</a>一样。</p><h3 id="小红开始准备发布"><a href="#小红开始准备发布" class="headerlink" title="小红开始准备发布"></a>小红开始准备发布</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-8maryprepsrelease.png" alt=""></p><p>这个时候小明正在实现他的功能，小红开始准备她的第一个项目正式发布。<br>像功能开发一样，她用一个新的分支来做发布准备。这一步也确定了发布的版本号：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">git checkout -b release-0.1 develop</div></pre></td></tr></table></figure><p>这个分支是清理发布、执行所有测试、更新文档和其它为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。</p><p>只要小红创建这个分支并<code>push</code>到中央仓库，这个发布就是功能冻结的。任何不在<code>develop</code>分支中的新功能都推到下个发布循环中。</p><h3 id="小红完成发布"><a href="#小红完成发布" class="headerlink" title="小红完成发布"></a>小红完成发布</h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-release-cycle-9maryfinishes.png" alt=""></p><p>一旦准备好了对外发布，小红合并修改到<code>master</code>分支和<code>develop</code>分支上，删除发布分支。合并回<code>develop</code>分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。<br>另外，如果小红的团队要求<code>Code Review</code>，这是一个发起<code>Pull Request</code>的理想时机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">git checkout master</div><div class="line">git merge release-0.1</div><div class="line">git push</div><div class="line">git checkout develop</div><div class="line">git merge release-0.1</div><div class="line">git push</div><div class="line">git branch -d release-0.1</div></pre></td></tr></table></figure><p>发布分支是作为功能开发（<code>develop</code>分支）和对外发布（<code>master</code>分支）间的缓冲。只要有合并到<code>master</code>分支，就应该打好<code>Tag</code>以方便跟踪。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">git tag -a 0.1 -m <span class="string">"Initial public release"</span> master</div><div class="line">git push --tags</div></pre></td></tr></table></figure><p><code>Git</code>有提供各种勾子（<code>hook</code>），即仓库有事件发生时触发执行的脚本。<br>可以配置一个勾子，在你<code>push</code>中央仓库的<code>master</code>分支时，自动构建好对外发布。</p><h3 id="最终用户发现Bug"><a href="#最终用户发现Bug" class="headerlink" title="最终用户发现Bug"></a>最终用户发现<code>Bug</code></h3><p><img src="https://objects.yongtao.wang/images/20181008/git-workflow-gitflow-enduserbug.png" alt=""></p><p>对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个<code>Ticket</code>抱怨当前版本的一个<code>Bug</code>。<br>为了处理<code>Bug</code>，小红（或小明）从<code>master</code>分支上拉出了一个维护分支，提交修改以解决问题，然后直接合并回<code>master</code>分支：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">git checkout -b issue-<span class="comment">#001 master</span></div><div class="line"><span class="comment"># Fix the bug</span></div><div class="line">git checkout master</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div></pre></td></tr></table></figure><p>就像发布分支，维护分支中新加这些重要修改需要包含到<code>develop</code>分支中，所以小红要执行一个合并操作。然后就可以安全地<a href="https://www.atlassian.com/git/tutorials/using-branches#git-branch" target="_blank" rel="external">删除这个分支</a>了：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">git checkout develop</div><div class="line">git merge issue-<span class="comment">#001</span></div><div class="line">git push</div><div class="line">git branch -d issue-<span class="comment">#001</span></div></pre></td></tr></table></figure><h2 id="下一站"><a href="#下一站" class="headerlink" title="下一站 "></a>下一站 </h2><p>到了这里，但愿你对集中式工作流、功能分支工作流和<code>Gitflow</code>工作流已经感觉很舒适了。<br>你应该也牢固的掌握了本地仓库的潜能，<code>push</code>/<code>pull</code>模式和<code>Git</code>健壮的分支和合并模型。</p><p>记住，这里演示的工作流只是可能用法的例子，而不是在实际工作中使用<code>Git</code>不可违逆的条例。<br>所以不要畏惧按自己需要对工作流的用法做取舍。不变的目标就是让<code>Git</code>为你所用。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;转载：&lt;a href=&quot;https://github.com/oldratlee/translations/blob/master/git-workflows-and-tutorials/workflow-gitflow.md&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Gitflow工作流&lt;/a&gt;，李鼎&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Jenkins杂记</title>
    <link href="http://yoursite.com/2018/10/08/Jenkins%E6%9D%82%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/10/08/Jenkins杂记/</id>
    <published>2018-10-08T08:29:00.000Z</published>
    <updated>2018-10-08T08:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jenkins"><a href="#Jenkins" class="headerlink" title="Jenkins"></a>Jenkins</h2><h3 id="admin初始密码"><a href="#admin初始密码" class="headerlink" title="admin初始密码"></a>admin初始密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">[root@kvm000 .jenkins]<span class="comment"># cat /root/.jenkins/secrets/initialAdminPassword </span></div><div class="line">1342c187dcfcdbf8a1c38dd21b773d95</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Jenkins&quot;&gt;&lt;a href=&quot;#Jenkins&quot; class=&quot;headerlink&quot; title=&quot;Jenkins&quot;&gt;&lt;/a&gt;Jenkins&lt;/h2&gt;&lt;h3 id=&quot;admin初始密码&quot;&gt;&lt;a href=&quot;#admin初始密码&quot; class=&quot;header
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Item1,考虑使用静态工厂方法替代构造器</title>
    <link href="http://yoursite.com/2018/10/07/Item1,%E8%80%83%E8%99%91%E4%BD%BF%E7%94%A8%E9%9D%99%E6%80%81%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95%E6%9B%BF%E4%BB%A3%E6%9E%84%E9%80%A0%E5%99%A8/"/>
    <id>http://yoursite.com/2018/10/07/Item1,考虑使用静态工厂方法替代构造器/</id>
    <published>2018-10-07T07:50:00.000Z</published>
    <updated>2018-10-07T07:50:00.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简述"><a href="#简述" class="headerlink" title="简述"></a>简述</h2><p>客户端可以通过类提供的公共构造方法获取类实例，除此之外，还可以使用静态工厂方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Boolean <span class="title">valueOf</span><span class="params">(<span class="keyword">boolean</span> b)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> b ? Boolean.TRUE : Boolean.FALSE;</div><div class="line">&#125;</div></pre></td></tr></table></figure><a id="more"></a><h3 id="好处"><a href="#好处" class="headerlink" title="好处"></a>好处</h3><h4 id="拥有名称"><a href="#拥有名称" class="headerlink" title="拥有名称"></a>拥有名称</h4><p>使用静态工厂方法替代构造器，不同于构造方法名称固定，可自定义见名知义的方法名，相对于不同参数签名的多个构造方法设计，更加优雅。</p><h4 id="不创建新对象"><a href="#不创建新对象" class="headerlink" title="不创建新对象"></a>不创建新对象</h4><p>使用静态工厂方法替代构造器，不像构造方法，每次在被调用的时候，都需要new一个实例。</p><h4 id="返回子类型"><a href="#返回子类型" class="headerlink" title="返回子类型"></a>返回子类型</h4><p>使用静态工厂方法替代构造器，不像构造方法，它们可以返回其返回类型的任何子类型的对象。<br>例如，Java Collections Framework 的接口有45个实用程序实现，提供不可修改的集合，同步集合等。<br>几乎所有这些实现都是通过静态工厂方法在一个不可实例化的类<code>java.util.Collections</code>中获取的。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;T&gt; <span class="function">List&lt;T&gt; <span class="title">unmodifiableList</span><span class="params">(List&lt;? extends T&gt; list)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> (list <span class="keyword">instanceof</span> RandomAccess ?</div><div class="line"><span class="keyword">new</span> UnmodifiableRandomAccessList&lt;&gt;(list) :</div><div class="line"><span class="keyword">new</span> UnmodifiableList&lt;&gt;(list));</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="返回对象可变化"><a href="#返回对象可变化" class="headerlink" title="返回对象可变化"></a>返回对象可变化</h4><p>A fourth advantage of static factories is that the class of the returned object can vary from call to call as a function of the input parameters.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**</span></div><div class="line"> * Creates an empty enum set with the specified element type.</div><div class="line"> *</div><div class="line"> * <span class="doctag">@param</span> &lt;E&gt; The class of the elements in the set</div><div class="line"> * <span class="doctag">@param</span> elementType the class object of the element type for this enum</div><div class="line"> *     set</div><div class="line"> * <span class="doctag">@return</span> An empty enum set of the specified type.</div><div class="line"> * <span class="doctag">@throws</span> NullPointerException if &lt;tt&gt;elementType&lt;/tt&gt; is null</div><div class="line"> */</div><div class="line"><span class="keyword">public</span> <span class="keyword">static</span> &lt;E extends Enum&lt;E&gt;&gt; <span class="function">EnumSet&lt;E&gt; <span class="title">noneOf</span><span class="params">(Class&lt;E&gt; elementType)</span> </span>&#123;</div><div class="line">Enum&lt;?&gt;[] universe = getUniverse(elementType);</div><div class="line"><span class="keyword">if</span> (universe == <span class="keyword">null</span>)</div><div class="line"><span class="keyword">throw</span> <span class="keyword">new</span> ClassCastException(elementType + <span class="string">" not an enum"</span>);</div><div class="line"></div><div class="line"><span class="keyword">if</span> (universe.length &lt;= <span class="number">64</span>)</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> RegularEnumSet&lt;&gt;(elementType, universe);</div><div class="line"><span class="keyword">else</span></div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> JumboEnumSet&lt;&gt;(elementType, universe);</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="返回对象不需要存在"><a href="#返回对象不需要存在" class="headerlink" title="返回对象不需要存在"></a>返回对象不需要存在</h4><p>A fifth advantage of static factories is that the class of the returned object need not exist when the class containing the method is written</p><p>服务提供程序框架java.util.ServiceLoader</p><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><h4 id="不能subclassed"><a href="#不能subclassed" class="headerlink" title="不能subclassed"></a>不能subclassed</h4><p>仅提供静态工厂方法的主要限制是，由于类没有public或protected的构造方法(一般不提供公开构造方法，不绝对，例如Boolean)，因此不能子类化。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</div><div class="line"><span class="function"><span class="keyword">private</span> <span class="title">A</span><span class="params">(B b)</span> </span>&#123;</div><div class="line"><span class="comment">//...</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> A <span class="title">of</span><span class="params">(B b)</span> </span>&#123;</div><div class="line"><span class="keyword">return</span> <span class="keyword">new</span> A(b);</div><div class="line">&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure><h4 id="不利于查询"><a href="#不利于查询" class="headerlink" title="不利于查询"></a>不利于查询</h4><p>使用静态工厂方法的第二个主要的缺点是，程序员查找起来比较困难。<br>这些方法没有在API文档中突出，因此很难弄清楚如何实例化一个提供静态工厂方法而不是构造函数的类。<br>以下是静态工厂方法的一些常用名称。</p><p>from—A type-conversion method that takes a single parameter and returns a corresponding instance of this type, for example:</p><p>Date d = Date.from(instant);</p><p>of—An aggregation method that takes multiple parameters and returns an in-stance of this type that incorporates them, for example:</p><p>Set<rank> faceCards = EnumSet.of(JACK, QUEEN, KING);</rank></p><p>• valueOf—A more verbose alternative to from and of, for example:</p><p>BigInteger prime = BigInteger.valueOf(Integer.MAX_VALUE);</p><p>instance or getInstance—Returns an instance that is described by its pa-rameters (if any) but cannot be said to have the same value, for example:</p><p>StackWalker luke = StackWalker.getInstance(options);</p><p>create or newInstance—Like instance or getInstance, except that the method guarantees that each call returns a new instance, for example:</p><p>Object newArray = Array.newInstance(classObject, arrayLen);</p><p>getType—Like getInstance, but used if the factory method is in a different class. Type is the type of object returned by the factory method, for example:</p><p>FileStore fs = Files.getFileStore(path);</p><p>newType—Like newInstance, but used if the factory method is in a different class. Type is the type of object returned by the factory method, for example:</p><p>BufferedReader br = Files.newBufferedReader(path);</p><p>• type—A concise alternative to getType and newType, for example:</p><p>List<complaint> litany = Collections.list(legacyLitany);</complaint></p><p>In summary, static factory methods and public constructors both have their uses, and it pays to understand their relative merits. Often static factories are preferable, so avoid the reflex to provide public constructors without first consid-ering static factories.</p><p>参考：<br><a href="https://www.oreilly.com/library/view/effective-java-3rd/9780134686097/" target="_blank" rel="external">Effective Java Third Edition</a>，Joshua bloch</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;简述&quot;&gt;&lt;a href=&quot;#简述&quot; class=&quot;headerlink&quot; title=&quot;简述&quot;&gt;&lt;/a&gt;简述&lt;/h2&gt;&lt;p&gt;客户端可以通过类提供的公共构造方法获取类实例，除此之外，还可以使用静态工厂方法。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; Boolean &lt;span class=&quot;title&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;boolean&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; b ? Boolean.TRUE : Boolean.FALSE;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
